<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2020年11月小结</title>
    <url>/page/202011291930.html</url>
    <content><![CDATA[<p>  有时候，不，我时常在想，是不是当初我不走前一步，我就能永远的静静的偷偷的看着你</p>
<hr>
  <a id="more"></a>

<p>  啊，最近的话，又开始进入了挂机模式呢。就是我每天很努力的工作，和一点都不努力工作，结果都是一个鬼样的啊！自从做了ios这个项目后，我就感到我已经触摸到自己技术的天花板了，我怕也就“系甘大啦”。怎么说呢，在拼尽了全力，实现了ios的sdk后，现在再接我们老大的代码，我感觉有点力不从心了。怕是，这条路已经走到了尽头。尽管我已经很努力，但真的看不明，这是实打实的境界上的差距吧。</p>
<p>  小姐姐生日了，过了一个很美好生日。我想我是永远到做不到的吧，那就祝他们永远的幸福吧，真心的。我把小姐姐删了。有时候，唔系，系有好多时候，我系度林，系唔系当初我唔行前果一步，我就可以永远甘静静甘偷偷甘睇住你~但我又怕万一我是那个万一呢…</p>
<p>  此去归来，楼依旧，人不在。</p>
]]></content>
  </entry>
  <entry>
    <title>2020年10月小记</title>
    <url>/page/202010312041.html</url>
    <content><![CDATA[<hr>
  <a id="more"></a>

<pre><code>因为无能为力,所以随波逐流,因为心无所属,所以随遇而安

我还真是一个自己坑自己的好手,2019年帮公司完成了一个vpn程序,可以公网访问公司内网资源的功能,结果疫情来了.我们在家也能无障碍访问公司内部资源呢,完全无障碍的远程办公啊,真TM棒!2020年完成了跟电信合作的反欺诈网站拦截,可以把不良网站转跳到的地方公安的落地页,然后我就再也打不开我珍藏已久的网址了.我当时就应该在程序里面把我自己的那个账号给加个白名单的吧,谁TM知道啊!!

在月中的时候...是离我问小姐姐要了微信后,时隔了整整五个月之后,我又...啊,那我是第一次看到了没带口罩的小姐姐!!!!!只是匆匆的瞄了一眼,我从来都没有见过你是么,但是就凭那几根被风吹散的头发和小半个侧面,我就停下了脚步,阿西吧,那是多么熟悉的心动的感觉,我整个心都在颤抖啊,这是我五个月日日期盼的场景,我们就这样相遇了,你就这样出现在我面前.但我还是默默的绕到了背后静静地看你的小脚脚,我不敢上去靠近你,我会无法抑制我内心的冲动,我一定无法抑制的.你不是去lyy,那目标就一定是qdh了吧,我提前绕道骑了个小单车先到了qdh.我不确定你是否还记得我,我也不敢多靠近你一点点,我就在你旁边的一节车厢,然后我就被人冲散了,跟丢了.我们还会再遇见的吧?!

由于某种原因,老板让我去接我们老大的代码,他是怎么敢的啊.老大在第十层,而我才在第三层啊,初生牛犊不怕虎的我又是怎么敢的啊,居然还跟老板说一个星期就能读懂老大的代码,两个星期就能开始开发了,星爷也不敢这么演吧,你的程序员的自我修养呢?既然是你先给我画的大饼,那我也给你画个饼吧,一来不用钱,二来可以充饥.我有无限猴子定理,连ios都能搞掂,我还怕啥?

加油吧,小坚坚!!</code></pre>]]></content>
  </entry>
  <entry>
    <title>2020年6月中小记</title>
    <url>/page/202006210952.html</url>
    <content><![CDATA[<hr>
  <a id="more"></a>

<p>　　也罢，原来有的人，只是遇见就已经花光了所有的运气，又怎能奢求一生一世。<br>　　<br>　　在此之前，我从来不相信什么一见钟情。但是那一天她的出现，啊哈！是从天而降的惊喜。生命中，总有些遇见，惊艳了时光，也惊醒了沉睡中所有的感觉。</p>
<p>　　那是某个四月的夏天，那一天刚好是要去送资料给客户，不用太早的去公司。就在我每天都坐的那台公交车上，我一抬头就看见了她，一个很漂亮的小姐姐。尽管是带着口罩，但是，啊！脑海中就只剩下四个字“仙气飘飘”，就是那种满眼都是星星，心跳加速，体内荷尔蒙快速分泌的感觉，我想这就是一见钟情吧。脑袋里突然窜出一首词“妙手写徽真，水剪双眸点绛唇。疑是昔年窥宋玉，东邻，只露墙头一半身”。自从我第一眼见到她的时候，我便深深的喜欢上她了。</p>
<p>　　而后经过了几天的观察与实验，终于发现了她的上班时间，是比我要晚小半个小时。于是每天就早早的来到公交车站上等，期盼着她的到来。她喜欢听音乐，我也弄了个无线耳机听歌。尽管还不知道她长什么样子，不知道她的性格，她的年龄，对她的一切，我都一无所知，但就是不知道她身上有一种什么样的气质，在深深的吸引着我。可能是她的眼神吧，啊！这该死的，无处安放的魅力。我每天都忍不住偷偷的偷拍她一张照片，她衣柜里面的衣服都快被我拍光了吧(捂脸)。</p>
<p>　　就这样过了快一个月。</p>
<p>　　在五月某天的清晨，公交车刚好走了一趟，她就来了。公交站台上就只剩下我们两个人，我脑袋一热，也不知道梁静茹什么时候给的勇气。我就直接冲上去问她要微信了，理由嘛，很是蹩脚，就说我要迟到了(当时已经连续迟到快一个月，但公司只有两个搞技术的，老板也不能拿我怎么样)。其实我当时是有种很强烈的感觉，感觉到如果我不上去的话，我就再也见不到她了。啊！那是我第一次当街向别的女生要微信，衣服都湿透了呢，不过她笑起来真的很好看。<br>　　<br>　　我如愿以偿的得到了她的微信，并且知道她也是广东人，会讲粤语，单身还没男朋友，当时我的内心都要开心得飞了起来。在路上还因为看她的朋友圈，坐过了一个公交站，两个地铁站(捂脸，快十点才到公司，老板都对我无语了鸭)。她是个十分优秀的小姐姐呢，当我看到她的自拍照的时候我就知道我完蛋了，已经无可救药了。</p>
<p>　　那天我绞尽脑汁想了个自认为非常风趣幽默的自我介绍，在晚上下班的时候发给了她。<br>　　五分钟后(是不是有事)<br>　　半小时后(是不是在洗澡)<br>　　四个钟后(是不是把我拉黑了)<br>　　凌晨两点(机智的我把网络关掉了，睡觉)<br>　　凌晨四点(突然惊醒，打开了网络，继续睡觉)<br>　　第二天(可能没机会了吧，没想到还没开始就已经结束了呢，好可惜)<br>　　第三天(可能我们还是没有缘分吧，我以后都不会想你。早知道啊，当时就不应该那么冲动)<br>　　第三天的下午，她突然回了说回老家了，信号不好(没事没事，哈哈哈，心底里乐开了花，原来只是老家没信号，只要你说，只要我信，我想我已经彻底完蛋了，事实的真相只有一个。啊！那就是——我可喜欢死手机屏幕那边的死鬼了！)<br>　　<br>　　情不知所起，一往而深<br>　　<br>　　她的名字很欢乐，就像她的人一样。后知后觉的我到了第二天的时候才乐呵了一天。最开始的一个星期，我每天都处在异常亢奋的状态，每天早上四五点就扎醒，看见什么都想和她分享，满脑子都是她。但是一来我是个闷骚的人，二来我怕太热情会把她吓跑了，可每次分享的都是什么鬼。啊！我是恨不得把我的心掏出来给她看看，我是有多喜欢她。<br>　　<br>　　我从不是一个会说能道的人，经常还词不达意，只能在网上疯狂搜聊天话术，搜知乎，可是一个都没能用上。我亦是一个超级被动的人，哈，但是我不主动，她更不会主动，那么哪里会有故事发生。鬼才知道我每次找她都鼓足了多大的勇气。每次跟她在一起聊天的时候就觉得特别开心欢乐。我只能把她所有资料都导到脑图中，然后进行数据分析。<br>　　<br>　　我93，她95<br>　　我巨蟹，她天蝎<br>　　我们都喜欢摇滚，烹饪<br>　　我们都曾经呆过一样的城市<br>　　……<br>　　<br>　　她喜欢听歌，那我就把她推荐的歌都存起来每天听，想象她听歌时的心情。她喜欢吃🍬，我自己也买了一大袋棒棒🍬吃，体会她吃糖时的感觉。她喜欢花，我就订了一束玫瑰，到最后还是没送出去，因为我等了好久好多天都没等到她。我想和她分享我的一切，我还曾经想过，既然她说要回她的家乡，那我现在便可以去到她的城市，安个小窝，为她盘间花店，我自己开家清吧，两个人就这样一辈子。</p>
<p>　　我心之所困所扰所念所盼皆为虚妄，所愿所求所奢所望皆为痴念，又与她何关？</p>
<p>　　也是有次无意之中，发现她居然还喜欢玩游戏，还玩的挺厉害的(其实最开始的时候，我已经下过几个热门Tencent的游戏专门去看过好友列表，可能是看漏了吧，真是个巨大的失误，捂脸)，可是并没有用，我是个“九九六”的工程师，每天除了工作也没什么时间玩游戏，只能趁周末的时候憋着口气冲上了跟她匹配的最低段位。好歹想当年我也是dota天梯1500最佳五号位，lol郊区铂金辅助。每天割了两个小时睡眠时间，只为追上她的脚步，可是，啊！我大可不必。这让我回忆起当初那种用游戏麻醉自己、永堕深渊的感觉，一个接一个的游戏，没有目标的虚度着光阴。我很是讨厌那时候的我。</p>
<p>　　喜欢得太过的卑微了、太自作多情、太一厢情愿。可是，我既没有让她一见钟情的资本，可能也没有让她日久生情的条件。最后到头来，也只是自己感动了自己。<br>　　<br>　　哈，我只想要谈一场以结婚为目的的恋爱而已啊。我感觉我现在无论是身心，各种软硬件都已经准备好了，可能她还没有吧，也可能她已经有她的心上人。我满眼都是她，她满眼都是他，这是个无解的死循环吧。我已经26有余了，我能自己掌控时间已经所剩无多。一辈子很长，可我真的好想陪她走一段路！<br>　　<br>　　但是啊，我也会怂的，喜欢上一个人，也是需要勇气的。一见钟情只需要0.3秒，忘掉一个人不知还要蹉跎多少岁月。</p>
<p>　　呐，只是喜欢你，没说非要在一起。<br>　　如果只是喜欢你，那该多好。我还可以跟以前一样，在车站上远远的看着你，不会去强求你来关心我、在乎我，不会因为你不理我而难受到不知所措、夜不能寐，也不会每时每刻刷朋友圈去在乎着你关注着你的一举一动。<br>　　如果只是喜欢你，那该多好。我就不会因为怕你不再喜欢我了，怕我不好看而自卑到尘埃里去。<br>　　如果只是喜欢你，那该多好。我还是从前那个没心没肺的少年，能一觉睡到天亮，至少不会在深夜还在写着这些文字。<br>　　好像只是喜欢你，也没说非要在一起。</p>
<p>　　我只是刚好遇见你呀~ 可能是时光里最美的赠予了。<br>　　<br>　　睡吧，梦里什么都有。嘿，愿她的梦里会有听不完的歌和喝不完的酒。</p>
]]></content>
      <categories>
        <category>生活点滴</category>
      </categories>
      <tags>
        <tag>cold</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年5月小记</title>
    <url>/page/202005311800.html</url>
    <content><![CDATA[<p>  想想也罢，原来有的人，只是遇见便已花光了所有的运气，怎么还敢再奢求一生一世？</p>
  <a id="more"></a>

<hr>
<p>(好气，自己生成的网易云音乐的外链总是无法播放，先自己手动播放一首《小半》～～)</p>
<p>今年的五月份，因该是从四月份开始，我去上班的一段路口被封住了，附近几个站点的人都聚了过来我楼下的公交站乘车。</p>
<p>那一天刚好是要去送资料给客户，不用太早的去公司，就在公交车上，看见了一个很漂亮的小姐姐，尽管是带着口罩。但是，啊，脑海中就只剩下四个字“仙气飘飘”，就是那种满眼都是星星，心跳加速，体内荷尔蒙快速分泌的感觉，我想这就是一见钟情吧。</p>
<p>而后经过了几天的观察，终于发现了小姐姐的上班时间，是比我要晚小半个小时吧。于是每天就早早的来到公交车站上等，等着她的到来。她喜欢听音乐，我也弄了个无线耳机听。她喜欢吃🍬，我自己也买了🍬吃。尽管还不知道她长什么样子，不知道她的性格，她的年龄，对她的一切，我都一无所知，但是不知道她身上有一种什么样的气质，在深深的吸引着我。啊，这该死的魅力。我每天都忍不住偷偷的给小姐姐拍一张照片，她衣柜里面的衣服都快被我拍光了吧(捂脸)</p>
<p>就这样过了大半个月。</p>
<p>在某天的清晨，上班的公交车刚好走了一趟，她就来了。公交站台上就只剩下我们两个人，我脑袋一热，也不知道梁静茹什么时候给的勇气。我就直接冲上去问她要微信了。其实我当时是有种很强烈的感觉，感觉到如果我不上去的话，我就再也见不到她了。</p>
<p>。。。</p>
<p>预言家的预言成功。</p>
<p>。。。</p>
<p>然后，在往后的日子里，无论我等到几点，就再也等不到那个小姐姐了。</p>
<p>有幸遇见你，也只是刚好遇见你，哈，便已经花光了我所有的运气了呢。</p>
<p>有缘再会，后会无期</p>
<p>ps：五月忠告</p>
<p>莫要带着口罩跑步</p>
<p>莫要带着口罩哭泣</p>
<p>睡吧，梦里什么都有</p>
]]></content>
      <categories>
        <category>生活点滴</category>
      </categories>
      <tags>
        <tag>cold</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年7月小记</title>
    <url>/page/202008012300.html</url>
    <content><![CDATA[<hr>
  <a id="more"></a>

<p>  听说睡前喝杯热牛奶，有助睡眠哦。从前有个小姐姐，她整天睡不好，早上dubidubi(Ich Hab Dich Lieb) 晚上 sabisabi(Schnappi)，周四周五凌晨三点都可以不睡觉的，卡着点发了个朋友圈(Finding Hope-3:00 AM)，还老做噩梦，上班就是在补觉钓鱼。刷爆了我的朋友圈~~终于有天良心发现了，设置朋友圈为仅三天可见，我的世界总算是清静了下来。</p>
<p>  呐，最近几个项目一起推进，上班的时候都没有什么时间摸鱼。为了赶项目进度，急急忙忙的写了个只是能支持基础业务的程序，想着以后优化，然后就没有然后了。没有空更新blog，以后一定会补上的…才怪。</p>
<p>  最近公司扩张在不断的招人，位置都不够坐了。于是老板在8楼租了间新办公室专门给研发部门使用，就是苦了测试的小伙伴，每次碰到复杂一点的bug都要从18楼跑下来8楼问问题~选了个靠窗边的位置，晴能看蓝天白云，阴能静坐听雨，写代码时那个写意啊。唯一不好的可能就是新办公室是向东的，晚上的时候就再也看不到日落了。</p>
<p>  这个月不知道为什么，总是肋间神经疼痛，隔个星期痛一次，已经痛了四次了，也不知道是什么原因，打算再痛两次就去医院照照心胸CT了。我已经脑补好了，万一患上了什么绝症，就抛弃一切，顶着疫情去环游世界了。但为什么有些事情，必须在绝境的时候才选择去做呢？！</p>
<p>  约了三次，终于还是把老叔给我介绍的相亲对象约出来了。本来就没抱什么希望，聊天半小时回一条，比小姐姐还要高冷，我也不知道我是怎么能忍的，但亲戚介绍的总得有个交代不是？人是挺不错的，但对不上眼缘，也罢了。</p>
<p>  之前说好了生日之后再也不玩游戏了，因为小姐姐的原因，我是再也不想玩王者了。但是这个月新出的什么放开那三国3、龙之谷2。啊！那都是装载了我满满的回忆的IP，继续肝硬化走起，就由我图个七天乐吧。哥打的不是游戏，是情怀。</p>
<p>  因为那个人的出现，所以才能写下这些字，说出这些话。可是虽然我写下来了，却不知道把这份情愫和激动分享给谁。可能以后会有那么的一天，又会发现这些美好的字眼全部都不那么重要了。</p>
<p>  那就这样吧,七月!</p>
<p>  ps：无巧不成书，就在我准备hexo d的时候，电脑就突然蓝屏了。。。我啊也是醉了，拿去修了一下显卡。晚了一天上传~</p>
<p>  ===</p>
<p>  七月忠告:</p>
<p>  喜欢看日落的孩子，大概会很悲伤！</p>
<p>  因为未知，所以panic吧 – golang</p>
<p>  我不知道这个世界是否还有希望  – 龙之谷2</p>
<p>  有一个夜晚，我烧毁了所有的记忆，从此我的梦就透明了，有一个早晨我扔掉了所有的昨天，从此我的脚步就轻盈了。   –泰戈尔</p>
]]></content>
      <categories>
        <category>生活点滴</category>
      </categories>
  </entry>
  <entry>
    <title>2020年7月中小记</title>
    <url>/page/202007192130.html</url>
    <content><![CDATA[<p>  生活如阿泽，感情如狗焕。</p>
<hr>
  <a id="more"></a>
<p>　　<br>  如果要问我，一见钟情的持续时间是多久，我想我已经知道答案了。是三个月整！</p>
<p>  尽管我现在还是很想她，无论看到什么，脑子都会拐了好几个弯，然后想到了她。这个星期要做个项目设计，我是真的崩溃了，一个人隔几分钟就会在你的脑子里出现是怎样一种折磨。但是我知道这不过是临死前的回光返照罢了。</p>
<p>  我每天都想和她分享夕阳西下的美，可是我的心就像那夕阳一样，一点一点的随着时间沉没。我承认现在的我很喜欢很喜欢她，可惜无论我怎样演算，我都看不到我们的未来。</p>
<p>  我知道我自己，更有丰富的经验，怎样以最快的速度忘掉一个人，那就是把她的一切一切都摆到你的面前。</p>
<p>  I just love myself </p>
<p>  耳机一带，谁都不爱。</p>
<p>  毕竟蟹子的眼泪从来都不值几个钱！</p>
<p>  她本来是我的，时光错漏，就流落在另一个男人的生命里，就像家具店里一件给人预定了的家具那样，她身上已经挂着一个写着’SOLD’的牌子，有人早一步要了，我来得太迟，即使多么喜欢，也不能把她拿走，只能站在那里顾影自怜。</p>
<p>  现在回想起来，两个月前的那次冲动，那真是个疯狂而愚蠢的决定。其实我撒谎了，我其实不怎么喜欢听歌，也就每隔一两个月听一两次酷狗，但是在这两个月里，我注册了个网易云，听了12000多分钟的歌。我也不怎么喜欢打农药，还贼菜，也就表弟放假的时候会陪他打一下，但是为了能和你一起玩一把游戏，这两个月我打了200多场的王者。我刷了不知多长时间的知乎微博跟贴吧，隔空看了两个线上演唱会(五月天、陈奕迅)。只为靠近她一点点。</p>
<p>  呵，真是个温暖又可爱的……傻子啊。爱的那么深沉而不被人知。　</p>
<p>  <img src="/images/hx_first_time.jpg" alt=""><br>  <img src="/images/NE_music.jpg" alt=""><br>  <img src="/images/NE_music_1.jpg" alt=""><br>  <img src="/images/NE_music_2.jpg" alt=""><br>  <img src="/images/wzry.jpg" alt=""><br>　　<br>  也应该结束了，也罢</p>
]]></content>
      <categories>
        <category>生活点滴</category>
      </categories>
  </entry>
  <entry>
    <title>2020年6月小记</title>
    <url>/page/202007012310.html</url>
    <content><![CDATA[<p>  再坚持一下吧，毕竟我不知道我什么时候就会放弃，就好像那无缘无故的开始一样</p>
<hr>
  <a id="more"></a>


<p>我已经快两个月，没有认真的写代码了。好似就是从开始写这个blog开始的吧</p>
<p>上班就是在摸鱼,隔几天就宣布,这个方案行不通,需要找另外一个方案继续研究,我都不知道原来我自己的戏这么好</p>
<p>打字打的噼里啪啦,其实只是在写blog或者打了个寂寞啦</p>
<p>我不知道中了什么毒，但是我好想她，怎么描述这种感觉呢。就是每天都把她头像顶置，然后看着她被一条条信息刷下来，然后再次的顶置，再次的刷下来。</p>
<p><strong>我好仲意你啊，我真系好仲意你。仲意到我自己都好觉得好惊。我系好仲意你，甘又点样喔？没用噶嘛，你望都唔望我一眼，我明白噶，我真系明白噶。有D野根本就不可以强求</strong></p>
<p>她那个星期五说到广州出差，星期天发的定位，我check左一下，好家伙就离我们公司十分钟的路程呐。星期一中午我就想去找她，请她喝杯奶茶都好啊，但是我不知道她还在不在呢，而且下了一个中午的大雨。晚上的时候就想推荐她去看亚艺看下荷花，可是她并没有回我的消息。她第二天就自己去了电视塔，这是心有灵犀吗？就算再平凡普通的事，一旦与她相关，我就相信这一定就是缘分QAQ。我好恨，恨我自己没有勇气。一次又一次的错过</p>
<p>每天把两个小时的睡觉时间分出来打游戏真的好难，我也只会辅助，其他位置玩得好菜，演员又多，终于是打到了星耀一五星。可是又怎样呢，我上了王者或者荣耀她也不会多看我一眼的吧，我不上又怎样跟她排呢。尽人事，听天命</p>
<p>过了夏至，每天傍晚，西斜的太阳都会通过办公室的斜窗照到我身上，然后我的背后又有块反射的玻璃镜把太阳光正正地射到我电脑屏幕上面，就是说我前后都被太阳照着，整个办公室就我那位置是这样子啊。我快裂开了啊，这就是正道的光吗</p>
<p>今年阳历跟农历只差了一天哦，所以就一起过了呀。往年世界和平的愿望居然没有实现呢，我也不想再许什么愿望了。就希望下一年还是没有女友吧~QAQ</p>
<p>二叔介绍了一个相亲对象给我呢，虽然没有一见钟情的感觉，但是先聊着吧。以后的事情，谁知道呢</p>
<p>再见了颓废的六月，你好啊七月！</p>
<p>六月忠告</p>
<p>糖吃完了，人大概也就忘了吧</p>
<p>你好这是你自己点的一杯平凡 </p>
<p>所有的事物都会被定格在她最美好的一刻</p>
]]></content>
      <categories>
        <category>生活点滴</category>
      </categories>
      <tags>
        <tag>cold</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年8月小记</title>
    <url>/page/202009052020.html</url>
    <content><![CDATA[<p>  八月，入目无他人，四下皆是你。</p>
<hr>
  <a id="more"></a>


<p>既然开了一个头，那么如果能坚持下去的话，我希望就坚持下去吧，<br>所以喜欢是会消失的，是吗？是的吧！<br>我已经有很多很多天没有看见她了，在某天的早上，当我醒来的时候，啊，我好像突然忘记她的样子了</p>
<p>我好像已经用光了我的运气呐，不会写的程序，就算用了无限猴子定理，也都写不出来正确的程序啊。果然运气型的选手，是注定走不远的嘛。公司的ios就快要过期了，我也没有底什么时候才能完成这个ios的项目，每天都慌的一批。</p>
<p>最近喜欢上了吃黑巧克力，什么瑞士莲85%，大A100%，咖啡特使77%，就剩domori还没有试过。感觉还不错，虽然苦，但是提神啊，黑巧续命~</p>
<p>入目无他人，四下皆是你。这个居然是向日葵的花语，我自己在后面添了两句。一生只向阳，朝朝待日晞。</p>
<p>闲的时候看了下中山公园后面一块的“望江”房子，均价2w一方，百来方的房子，仅仅勉强够付首期，如果贷140w，月供7700，30年后总共要还260w。额滴个神啊，人拆不艰难呐。加油努力找钱吧！</p>
<p>八月忠告：</p>
<p>莫要在夏天网购巧克力，会溶掉的…</p>
<p>给我一个目标，然后我就会披星戴月，不顾一切的向着这个目标前进</p>
]]></content>
  </entry>
  <entry>
    <title>2020年9月小记及国庆湛江游</title>
    <url>/page/202010071935.html</url>
    <content><![CDATA[<hr>
  <a id="more"></a>

<p>  多年以后我才明白 在我做决定的时候，我是不后悔的，这或许就已经足够了<br>　　<br>  整个九月都在不安中度过，ios的事情一直都没有处理好，这就像是一座超级大山压在了身上，让人喘不过气。最后勉强东拼西凑的弄出来了一个好像能用的怪物出来，简直连我自己都不忍直视。<br>　　<br>  九月初认筹了恒大滨江2w，月中又看中了中交白兰，认筹3w。我是怎么敢的啊，把所有的钱都拿去做首期，然后每月工资勉强的可以供上房子，万一日后真的有什么事情，那该怎么办呢？还是先缓一缓再说吧。<br>　　<br>  国庆的时候，鼓起了所剩无几的勇气，自己一个人去了湛江。我想，这趟回来后，我就能真正的忘掉了吧。磨磨蹭蹭的把票买了，差不多是就要出发的时候才确定买回来的票，我也不知道我究竟是不想去还是不想回来。<br>　　<br>  在动车上的时候，你永远不知道我脑海里单曲循环的那首歌。”当火车开入这座陌生的城市”，”我在昨天的梦里又看见了你”。想了无数骚的一批的文案，最后还是一条都没有发出来。就这样咻一声的就到了吴川。我站同样的位置也拍了一张照片，那是吴川站的正面照，那天也是阳光明媚的一天。还好吴川有共享单车，我踏遍你所有走过的路，只为将来不漏遗憾。<br>　　<br>  鼎龙湾是个好地方，那里的海风一吹过来，我就已经醉了，醉的一塌糊涂。那狂暴的海风与那层叠的海水，我真的好喜欢，也不知道是不是幻觉，总是觉得吴川的女生看上去比我们大佛山自己的要顺眼，可能一方水土养一方人吧。晚上的时候，我终是发现小姐姐的男朋友原来就是行舍的老板。真的很像呢，大家的梦想也是开一家清吧，不过人家是已经在实践的路上了，而我自己的还只是一个模糊的构想。真好啊，音乐酒吧，那是喝不完的酒和听不完的歌。那最后就只能给我自己点了一杯莫吉托了。有同学结婚是假的，过来吴川是真的，随便转转是假的，特意来想看能不能碰到你是真的，最后的哈哈是半真半假的。<br>　　<br>  第二天的时候就去了海湾大桥那边，遇上了华立，最气应该就是我可是来旅游的，居然被拉去了打羽毛球，这两天本来我就负重走了很长的路，大概每天走了两万四千多步，还没算骑单车的，拉筋的时候我就知道我明天可能又要白瞎了。华立家靠的海边，直接就能看海。下楼就是金沙湾浴场，房子又大，真好啊~<br>　　<br>  第三天的气候就去了网红打卡点打了下卡吧，水井捞粉油条，一群人坐在一个大水井旁边吃早餐，怕不是脑子有什么问题吧。</p>
<p>  啊就这样了，算了吧，再见了湛江，再见了吴川，也再见了小姐姐。</p>
<p>  有我知道，有我记得，便已足够！</p>
]]></content>
  </entry>
  <entry>
    <title>2020年年终总结</title>
    <url>/page/202012271650.html</url>
    <content><![CDATA[<p>  希望你有自己的喜欢，并且没有被现实击垮，没有被环境同化，内心依旧朝气蓬勃。</p>
<hr>
  <a id="more"></a>

<h2 id="2020年-回望过去"><a href="#2020年-回望过去" class="headerlink" title="2020年 回望过去"></a>2020年 回望过去</h2><p>  2020年即将过去，满打满算的28岁。想想十年前高考作文的的“回到原点”，那时侯我还是十八岁，卜卜脆。年初突如其来的新冠疫情，打乱了所有人的节奏。很遗憾没有打乱我们公司的，也不知道哪个天才想出来的，在公网安全加密访问公司内部资源；也不知道是哪个天才把它给实现出来了，反正我是其中的一个‘帮凶’之一，希望下一年的产品能大卖吧！</p>
<p>  2020年定下的目标与愿望，算是差不多完成了吧，emmm有几个实在是力所不能及，强来也没用的，就由它像需求一样挂到下一年吧。</p>
<h2 id="学习-生活"><a href="#学习-生活" class="headerlink" title="学习/生活"></a>学习/生活</h2><p>  今年在学习上有所懈怠了，才看了三本书，明年要加点油，争取怎么也得看个十本书吧。在路上的时间，多数都是用去看电影了，粗略统计了一下，今年看了大概有一百来部电影，毕竟看电影不需要脑子，尤其是那种烧脑的电影[手动狗头]。</p>
<p>  对于90后的我们，现在学习真的很累，一边要跟60后，“雾月夜抱泣落红”；一遍要用着7080后那些老土而又实用强大的工具和方法；还要一边跟00、10后，“年轻人，耗子尾汁”。真的，你一天不上网就跟不上现在年轻人的脚步了。只有不断学习，才能不被这个社会所淘汰。</p>
<p>  关于旅游，今年只有一趟短途的旅程，就国庆的时候，去了一次湛江。我才不是去找小姐姐呢~<br>  湛江那边感觉现在发展的也不错，唯一不好的大概就是没有共享自行车吧，到处都是电摩。那里的风很大，到海边稍微一吹，人就醉了，安利一下吴川的鼎龙湾，真的很漂亮。</p>
<h2 id="理财-消费"><a href="#理财-消费" class="headerlink" title="理财/消费"></a>理财/消费</h2><p>  今年是投资基金的第四年，投入了￥60000，收益￥8500，其实从长远来看，基金的收益比较稳健。我的经验就是：选几只比较有潜力的基金，进去了之后，跌的时候装死，跌的厉害了就加仓，涨到20%~30%就立刻抛出，总不会亏钱的！基金也是分时段的，像年初肯定就是医疗、科技、电子，九十月就是房地产、食品消费等等。投资基金，要见好就收。</p>
<p>  今年投资犯了个非常严重的错误，就在九月份的时候，投资了河南南阳大宗农产品交易，四个月就回本的产品，拉人头有额外的收益，明摆着是旁氏骗局，按捺不住收益实在是太诱人。本来是想投机一把，赚个几千就收手，运气不好，两万多全投进去了以后，就被割韭菜了，实在是操蛋！</p>
<p>  奢侈品消费，今年是没有的。也不算没有吧，就差点在我妈的怂恿下，在城北那边买了一套房子，定金都已经下了，我自己就在最后关头掉链子了。想想也罢，首期是有的，2w一方的房子，每月月供67千，但我还是自己一个人，背着这么重的房贷，万一我全把钱投进去了，有起个什么事，家里面怎么办呢</p>
<h2 id="工作-业余"><a href="#工作-业余" class="headerlink" title="工作/业余"></a>工作/业余</h2><p>  工作上，我终于是认清了一个事实，那就是我当了快五年的程序员，却根本就不会写代码。我所做的和十万只猴子在写一本莎士比亚的小说的情况是一样的，只不过我是一只逻辑分析力比较强的猴子罢了。从各种结果需求与bug反推导出来的所谓代码，今年终于让我摔了一大跤。</p>
<p>  今年遇到了三个难关，web代理，苹果应用开发，统一网关的开发。分别拖延了半个月到两个月交货。我真的不会写代码啊，猴子写一本书也是要时间的啊。这几次是运气好，我还不知道下一次还有没有这么好的运气。</p>
<p>  五月的某个夜晚，在某种不知名的刺激下，终于是建立起了一直碎碎念的博客。虽然跟想象中的还有很大的差距，虽然没有人能看到，但是在努力的改善中，一直在坚持着写。这个博客，除了访问速度有点慢，对我自己也是有比较大的帮助，也算是比较满意的一个作品。</p>
<p>  <a href="https://t-connor.github.io/page/202012271650.html" target="_blank" rel="noopener">https://t-connor.github.io/page/202012271650.html</a></p>
<h2 id="感情"><a href="#感情" class="headerlink" title="感情"></a>感情</h2><p>  2020，终于结束了一年的单身生活……..准备开始下一年的了。</p>
<p>  在五月分的时候吧，认识了一个小姐姐，只恨下手太慢，被人抢走了，至今还都念念不忘。</p>
<p>  期间也被相亲了两回，都是吃了一顿饭就无疾而终，不欢而散。也罢，感情这事就随缘吧~</p>
<h2 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h2><p>  今年身体状况属于亚健康吧，因为常年的坐在电脑前加班，眼睛视力大概下降了0.1-1点，好在周身痛的情况变小了，也没生什么大病。体重倒是清减了7-8斤。总之一有机会就抓紧运动一下吧，偶尔熬夜，无伤大雅。上周的时候，我爷爷突发脑梗，中风进了医院，至今还没醒过来，概叹人生之无常，望这次能身体平安。</p>
<h2 id="2021年-展望将来"><a href="#2021年-展望将来" class="headerlink" title="2021年 展望将来"></a>2021年 展望将来</h2><p>  某日，突然被问到，你当初的梦想是什么呢？为啥要来做程序员呢？是啊，好像已经过了很久很久，我都快要忘了当年我的梦想只是做一个游戏而已啊。我忘记了故事的开头，也猜不到故事的结局，希望还能不忘初心，乘风前进！</p>
]]></content>
  </entry>
  <entry>
    <title>随笔</title>
    <url>/page/202103131420.html</url>
    <content><![CDATA[<p>  一点一划长,斜斜傍支枪;十字对十字,太阴对太阳.</p>
<hr>
  <a id="more"></a>

<p>  三月五日,躺在病床上两个多月的爷爷,终究是离开了这个世界.希望在天国那里,没有疾病与痛苦.那天晚上我六点半接到通知说爷爷快不行了,一路飞奔回去,还是没有来得及看爷爷的最后一眼,当我回到去的时候,心跳速率已经是一条直线了.我不是想哭,只不过是眼泪不争气的掉下来罢了.</p>
<p>  一开始的时候,我爸妈跟爷爷是住在一起的,爷爷他偶尔也会接我上下学,后来搬出去住了,也就是周末的时候会托管到爷爷家玩耍.再然后大一点的时候,就是一个月左右一次跟爸妈一起回去一起吃饭.我印象最深的就是在上小学的时候的某个周末吧,爷爷问了我一个谜语:一点一划长,斜斜傍支枪;十字对十字,太阴对太阳(打一个字).我想了一个下午都没有想出来,最后他说,这是个廟字,我记住了.</p>
<p>  从十四叔公那里知道,我已经是霍家唯二的男丁了,继承霍家的香火就要靠我或者我的堂弟,还说要把太太公留下来的一个古董茶壶给我.我是一脸懵逼的,我可什么都没做,怎么就一座大山压在我头上了.</p>
<p>  大限将至含笑逝,青烟缕缕上西天. 希望阿公和阿爷一路好走吧</p>
]]></content>
  </entry>
  <entry>
    <title>2021年2月总结</title>
    <url>/page/202102281630.html</url>
    <content><![CDATA[<p>  不知什么时候爱情和梦想也慢慢变成不合时宜的奢侈品</p>
<hr>
  <a id="more"></a>

<p>  2月份只有28天，转眼2021年就已经过去了六分之一，今年的愿望已经有两个是无法完成的了。</p>
<p>  这个月看了15部电影，贺岁档的基本上都看完了吧，感觉最好看的还是华仔的&lt;人潮汹涌&gt;，可惜一开始的排片率太低了，想看都看不到，刘德华也为了宣传电影在抖音开了个账号，关注一波哈哈，毕竟是儿时满满的回忆了。还有从小看到大的达叔也离我们而去了，时不待我啊，要抓紧时间做自己想做的事情了。</p>
<p>  我发现我不能说谎，因为逻辑思维能力太强， 所以说谎的时候，发现自己的谎言出现了比较大的逻辑漏洞，就会无法把慌给圆回去。烦恼，这个因该是看多了烧脑悬疑片的后遗症吧，罪犯一出场的时候就被选定了，难道我还要找各种的理由告诉自己他不是真正的凶手吗。这明显不符合逻辑~</p>
<p>  最近的状态都不好，我那可怜的反射弧没可能是初十的时候才发现已经过完年了，需要开始正常的工作了吧。容易发呆，胡思乱想，就是不想工作。想女人，想买房，想以后的未来，想的很多很多。</p>
]]></content>
  </entry>
  <entry>
    <title>2021年4月小记</title>
    <url>/page/202104222253.html</url>
    <content><![CDATA[<p>  你曾是我平淡生活里的来日方长，最后猝不及防地成为大梦一场。</p>
<hr>
  <a id="more"></a>

<p>我想，剩下的四月份除了要连上12天的班之外， 应该也不会有什么其他的大事情发生了吧~</p>
<p>原来二十一天成就一个习惯真的不是骗人的，我不知道为何会想着她，明明啊只是有一点点的喜欢。可恶啊，像上瘾一样产生了戒断反应了啊。</p>
<p>我好想哭，我知道哭出来就什么事情都没有了，这几天泪腺特别发达，虽然我每天睡了7.5小时，在下午的时候却总是泪流满面，是压抑不住地流泪。但我就是哭不出来，可能是还不够悲伤吧，好气！！！！！就像有什么东西堵住了心，堵得慌</p>
<p>事情是从什么时候发生的呢？上次十四叔公催我结婚，于是就介绍了他小学同学的孙女。两家人约起吃了餐饭，是个不错的小姐姐，同样的巨蟹，一样的顾家，也正在为事业努力地拼搏。还保留着一点点的率真与童趣，确实是一个比较不错的结婚对象。我们一起玩过游戏厅，我夹了一个小兔子娃娃给她，一起玩密室逃脱，一起蹦床。她也会有时发一些动态给我，出差、去了那里玩、在做什么。我甚至已经想到怎样去辞职广州的工作，然后在佛山那边考个事务单位上岸了啊。可惜啊，我不知道是她父母的意思，还是她自己的意思，突然就说没有那种心动的感觉。怪就只能怪我自己的嘴笨，没有逆天的颜值与挥金如土的财富。正正的认证了那一句，没有一见钟情的资本，又缺少日久生情的条件。主要可能是我单方向会错意了吧QAQ</p>
<p>怎么说呢，主要是一厢情愿地’歪腻’了大半个月，把我这个’菇毒’男从机器中拉回现实。我们几乎每天晚上都聊天，也不知道聊的什么，反正就是聊。我们聊天的数量，可以排在这十年中，我微信聊天的totalNum的top3了吧。也许是我寂寞的太久了，突然地戛然而止，把我想要说的都一拳打回我的肚子里，不知道向谁吐说。慢慢就会好的吧，若不是你突然闯进我生活，我怎会把死守的寂寞放任了。放任了之后就上瘾了啊，抓狂！！！！！</p>
<p>屋漏偏逢连夜雨，伞破泪洒青衫湿。</p>
]]></content>
  </entry>
  <entry>
    <title>2021年5月小记</title>
    <url>/page/202105291218.html</url>
    <content><![CDATA[<hr>
  <a id="more"></a>

<p>  super爱豆的笑容都没你的甜, 五月正午的阳光都没你耀眼, 热爱40°的你,滴滴清纯的蒸馏水</p>
<p>  五月份, 啥也不是. 啥也没做, 就酱紫结束了每年最邪恶的五月…</p>
<p>  天气跟往年一样, 热到快要融化了, 不时又伴随着突如其来的滂沱大雨. 噢,又快到高考中考了, 表弟他今年就要中考, 可是成绩并不是十分的理想, 可能连一般的中学都考不上啊, 对前途的迷茫, 像极了现在滴我.</p>
<p>  还没从上一个相亲的缓过神来, 我妈(姑婆)又给我找了个相亲对象, 这个还没相完, 下一个(姨婆)又说给我准备好了. 终究是在相亲的路上渐行渐远了啊!!!! 难道今年就有望脱单了, 希望但愿吧. 现在相的是个99年的小妹妹, 不过怕是没啥后续了, 没见面前就隔一天才回我消息, 见了一面之后好了一点隔半天就回我了, 说工作忙是真的忙, 可是啊我也是个极度缺乏安全感的人呐, 中午撩的晚上睡觉的时候回, 晚上撩的你第二天早上回, 虽然笑起来脸上有两个小梨涡很好看, 但是也不能这样待人嘛, 幸好遇上了我, 也可能是因为遇上了我. 又要开始下一个了吗? 可是我滴钱包应该是受不了吧[哭唧唧] 我已经把N年前游戏里面副本队的长枪与剑号卖掉了,值钱的就剩下法师和辅助了, 再相两次怕是挺不住了. 可是看下一个的照片好像比小姐姐还要耐看… 哎呀呀lsp了[捂脸]</p>
<p>  看了一本书&lt;财富自由之路&gt;, 粗略的算了一下, 我现在也勉强实现了财富自由了. 简单说就是我到28岁整的时候开始, 继承我爸的另一套房子,然后躺在床上一天天的什么都不干,一天三餐,到了九十岁整的时候, 算上通胀的比例, 我还有一丢丢余钱~ 啊!这难道就是传说中的躺平少年吗, 想想都好可怕. 但是我还是想证明一下自己, 就算失败, 我也想要一场拼尽全力之后, 筋疲力尽的失败, 懂了吗? 就像是明知道不可能, 我还是想要问一句, 我们之间还有故事吗?!</p>
<p>  五月底, 好像疫情又开始严重起来了, 虽然打了两针疫苗, 但是还有一点小害怕. 愿山河无恙,人间皆安!</p>
]]></content>
  </entry>
  <entry>
    <title>2021年6月小记</title>
    <url>/page/202106271120.html</url>
    <content><![CDATA[<hr>
  <a id="more"></a>

<p>  热烈庆祝小坚同志,18周岁…零120个月生日快乐!!!!!</p>
<p>  成为程序员的第六年整,正在踏入第七年. 突然好像有点 想放弃最开始的梦想了</p>
<p>  我开始不知道做后端有什么用,什么都看不到. 你说你服务端能支持高性能高并发,能支持几千个用户到几万个用户同时在线并发,后台坚不可破,能抵御中上水平的黑客进攻扫描,有什么作用. 还不如个入行一两年,会写那些炫酷的js/css的小菜鸟吃香.做的东西都是看不见摸不着的.花了个几天时间做优化重构, 功能跟原来的一模一样, 我不如把时间用来摸鱼~ 于是乎, 我也开始搞些前端那些所谓炫酷的东西了. 啊哈, 终究啊还是耐不住寂寞.</p>
<p>  最近有点无聊, 没有相亲滴(只要我相亲速度比我妈介绍的速度快, 我妈就奈我不何了), 不知怎么滴, 又开始想小姐姐了, 明明啊,我真的从未在现实里见过她, 可是我就是忘不掉她的眼睛. Some of us get dipped in flat, some in satin, some in gloss. But every once in a while you find someone who’s iridescent, and when you do, nothing will ever compare. 一见心动，再见倾心。一年了, 那种&lt;&lt;怦然心动&gt;&gt;的感觉还是挥之不去. 那今年再去一次湛江? 我已经幻想好了, 去到小姐姐打工的酒吧, 拿着一把破木吉他, 就在她面前唱&lt;我在昨天的梦里又看见了你&gt;, 管她知不知道我是谁, 反正啊她也从来都没有见过我呀. 唉 再说吧~</p>
<p>  业余时间找了两个副业, 书网拆稿加翻译, 两个月才赚了400不到, 也不知道网上那些副业比主业工资要高的大神们是怎么做到的. 也研究过自己组装鲜花去地铁口摆卖, 可是我知道我自己的审美水平. 再者情人节 520什么的都过了. 创业之难, 难于上青天. </p>
<p>  上年底,终于加了一次工资,来广州两年了,终于赶上了我在深圳辞职的时候的工资水平了</p>
<p>  疫情还是反反复复的,虽然年初已经早早打好了两针, 但是病毒不断地变异</p>
<p>  以前啊,只是每年的五月奇奇怪怪, 今年从五月一直持续到了现在, 都还是奇奇怪怪,太难了</p>
<p>  公司分配了一间员工宿舍, 就在长隆动物园旁边,精装房,还没有人住过的, 我要好好整理一下, 把房间布置成我自己喜欢的样子</p>
<p>  写一封信给下一年的自己吧</p>
<p>  愿望,30岁之前有楼有老婆…笑死,根本找不到</p>
<p>  the end~</p>
]]></content>
  </entry>
  <entry>
    <title>2021年8月小记</title>
    <url>/page/202108311616.html</url>
    <content><![CDATA[<hr>
  <a id="more"></a>

<p>  当时只是写的一个小玩具demo,突然销售就跑过来跟我说已经拿去卖给客户;额,需要支持十几万的数据流,我人都傻了,到时候程序带不起来挂了,你可不要拿着菜刀过来追杀我QAQ</p>
<p>  八月份,好像忘记写一个重要的人了.酱酱酱酱 ==&gt; 我生命中新增的一个大哥大,平常负责接送我上下班(某人不知廉耻地蹭车),请我吃饭(蹭吃蹭喝),请我看书(是某人自己拿的,他并没有请).公司分配的宿舍里隔壁房间的大哥.我梦想中向成为的人.三十多岁,在深圳有车有房,已婚,有个小孩,刚从腾讯做了十年出来(实现了财务自由,我猜的),放弃了稳定高薪,来追逐自己的理想.简直是我做梦都想成为的人,也不知道什么姿势我才能做这样的梦.他的大度与阔达与某人比起来真的天壤之别.好在我的学习能力也不差,正所谓近朱者赤近墨者黑,多多靠近大哥,或许我也能变得跟大哥一样的优秀,就算达不到大哥的高度,大哥的高度的一半我也是可以接受的.</p>
<p>  某天吧,牙齿咬东西突然有点痛.去了间私人牙科(黄X德),医生说帮你洗一下,看一下是什么情况.然后就把牙齿洗出来了一个大洞,说我牙齿已经钙化,伤及到牙髓了,我几度怀疑被坑了,但是牙齿已经没了一截了.没办法了,只能做治疗+补牙了.平常还是要注意一下牙齿的清洁,不要遗留残渣在牙缝里面</p>
<p>  八月份有点忙,因为有几个同事离职了,而且交付的项目又越来越多…好吧编不下去了,好像就没有空闲下来的时候,每次眼看着快要闲下来的时候,总是一个又一个的任务接踵而来.希望下个月能闲一点[乖巧]</p>
<p>  Aha, I also fell in love with you when the first time i saw you, till now.<br>  You are so beatiful that I cann’t help myself to think of you.<br>  However, please accept my best wishes for your happiness.</p>
<p>  我又何尝不是呢,只不过这个世界又不止你一个人爱而不得，几乎每个人都会遇到一个，不能结婚却深爱过的人。</p>
]]></content>
  </entry>
  <entry>
    <title>2021年1月小记</title>
    <url>/page/202102072055.html</url>
    <content><![CDATA[<p>  如果，你可以选择生命的终结日期，那么你会选择在哪一年的哪一天？</p>
<hr>
  <a id="more"></a>

<p>  当我看见病床上的爷爷的时候，我也会想。是不是有一天，我也会躺在上面，然后一堆的人在围着我讨论，是积极抢救，还是保守治疗，还是直接放弃治疗。大家都有道理，如果是积极抢救，爷爷年纪都则么大了，开刀做手术的风险也大，但如果不抢救，内心尽管非常不安，但老人也不用受后面病痛的折磨，就在睡梦中安静的离去。最后还是选择拖着，在ICU中插着管维持着呼吸，人形逐渐消瘦。</p>
<p>  可是让我没有想到的是，外公，竟然先走一步。从五六年前，第一次的中风，一只脚不能动；到半身不遂；再到要整天躺在床上；最后东西都吃不了，每天靠着直接把食物打进胃管，只剩下一只手能动。上周末的时候，我还去探望过他的，突然有一天的晚上，我妈说外公他呼吸有点困难，喘着大气，等到他平静了才离开的。第二天的早上，就突然宣布，在凌晨的时候外公就已经走了。然后就是早上吊唁，中午送去了byg追悼，然后轰的一下，就什么都烧没了。呐，就昨天还活生生的一个人，今天就被挂在了祖先位上。</p>
<p>  然后一月份,公司管理层明令年前执行一个月的996工作模式。996到我这里就成了7116，每天除了工作，就是睡觉,有时也会想，为什么不在广州租间房子，不过这又和在深圳有什么区别呢。可能是喜欢呆在家里面的感觉吧</p>
<p>  恩… 公司来了两个00后的妹子，但是我发现了一个非常非常非常严重的问题。每次想撩妹的时候，都克制住了，害~</p>
<p>  是不是所有的伤痛，都会被时间冲去<br>  是不是所有的思念，都会被时间谈忘</p>
<p>  如果真的有那么的一天，我可以选择自己生命的终点，那么我希望是我出生的那天。</p>
]]></content>
  </entry>
  <entry>
    <title>北京十日游</title>
    <url>/page/202109301720.html</url>
    <content><![CDATA[<hr>
  <a id="more"></a>


<p>  临危受命,中讯院那边的客户好像是突然需要提前一个月让我们交付代码.迫于小霍同学是公司里面伪全能的精神小伙, 什么项目都跟他多多少少有点关系, 现场有什么突发情况,他也能及时处理.所以只能委派小霍同学,去北京走一趟了.吓得小霍同学立刻买了一个新的笔记本,旧的那个着实不能用,开机都要十几分钟,拿到客户哪里丢人嘛.这个键盘,不会知道也不会记得 - 你的名字</p>
<p>  伪十日,21日中秋当晚离开的广州,30日凌晨离开的北京,计上头尾,一共十天,在这十天里面,小霍同学是几乎用整整一日半游遍了整个北京城(包括但不限于八达岭长城,天安门广场,天坛公园,景山公园,后海,奥林匹克公园,798),吃遍了北京著名的菜色(麻酱豆腐,北京烤鸭,聚宝源铜锅涮羊肉,老北京羊蝎子).在此之前,我是真不知道在北京的羊肉居然要比烤鸭还要出名,可能是因为新鲜吧, 真的怎一个鲜字了得<br>  唯一的遗憾可算是,住在了国家图书馆旁边几天,却一次都没有进过去,还有香山的红叶,和由小到大都没有见过的雪</p>
<p>  回来的时候是深夜十二点,从万米高空向下面望去,那一条条由街灯串起来的路,是那样的渺小</p>
<p>  嗷,原本打算十月份再到湛江走一趟, 可是现在好好像已经没有这个力气了, 刚从北京回来的我, 只想好好的休息一下,嗷</p>
<p>  完蛋了九月, 啊我的任务又要推迟到十月去做</p>
]]></content>
  </entry>
  <entry>
    <title>2021年7月小记</title>
    <url>/page/202107300938.html</url>
    <content><![CDATA[<p>  因为有了因为 所以有了所以.既然已成既然 何必再说何必</p>
<hr>
  <a id="more"></a>

<p>  本来是想写个&lt;假如不用买房&gt;系列的文章。假如我不用买房，我可以去XXX旅游，可以去买XXX，但现在似乎是梦想成真了。不得不说，这房价真的涨得比工资还要快，回头问一下一年前的我有没有后悔，没有后悔那是假的。房价都从19k涨到了23k，从勉强买得起瞬间变成借钱也买不起了[害]刚好手提电脑快报废了，手机也快报废了，终于可以不用忍忍忍，尽情地买买买</p>
<p>  这个七月份，还是比较的忙，公司刚好进入到了膨胀发展的时期，招了很多的人(现在的研发比一个月前多了一倍)，各种大大小小的测试， 不断增长的需求，期间呐，还经历了在广州的第一次通宵加班， 还记得上一次还是在深圳的时候’硬刚’到这么晚。公司的一切都像是向着好的一方面去发展。但是我自己的情况就不太好了，我感觉我又一次的摸到了我自己技术上的天花板，但我自己却不知道怎样去突破。但是啊，已经紧紧地绑上了公司这艘船了</p>
<p>  不经不觉已经搬出去了自己住有一月余，感觉还不错，像是回到了当初深圳的样子，一切都从简 主义。但是多了时间独处后，我自己感觉越来越消极了，情绪也越来越烦躁与焦虑不安。无解~</p>
]]></content>
  </entry>
  <entry>
    <title>BADVPN学习</title>
    <url>/page/202005231642.html</url>
    <content><![CDATA[<p>  其实没必要非得追求一个答案，你回头看看他做的那些事就是答案。</p>
<hr>
<p>  嗯。。。不知道会不会被屏蔽，哈哈哈<br>  <a id="more"></a></p>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="关于OpenVPN"><a href="#关于OpenVPN" class="headerlink" title="关于OpenVPN"></a>关于OpenVPN</h2><pre><code>OpenVPN拥有唯一一个中心节点,所有子用户节点(控制器)都连接在中心节点上,中心节点负责分配虚拟子网IP,密钥协商,推送策略.所有子节点之间的通讯都必须经过中心节点转发,是一个星型拓扑</code></pre><h2 id="关于BADVPN"><a href="#关于BADVPN" class="headerlink" title="关于BADVPN"></a>关于BADVPN</h2><pre><code>BADVPN也拥有一个中心节点,但只作为维护交换机的一个控制器,控制器会构建子节点之间的TLS控制通道,子节点之间的通讯不需要经过中心节点。</code></pre><p>  BADVPN中最主要的控件有两个，一个就是tun2socks，一个就是udpgateway，tun2socks主要的功能就是把流量拦截到tun隧道，然后转化成socks协议进行转发，udpgateway主要功能就是把udp包进行拦截，然后分析。</p>
<h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><h2 id="windows-7-系统"><a href="#windows-7-系统" class="headerlink" title="windows 7 系统"></a>windows 7 系统</h2><ul>
<li>安装tap虚拟网卡,并为虚拟网卡配置虚拟IP地址(假设为IP:10.10.1.2, GW:10.10.1.0)</li>
<li>启动客户端、连接控制器并建立隧道</li>
<li>启动tun2socks客户端(默认端口为2080)<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">badvpn-tun2socks --tundev tap0901:&quot;tap1&quot;:10.10.1.2:10.10.1.0:255.255.255.0 --netif-ipaddr 10.10.1.1 --netif-netmask 255.255.255.0 --socks-server-addr 127.0.0.1:2080</span><br></pre></td></tr></table></figure></li>
<li>把控制器,gateway网关指向本地网卡网关,把默认网关指向虚拟网卡网关<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">route add x.x.x.x&#x2F;32 192.168.1.1 metric 5 </span><br><span class="line">route change  0.0.0.0&#x2F;0  10.10.1.1 metric 6</span><br></pre></td></tr></table></figure></li>
<li>测试用户是否能连通控制器允许访问资源(curl)<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -x socks5h:&#x2F;&#x2F;127.0.0.1:2080 https:&#x2F;&#x2F;www.baidu.com</span><br></pre></td></tr></table></figure>
<h2 id="linux系统"><a href="#linux系统" class="headerlink" title="linux系统"></a>linux系统</h2>流程与windows7差不多，只不过linux系统是自带的虚拟网卡，直接ifconfig utun0 就能起一个虚拟网卡</li>
</ul>
<h2 id="MACOS-系统"><a href="#MACOS-系统" class="headerlink" title="MACOS 系统"></a>MACOS 系统</h2><p>  与linux差不多</p>
<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><pre><code>开启tun2socks后,虚拟网卡会劫持计算机中所有流量,流量会通过虚拟网卡再转发出去.通过控制控制器下发策略,只允许用户访问某些网站,这样就变成了全局VPN模式</code></pre>]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>vpn</tag>
      </tags>
  </entry>
  <entry>
    <title>DES加密</title>
    <url>/page/202105280933.html</url>
    <content><![CDATA[<p>  我什么都没忘，但是有些事只适合收藏，不能说，不能想，却也不能忘</p>
<hr>
<p>  对接需求,需要用到DES加密解密,CBC加pkcs5pading,utf-8加密, 只给了一个java模板,只好用goalng 重构一遍了</p>
<p>  大学的时候是学过密码学,但是都好多年没有拿起来了,知识很多都还给老师了,只好重新再学习[皱眉]</p>
  <a id="more"></a>

<ul>
<li><p>使用golang实现的加密算法</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"bytes"</span></span><br><span class="line">	<span class="string">"crypto/cipher"</span></span><br><span class="line">	<span class="string">"crypto/des"</span></span><br><span class="line">	<span class="string">"encoding/base64"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这个为 des - cbc - pkcs5padding - utf8 加密的通讯方式</span></span><br><span class="line"><span class="comment">注意: key的长度只有前八位有效, 偏移量的长度要和key的长度一致</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	<span class="comment">// 偏移量</span></span><br><span class="line">	IvParams = <span class="string">"12345678"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DesCecEncrypt</span><span class="params">(src, key []<span class="keyword">byte</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	block, err := des.NewCipher(key)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">	&#125;</span><br><span class="line">	bs := block.BlockSize()</span><br><span class="line">	blockMode := cipher.NewCBCEncrypter(block, []<span class="keyword">byte</span>(IvParams))</span><br><span class="line">	src = PKCS5Padding(src, bs)</span><br><span class="line">	out := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(src))</span><br><span class="line">	blockMode.CryptBlocks(out, src)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> base64.StdEncoding.EncodeToString(out), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DesCecDecrypt</span><span class="params">(data, key []<span class="keyword">byte</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">	src, err := base64.StdEncoding.DecodeString(<span class="keyword">string</span>(data))</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	block, err := des.NewCipher(key)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	blockMode := cipher.NewCBCDecrypter(block, []<span class="keyword">byte</span>(IvParams))</span><br><span class="line">	out := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(src))</span><br><span class="line">	blockMode.CryptBlocks(out, src)</span><br><span class="line">	out = PKCS5UnPadding(out)</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">string</span>(out), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PKCS5Padding</span><span class="params">(cipherText []<span class="keyword">byte</span>, blockSize <span class="keyword">int</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	padding := blockSize - <span class="built_in">len</span>(cipherText)%blockSize</span><br><span class="line">	padText := bytes.Repeat([]<span class="keyword">byte</span>&#123;<span class="keyword">byte</span>(padding)&#125;, padding)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">append</span>(cipherText, padText...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PKCS5UnPadding</span><span class="params">(cipherText []<span class="keyword">byte</span>)</span> []<span class="title">byte</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	length := <span class="built_in">len</span>(cipherText)</span><br><span class="line">	unpadText := <span class="keyword">int</span>(cipherText[length - <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> cipherText[:(length - unpadText)]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用java实现的加密算法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.security.Key;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKeyFactory;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.DESKeySpec;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.IvParameterSpec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DESUtil</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>&#123;</span><br><span class="line">        String str=<span class="string">"&#123;\"a\":\"b\",\"b\":\"c\"&#125;"</span>;</span><br><span class="line">        String key=<span class="string">"a6a18f3bc69d218160dc25913a0106f3"</span>;</span><br><span class="line">        System.out.println(<span class="string">"==========================&gt;长度key-&gt;length:"</span>+key.length());</span><br><span class="line">		<span class="comment">//加密</span></span><br><span class="line">        String en=encrypt(key,str);</span><br><span class="line">		<span class="comment">//转码</span></span><br><span class="line">		en=URLEncoder.encode(en, <span class="string">"utf-8"</span>);</span><br><span class="line">		System.out.println(en);</span><br><span class="line">        System.out.println(<span class="string">"==========================&gt;加密后str-&gt;length:"</span>+en.length());</span><br><span class="line">		<span class="comment">//解码</span></span><br><span class="line">		en= URLDecoder.decode(en, <span class="string">"UTF-8"</span>);</span><br><span class="line">        <span class="comment">//解密</span></span><br><span class="line">        en=decrypt(key,en);</span><br><span class="line">		System.out.println(en);</span><br><span class="line">        System.out.println(<span class="string">"==========================&gt;解密后str-&gt;length:"</span>+en.length());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 偏移变量，固定占8位字节</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String IV_PARAMETER = <span class="string">"12345678"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密钥算法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ALGORITHM = <span class="string">"DES"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密/解密算法-工作模式-填充模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CIPHER_ALGORITHM = <span class="string">"DES/CBC/PKCS5Padding"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHARSET = <span class="string">"utf-8"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * DES加密字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 加密密码，长度不能够小于8位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 待加密字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 加密后内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encrypt</span><span class="params">(String password, String data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (password== <span class="keyword">null</span> || password.length() &lt; <span class="number">8</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"加密失败，key不能小于8位"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (data == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"==========================&gt;加密前的key:"</span> + password);</span><br><span class="line">            Key secretKey = generateKey(password);</span><br><span class="line">            System.out.println(<span class="string">"==========================&gt;加密后的key:"</span> + secretKey);</span><br><span class="line">            Cipher cipher = Cipher.getInstance(CIPHER_ALGORITHM);</span><br><span class="line">            IvParameterSpec iv = <span class="keyword">new</span> IvParameterSpec(IV_PARAMETER.getBytes(CHARSET));</span><br><span class="line">            System.out.println(<span class="string">"==========================&gt;iv:"</span> + iv);</span><br><span class="line">            cipher.init(Cipher.ENCRYPT_MODE, secretKey, iv);</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = cipher.doFinal(data.getBytes(CHARSET));</span><br><span class="line">            <span class="comment">//JDK1.8及以上可直接使用Base64，JDK1.7及以下可以使用BASE64Encoder</span></span><br><span class="line">            <span class="comment">//Android平台可以使用android.util.Base64</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(Base64.getEncoder().encode(bytes));</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * DES解密字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 解密密码，长度不能够小于8位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 待解密字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 解密后内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(String password, String data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (password== <span class="keyword">null</span> || password.length() &lt; <span class="number">8</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"加密失败，key不能小于8位"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (data == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Key secretKey = generateKey(password);</span><br><span class="line">            </span><br><span class="line">            Cipher cipher = Cipher.getInstance(CIPHER_ALGORITHM);</span><br><span class="line">            IvParameterSpec iv = <span class="keyword">new</span> IvParameterSpec(IV_PARAMETER.getBytes(CHARSET));</span><br><span class="line">            cipher.init(Cipher.DECRYPT_MODE, secretKey, iv);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(cipher.doFinal(Base64.getDecoder().decode(data.getBytes(CHARSET))), CHARSET);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	 <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成key</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Key <span class="title">generateKey</span><span class="params">(String password)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        DESKeySpec dks = <span class="keyword">new</span> DESKeySpec(password.getBytes(CHARSET));</span><br><span class="line">        SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(ALGORITHM);</span><br><span class="line">        <span class="keyword">return</span> keyFactory.generateSecret(dks);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>算法为王</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>MAC系统安装服务</title>
    <url>/page/202107241444.html</url>
    <content><![CDATA[<p>  不要让太多的曾经来占据你的现在，曾经就是曾经，再回忆也只是曾经。</p>
<hr>
<p>  前情提要: 在MAC系统上启动一个像windows一样的服务, 开机的时候自动自动, 一直运行在后台的一个服务. 过程类似于linux下, 创建一个服务文件, 然后根据修改里面某些特定的字段. 最后使用MAC下的launchctl来进行启动</p>
  <a id="more"></a>

<ul>
<li><p>在 /Library/LaunchDaemons/目录下新建自己的 Plist文件, 文件格式如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;    </span><br><span class="line">&lt;!DOCTYPE plist PUBLIC &quot;-&#x2F;&#x2F;Apple Computer&#x2F;&#x2F;DTD PLIST 1.0&#x2F;&#x2F;EN&quot;     </span><br><span class="line">    &quot;http:&#x2F;&#x2F;www.apple.com&#x2F;DTDs&#x2F;PropertyList-1.0.dtd&quot;&gt;    </span><br><span class="line">&lt;plist version&#x3D;&quot;1.0&quot;&gt;    </span><br><span class="line">&lt;dict&gt;    </span><br><span class="line">    &lt;key&gt;Label&lt;&#x2F;key&gt;    </span><br><span class="line">&lt;string&gt;com.sdp_client_darwin&lt;&#x2F;string&gt;    </span><br><span class="line">    &lt;key&gt;Program&lt;&#x2F;key&gt;    </span><br><span class="line">    &lt;string&gt;&#x2F;Users&#x2F;cyber&#x2F;Desktop&#x2F;test&#x2F;sdp_client_darwin&lt;&#x2F;string&gt;    </span><br><span class="line">    &lt;key&gt;RunAtLoad&lt;&#x2F;key&gt;    </span><br><span class="line">         &lt;true&#x2F;&gt;    </span><br><span class="line">    &lt;key&gt;WorkingDirectory&lt;&#x2F;key&gt;    </span><br><span class="line">        &lt;string&gt;&#x2F;Library&#x2F;LaunchDaemons&#x2F;&lt;&#x2F;string&gt;    </span><br><span class="line">    &lt;key&gt;KeepAlive&lt;&#x2F;key&gt;     </span><br><span class="line">        &lt;true&#x2F;&gt;    </span><br><span class="line">&lt;&#x2F;dict&gt;    </span><br><span class="line">&lt;&#x2F;plist&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>需要修改Label中的服务名称和Program中的可执行文件的路径</p>
</li>
<li><p>给予可执行的权限: sudo chmod 644 /Library/LaunchDaemons/sdp_client_darwin.plist</p>
</li>
<li><p>检查plist的语法: plutil sdp_client_darwin.plist</p>
</li>
<li><p>检查无误后启动服务并载入plist文件：sudo launchctl load /Library/LaunchDaemons/sdp_client_darwin.plist</p>
</li>
<li><p>检查服务运行状态： sudo launchctl list</p>
</li>
<li><p>退出服务: sudo launchctl unload /Library/LaunchDaemons/sdp_client_darwin.plist</p>
</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>GUACAMOLE配置</title>
    <url>/page/202006142005.html</url>
    <content><![CDATA[<p>  对任何人都不要毫无顾忌地说出自己的秘密，因为你的每一次袒露胸怀都有可能在未来的某个时刻成为别人专戳你软肋的导航。</p>
<hr>
  <a id="more"></a>
<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>  GUACAMOLE使用WEBSOCKS协议通过HTML5代理远程桌面协议<br>  运行环境为CENTOS7 + tomcat8.5 + JDK1.8 + guacamole1.0.0</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul>
<li><p>安装依赖项</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install libjpeg-turbo-devel cairo-devel libjpeg-devel libpng-devel uuid-devel autoconf automake libtool xmvn</span><br></pre></td></tr></table></figure></li>
<li><p>安装tomcat</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install tomcat</span><br><span class="line">vi &#x2F;etc&#x2F;tomcat&#x2F;tomcat.conf  </span><br><span class="line">GUACAMOLE_HOME&#x3D;&#x2F;etc&#x2F;guacamole</span><br></pre></td></tr></table></figure></li>
<li><p>安装jdk1.8+</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y java-1.8.0-openjdk-devel.x86_64</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装客户端</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">从 https:&#x2F;&#x2F;guacamole.apache.org&#x2F;releases&#x2F;1.0.0&#x2F; 下载 guacamole-server-1.0.0.tar.gz</span><br><span class="line">tar -zxvf guacamole-server-1.0.0.tar.gz</span><br><span class="line">cd guacamole-server-1.0.0</span><br><span class="line">.&#x2F;configure --with-init-dir&#x3D;&#x2F;etc&#x2F;init.d</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">ldconfig</span><br></pre></td></tr></table></figure></li>
<li><p>安装服务器端</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">从 https:&#x2F;&#x2F;guacamole.apache.org&#x2F;releases&#x2F;1.0.0&#x2F; 下载 guacamole-client-1.0.0.tar.gz</span><br><span class="line">tar -zxvf guacamole-client-1.0.0.tar.gz</span><br><span class="line">cd guacamole-client-1.0.0</span><br><span class="line">##需要预先安装maven3</span><br><span class="line">mvn package</span><br><span class="line">##把生成的war文件放到tomcat的webapps下</span><br><span class="line">cp guacamole&#x2F;target&#x2F;guacamole-1.0.0.war &#x2F;var&#x2F;lib&#x2F;tomcat&#x2F;webapps&#x2F;guacamole.war</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir &#x2F;etc&#x2F;guacamole&#x2F;</span><br><span class="line">vi &#x2F;etc&#x2F;guacamole&#x2F;guacamole.properties</span><br><span class="line">sic-user-mapping: &#x2F;etc&#x2F;guacamole&#x2F;user-mapping.xml</span><br><span class="line">vi &#x2F;etc&#x2F;guacamole&#x2F;user-mapping.xml</span><br><span class="line">&lt;user-mapping&gt;</span><br><span class="line"></span><br><span class="line">	&lt;authorize </span><br><span class="line">			username&#x3D;&quot;admin&quot;</span><br><span class="line">			password&#x3D;&quot;123456&quot;&gt;</span><br><span class="line"></span><br><span class="line">		&lt;!-- First authorized connection --&gt;</span><br><span class="line">		&lt;connection name&#x3D;&quot;rdp&quot;&gt;</span><br><span class="line">			&lt;protocol&gt;rdp&lt;&#x2F;protocol&gt;</span><br><span class="line">			&lt;param name&#x3D;&quot;hostname&quot;&gt;localhost&lt;&#x2F;param&gt;</span><br><span class="line">			&lt;param name&#x3D;&quot;port&quot;&gt;3389&lt;&#x2F;param&gt;</span><br><span class="line">		&lt;&#x2F;connection&gt;</span><br><span class="line"></span><br><span class="line">		&lt;!-- First authorized connection --&gt;</span><br><span class="line">		&lt;connection name&#x3D;&quot;ssh&quot;&gt;</span><br><span class="line">			&lt;protocol&gt;ssh&lt;&#x2F;protocol&gt;</span><br><span class="line">			&lt;param name&#x3D;&quot;hostname&quot;&gt;localhost8&lt;&#x2F;param&gt;</span><br><span class="line">			&lt;param name&#x3D;&quot;port&quot;&gt;22&lt;&#x2F;param&gt;</span><br><span class="line">		&lt;&#x2F;connection&gt;</span><br><span class="line"></span><br><span class="line">		&lt;!-- Second authorized connection --&gt;</span><br><span class="line">		&lt;connection name&#x3D;&quot;otherhost&quot;&gt;</span><br><span class="line">			&lt;protocol&gt;vnc&lt;&#x2F;protocol&gt;</span><br><span class="line">			&lt;param name&#x3D;&quot;hostname&quot;&gt;otherhost&lt;&#x2F;param&gt;</span><br><span class="line">			&lt;param name&#x3D;&quot;port&quot;&gt;5900&lt;&#x2F;param&gt;</span><br><span class="line">			&lt;param name&#x3D;&quot;password&quot;&gt;VNCPASS&lt;&#x2F;param&gt;</span><br><span class="line">		&lt;&#x2F;connection&gt;</span><br><span class="line"></span><br><span class="line">	&lt;&#x2F;authorize&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;user-mapping&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tomcat start</span><br><span class="line">guacd start</span><br></pre></td></tr></table></figure></li>
<li><p>使用GUACAMOLE</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">通过浏览器登陆http:&#x2F;&#x2F;x.x.x.x:8080&#x2F;guacamole</span><br><span class="line">输入配置文件 user-mapping.xml中的账号与密码进程登陆,即可使用</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MFA多因素认证</title>
    <url>/page/202006142015.html</url>
    <content><![CDATA[<p>  一见钟情只需0.3秒，可是忘掉一个人不知道还要煎熬多少个日夜</p>
<hr>
  <a id="more"></a>

<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>  用户在登陆时,使用除口令外至少一种的因素进行身份验证<br>  可以更好的保护用户凭证并简化口令过程<br>  可以添加各种的因素:指纹,虹膜,口令</p>
<h1 id="一般的认证因子"><a href="#一般的认证因子" class="headerlink" title="一般的认证因子"></a>一般的认证因子</h1><ul>
<li>一次性短信验证(OTP)<ul>
<li>通过向用户发送随机位数的数字进行验证</li>
<li>缺点:可以通过短信拦截获取短信验证消息,重定向短信</li>
</ul>
</li>
<li>硬件令牌<ul>
<li>通过生成一个硬件唯一指纹码进行验证</li>
<li>缺点:用户必须携带此硬件设备,更换设备不方便</li>
</ul>
</li>
<li>手机令牌<ul>
<li>通过手机生成的二维码进行识别</li>
<li>缺点:二维码容易被复制</li>
</ul>
</li>
<li>基于推送的身份认证令牌<ul>
<li>运用安全推送技术,推送只能被特定软件打开的加密信息,用户拥有上下文相关信息已供判断登陆是否真实</li>
</ul>
</li>
<li>基于二维码的身份验证令牌<ul>
<li>通过手机扫描动态生成的二维码进行识别</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>other</tag>
      </tags>
  </entry>
  <entry>
    <title>BloomFilter</title>
    <url>/page/202005172011.html</url>
    <content><![CDATA[<p>  没有钱，你拿什么维持你的亲情，稳固你的爱情，联络你的友情。</p>
<hr>
<p>  事情是这样的，公司想做一个高效去重的数据结构，判断一个url是不是已经在数据库中，数据库中的数据有点庞大，在网上找到了一个布隆过滤器。<br>  <a id="more"></a></p>
<h1 id="数据去重选择"><a href="#数据去重选择" class="headerlink" title="数据去重选择"></a>数据去重选择</h1><ul>
<li>数据量不大，可以直接放内存去重</li>
<li>数据需要持久化，可以把数据放到redis数据库</li>
<li>数据量大时，用加密算法压缩成16/32/40字符串，存在hash表中，在内存中去重</li>
<li>数据量超大(十亿百亿)，布隆过滤器(有一定的误差)</li>
</ul>
<h1 id="BloomFilter原理"><a href="#BloomFilter原理" class="headerlink" title="BloomFilter原理"></a>BloomFilter原理</h1><p>  <a href="https://blog.csdn.net/tianyaleixiaowu/article/details/74721877" target="_blank" rel="noopener">https://blog.csdn.net/tianyaleixiaowu/article/details/74721877</a></p>
<p>  总结就是：</p>
<ul>
<li><p>在内存中申请一定长度的二进制内存空间，全置为0</p>
</li>
<li><p>把数据使用hash转换成一定长度字符串，映射到几个内存位中</p>
</li>
<li><p>查找时，当所有的对应位为1，则认为此数据存在</p>
</li>
<li><p>查找结果不存在，数据一定不存在</p>
<p>缺点：</p>
</li>
<li><p>不能删除已经添加的数据</p>
</li>
<li><p>查找结果存在，不一定存在，可能由于其他数据已经占用了其内存位 </p>
<p>优化：</p>
</li>
<li><p>若要使误差小于万分之一</p>
</li>
<li><p>一亿条数据约需256M内存(2^31)空间， 7个seed，随去重数据大小线性增长</p>
</li>
</ul>
<h1 id="python实现的BloomFilter"><a href="#python实现的BloomFilter" class="headerlink" title="python实现的BloomFilter"></a>python实现的BloomFilter</h1><ul>
<li>python版本需要 3.5+</li>
<li>使用了python + redis框架</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#! &#x2F;usr&#x2F;local&#x2F;env python</span><br><span class="line"># coding:utf-8</span><br><span class="line"></span><br><span class="line">import redis</span><br><span class="line">from hashlib import md5</span><br><span class="line"></span><br><span class="line">class SimpleHash(object):</span><br><span class="line">    def __init__(self, cap, seed):</span><br><span class="line">        self.cap &#x3D; cap</span><br><span class="line">        self.seed &#x3D; seed</span><br><span class="line"></span><br><span class="line">    def hash(self, value):</span><br><span class="line">        ret &#x3D; 0</span><br><span class="line">        for i in range(len(value)):</span><br><span class="line">            ret +&#x3D; self.seed * ret + ord(value[i])</span><br><span class="line">            print(&quot;ret : &quot; + str(ret))</span><br><span class="line">        return (self.cap - 1) &amp; ret</span><br><span class="line"></span><br><span class="line">class BloomFilter(object):</span><br><span class="line">    def __init__(self, host&#x3D;&quot;localhost&quot;, port&#x3D;6379, db&#x3D;0, blockNum&#x3D;1, key&#x3D;&quot;bloomfilter&quot;):</span><br><span class="line">        self.server &#x3D; redis.Redis(host&#x3D;host, port&#x3D;port, db&#x3D;db)</span><br><span class="line">        self.bit_size &#x3D; 1&lt;&lt;31</span><br><span class="line">        self.seeds &#x3D; [5, 7, 11, 13, 31, 37, 61]</span><br><span class="line">        self.key &#x3D; key</span><br><span class="line">        self.blockNum &#x3D; blockNum</span><br><span class="line">        self.hashfunc &#x3D; []</span><br><span class="line">        for seed in self.seeds:</span><br><span class="line">            self.hashfunc.append(SimpleHash(self.bit_size, seed))</span><br><span class="line"></span><br><span class="line">    def isContains(self, str_input):</span><br><span class="line">        if str_input &#x3D;&#x3D; &quot;&quot;:</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">        m5 &#x3D; md5()</span><br><span class="line">        m5.update(str_input.encode(&quot;utf-8&quot;))</span><br><span class="line">        str_input &#x3D; m5.hexdigest()</span><br><span class="line">        ret &#x3D; True</span><br><span class="line">        name &#x3D; self.key + str(int(str_input[0:2], 16) % self.blockNum)</span><br><span class="line">        for f in self.hashfunc:</span><br><span class="line">            loc &#x3D; f.hash(str_input)</span><br><span class="line">            ret &#x3D; ret &amp; self.server.getbit(name, loc)</span><br><span class="line">        return ret</span><br><span class="line"></span><br><span class="line">    def insert(self, str_input):</span><br><span class="line">        if str_input &#x3D;&#x3D; &quot;&quot;:</span><br><span class="line">            return</span><br><span class="line"></span><br><span class="line">        m5 &#x3D; md5()</span><br><span class="line">        m5.update(str_input.encode(&quot;utf-8&quot;))</span><br><span class="line">        str_input &#x3D; m5.hexdigest()</span><br><span class="line">        name &#x3D; self.key + str(int(str_input[0:2], 16) % self.blockNum)</span><br><span class="line">        for f in self.hashfunc:</span><br><span class="line">            loc &#x3D; f.hash(str_input)</span><br><span class="line">            self.server.setbit(name, loc, 1)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    bf &#x3D; BloomFilter()</span><br><span class="line">    if bf.isContains(&#39;https:&#x2F;&#x2F;www.baidu.com&#39;):</span><br><span class="line">        print(&quot;baidu exists&quot;)</span><br><span class="line">        bf.insert(&quot;https:&#x2F;&#x2F;www.sina.com.cn&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;baidu not exists&quot;)</span><br><span class="line">        bf.insert(&quot;https:&#x2F;&#x2F;www.baidu.com&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    if bf.isContains(&quot;https:&#x2F;&#x2F;www.sina.com.cn&quot;):</span><br><span class="line">        print(&quot;sina exists&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;sina not exists&quot;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>git常用命令</title>
    <url>/page/202005171549.html</url>
    <content><![CDATA[<p>自己喜欢的东西就不要再征询他人的意见了，人生这点责任，自己负。</p>
<hr>
<p>总结一些git常用的命令</p>
<a id="more"></a>

<ul>
<li><p>初始化</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li>
<li><p>把文件添加到版本库中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
</li>
<li><p>文件提交到仓库，引号内为提交说明</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -m &#39;first commit&#39;</span><br></pre></td></tr></table></figure>
</li>
<li><p>关联到远程库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;githubusername&#x2F;demo.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure>
</li>
<li><p>把本地库的内容推送到远程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
</li>
<li><p>状态查询命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>
</li>
<li><p>比较查询命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure>
</li>
<li><p>上传时忽略某些文件夹</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git update-index --assume-unchanged .&#x2F;file_path&#x2F;*</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看分支版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch -a</span><br><span class="line">git clean -fxd</span><br></pre></td></tr></table></figure>
</li>
<li><p>切换分支版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout origin&#x2F;xxx</span><br></pre></td></tr></table></figure>
</li>
<li><p>返回上一版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改注释</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#修改最后一次注释</span><br><span class="line">git commit --amend</span><br><span class="line"></span><br><span class="line">#修改近几次注释</span><br><span class="line">git rebase -i HEAD~3</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="注意：有时候拉取的文件太大会报错"><a href="#注意：有时候拉取的文件太大会报错" class="headerlink" title="注意：有时候拉取的文件太大会报错"></a>注意：有时候拉取的文件太大会报错</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">error: RPC failed; curl 56 OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 10054</span><br></pre></td></tr></table></figure>
<ul>
<li>解决方法<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global http.sslVerify &quot;false&quot;</span><br><span class="line">git config http.postBuffer 524288000</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>golang web服务器使用https</title>
    <url>/page/202005231639.html</url>
    <content><![CDATA[<p>  我对你好也可以对别人好，但有些东西我想给你，有些事我只想为你做，就算你不要，我也舍不得给别人。</p>
<hr>
<p>  事情是这样的,公司要做一个web的登陆界面,还说使用http不安全,容易被中间人攻击<br>  <a id="more"></a></p>
<h2 id="自签证书的生成"><a href="#自签证书的生成" class="headerlink" title="自签证书的生成"></a>自签证书的生成</h2>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成ca证书（非机构）</span></span><br><span class="line">openssl genrsa -out root.key 2048</span><br><span class="line"><span class="comment"># 去除密码</span></span><br><span class="line">openssl req -new -out root.csr -key root.key</span><br><span class="line"><span class="comment"># 修改ca证书的参数</span></span><br><span class="line"><span class="comment"># 一般就是 CN GD GZ SX SX websdp.cyberex.com.cn</span></span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> root.csr -out root.crt -signkey root.key -CAcreateserial -days 365</span><br></pre></td></tr></table></figure>

  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成服务器证书文件</span></span><br><span class="line">openssl genrsa -out server.key 2048</span><br><span class="line"><span class="comment"># 去除密码</span></span><br><span class="line">openssl req -new -out server.csr -key server.key</span><br><span class="line"><span class="comment"># 使用 CA 根证书颁发服务器证书 注意,这里的输入需要和上面设置的一致</span></span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> server.csr -out server.crt -signkey server.key -CA root.crt -CAkey root.key -CAcreateserial -days 365</span><br></pre></td></tr></table></figure>

<ul>
<li>key是服务器上的私钥文件，用于对发送给客户端数据的加密，以及对从客户端接收到数据的解密</li>
<li>csr是证书签名请求文件，用于提交给证书颁发机构（CA）对证书签名</li>
<li>crt是由证书颁发机构（CA）签名后的证书，或者是开发者自签名的证书，包含证书持有人的信息，持有人的公钥，以及签署者的签名等信息</li>
<li>最后在客户端，将ca根证书导入到“受信任的根证书颁发机构”存储区中</li>
<li>在服务端部署的时候,导入server.key, server.crt</li>
</ul>
<h2 id="配置文件的设置"><a href="#配置文件的设置" class="headerlink" title="配置文件的设置"></a>配置文件的设置</h2><ul>
<li><p>配置地址和端口 </p>
<pre><code>http_server.addr=127.0.0.1:8181</code></pre></li>
<li><p>打开https    </p>
<pre><code>http_server.ishttps=true</code></pre></li>
<li><p>设置证书路径</p>
<pre><code>http_server.certFile=/home/xxx/config/cert/server.crt/pem
http_server.keyFile=/home/xxx/config/cert/server.key </code></pre></li>
<li><p>设置双向认证(非必选)</p>
<pre><code>http_server.is_client_ssl_check=false
http_server.client_cert_root=/home/xxx/config/client_cert</code></pre></li>
<li><p>把证书放到对应目录,同步修改配置文件中对应项,然后重启服务</p>
</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>cert</tag>
      </tags>
  </entry>
  <entry>
    <title>golang 学习</title>
    <url>/page/202006210932.html</url>
    <content><![CDATA[<p>  生命中总有些遇见，惊艳了时光，也惊醒了沉睡中所有的感觉。</p>
<hr>
  <a id="more"></a>

<h2 id="创建一个新的工程"><a href="#创建一个新的工程" class="headerlink" title="创建一个新的工程"></a>创建一个新的工程</h2><p>  先创建一个文件夹,根目录下创建一个mod.go,然后设置,添加库文件的目录,不需要在github目录下创建文件的</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https代理下载包</span></span><br><span class="line">go env -w GOPROXY=https://goproxy.cn,direct</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置代理</span></span><br><span class="line"><span class="built_in">set</span> http_proxy=socks5://127.0.0.1:9993</span><br><span class="line">http_proxy=socks5://127.0.0.1:9993 GO111MODULE=on go build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消代理</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure>
<h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><pre><code>var + 变量名 + 类型   </code></pre><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span>  </span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	a = <span class="number">1</span></span><br><span class="line">	b := <span class="number">3.14</span></span><br><span class="line">	c char = <span class="string">'a'</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h2 id="初始化值"><a href="#初始化值" class="headerlink" title="初始化值"></a>初始化值</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> hp (<span class="keyword">int</span>) = <span class="number">500</span></span><br><span class="line">hp := <span class="number">500</span>  <span class="comment">//只能在函数体中</span></span><br></pre></td></tr></table></figure>
<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> a <span class="keyword">string</span> = <span class="string">"abc"</span></span><br></pre></td></tr></table></figure>

<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><pre><code>派生类、指针、数组、结构体、channel、函数、切片、接口、MAP表、切片(相当于动态数组 )</code></pre><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myslice [<span class="number">3</span>]<span class="keyword">int</span> = [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">var</span> myslice []<span class="keyword">type</span> = <span class="built_in">make</span>([]<span class="keyword">type</span>, <span class="built_in">len</span>)</span><br></pre></td></tr></table></figure>

<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//func foo(输入参数)(返回参数)&#123;&#125;()</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">(a <span class="keyword">string</span>, b <span class="keyword">int</span>)</span><span class="params">(err error)</span></span>&#123;&#125;()</span><br><span class="line"></span><br><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">type</span> abc <span class="keyword">interface</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="string-byte-互相转化"><a href="#string-byte-互相转化" class="headerlink" title="string byte 互相转化"></a>string byte 互相转化</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">bufString := <span class="keyword">string</span>(buf[<span class="number">1</span>:<span class="number">100</span>])</span><br><span class="line">   bufByte := []<span class="keyword">byte</span>(bufString)</span><br></pre></td></tr></table></figure>

<h2 id="channel-go多线程"><a href="#channel-go多线程" class="headerlink" title="channel/go多线程"></a>channel/go多线程</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	done := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span>&#123;</span><br><span class="line">		fmt.Println(<span class="string">"dsa"</span>)</span><br><span class="line">		done&lt;<span class="number">-1</span></span><br><span class="line">	&#125;()</span><br><span class="line">	&lt;-done</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="读取json文件"><a href="#读取json文件" class="headerlink" title="读取json文件"></a>读取json文件</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"encoding/json"</span></span><br><span class="line"><span class="comment">//解析json的时候,结构体定义的变量首字母需要大写</span></span><br><span class="line"><span class="keyword">type</span> JsonStruct <span class="keyword">struct</span> &#123;</span><br><span class="line">	Name <span class="keyword">string</span>  <span class="string">`nname`</span></span><br><span class="line">	Age <span class="keyword">int</span> 	<span class="string">`age`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewJsonStruct</span><span class="params">()</span> *<span class="title">JsonStruct</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;JsonStruct&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jst *JsonStruct)</span> <span class="title">Load</span><span class="params">(filename <span class="keyword">string</span>, v <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">    data, err := ioutil.ReadFile(filename)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    err = json.Unmarshal(data, v)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">JsonParse := NewJsonStruct()</span><br><span class="line"></span><br><span class="line">   config := configStruct&#123;&#125;</span><br><span class="line">   JsonParse.Load(<span class="string">"config.json"</span>, &amp;config)</span><br><span class="line">   fmt.Println(config)</span><br></pre></td></tr></table></figure>

<h2 id="defer作用"><a href="#defer作用" class="headerlink" title="defer作用"></a>defer作用</h2><pre><code>在函数执行后再运行，多数用于释放参数
规则1：被声明时实时解析
规则2：先进后出
规则3：可以读取有名返回值</code></pre><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CopyFile</span><span class="params">(dstName, srcName <span class="keyword">string</span>)</span><span class="params">(written <span class="keyword">int64</span>, err error)</span></span> &#123;</span><br><span class="line">	src, err := os.Open(srcName)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> sec.Close()</span><br><span class="line"></span><br><span class="line">	dst, err := os.Create(dstName)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> dst.Close()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> io.Copy(dst, src)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="go-modules"><a href="#go-modules" class="headerlink" title="go modules"></a>go modules</h2><pre><code>go.mod 工程目录下管理依赖包的工具
go mod init
set GO111MODULE=off，go命令行将不会支持module功能，寻找依赖包的方式将会沿用旧版本那种通过vendor目录或者GOPATH模式来查找。
set GO111MODULE=on，go命令行会使用modules，而一点也不会去GOPATH目录下查找。
set GO111MODULE=auto，默认值，go命令行将会根据当前目录来决定是否启用module功能。这种情况下可以分为两种情形：

 * 当前目录在GOPATH/src之外且该目录包含go.mod文件
 * 当前文件在包含go.mod文件的目录下面。

git设置/取消代理进行下载 
set http_proxy=socks5://127.0.0.1:1080
git config --global --unset http.proxy
go get -d -t -u github.com/nats-io/nats.go/@v1.8.1


gomod基本命令
1) module 语句指定包的名字(路径)                    packageName
2) require 语句指定的依赖项模块                      new-path v1.0.0  latest
3) replace 语句可以替换依赖项模块(重定向包路径)      old-path =&gt; new-path
4) exclude 语句可以忽略依赖项模块</code></pre><h2 id="获取网页信息"><a href="#获取网页信息" class="headerlink" title="获取网页信息"></a>获取网页信息</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"net/http"</span></span><br><span class="line">response, err := http.Get(<span class="string">"http://127.0.0.1:1088/get_policy"</span>)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">       fmt.Println(<span class="string">"error, can not get the policy"</span>, err.Error())</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> response != <span class="literal">nil</span> &#123;</span><br><span class="line">       <span class="keyword">defer</span> response.Body.Close()</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   body, _ := ioutil.ReadAll(response.Body)</span><br></pre></td></tr></table></figure>


<h2 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h2><pre><code>go test -test.bench=&quot;.*&quot;
func BenchmarkXXX(b *testing.B) {
    ...
}
在循环体内使用testing.B.N

样例  ns/op == 纳秒/操作</code></pre><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkDirect_New</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">   <span class="keyword">var</span> s *Student</span><br><span class="line">   b.ResetTimer()</span><br><span class="line">   <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">	  s = <span class="built_in">new</span>(Student)</span><br><span class="line">   &#125;</span><br><span class="line">   _ = s</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="测试运行时间"><a href="#测试运行时间" class="headerlink" title="测试运行时间"></a>测试运行时间</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">t1 := time.Now()</span><br><span class="line"></span><br><span class="line"><span class="comment">//dosomething</span></span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"using time: "</span>, time.Since(t1))</span><br></pre></td></tr></table></figure>

<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">go</span> build -ldflags <span class="string">"-s -w"</span> xxx.<span class="keyword">go</span></span><br></pre></td></tr></table></figure>
<p>再使用upx工具压缩生成的exe文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">upx -9 xxx.exe</span><br></pre></td></tr></table></figure>
<p>编译时间</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">const char* _buildTime(void) &#123;</span></span><br><span class="line"><span class="comment">	return __DATE__ " " __TIME__;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"C"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> buildTime = C.GoString(C._buildTime())</span><br></pre></td></tr></table></figure>

<p>goland 交叉编译<br>build 设置 set GOARCH=amd64  (64位编译环境)<br>            set GOARCH=386    (32位编译环境)<br>            set GOOS  linux</p>
<p>不同系统<br>    // +build windows<br>    // +build linux<br>    // +build darwin<br>    // +build freebsd openbsd netbsd dragonfly darwin</p>
<h2 id="获取函数名"><a href="#获取函数名" class="headerlink" title="获取函数名"></a>获取函数名</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">()</span></span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetFunctionName</span><span class="params">(i <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> runtime.FuncForPC(reflect.ValueOf(i).Pointer()).Name()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 输出 "name: main.foo"</span></span><br><span class="line">    fmt.Println(<span class="string">"name:"</span>, GetFunctionName(foo))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>  如果要引用库的时候,使用库的初始化函数,则需要在引用库之前加上 “_”</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>  printf()格式化输出字符串<br>  println()纯字符串</p>
<p>  处理文件时要注意解码方式</p>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>golang服务获取当前注册表权限</title>
    <url>/page/202104222248.html</url>
    <content><![CDATA[<p>  后来我才意识到，很多事情上都可以努力，但人与人之间不行。能走到最后的，其实一开始就是同路人。</p>
<hr>
<p>  在windows下, 因为特殊的原因, 一个服务是使用的SYSTEM用户进行登陆, 没有办法获取当前用户的注册表的路径, 所以如果想实现使用一个服务来修改当前注册表的信息, 那就需要这个服务,模拟登陆当前的用户, 获取当前用户的信息,  最后获取当前用户的注册表的全部信息, 才能对当前用户的注册表做修改</p>
  <a id="more"></a>


<h2 id="部分代码"><a href="#部分代码" class="headerlink" title="部分代码"></a>部分代码</h2><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">由于服务使用的是SYSTEM用户登陆, 所以无法获取注册表中的 CURRENT_USER</span></span><br><span class="line"><span class="comment">现在的做法,就是模拟登陆当前的用户, 然后获取当前用户的配置信息, 提取其中的 CURRENT_USER</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	modkernel32                      *windows.LazyDLL  = windows.NewLazySystemDLL(<span class="string">"kernel32.dll"</span>)</span><br><span class="line">	modwtsapi32                      *windows.LazyDLL  = windows.NewLazySystemDLL(<span class="string">"wtsapi32.dll"</span>)</span><br><span class="line">	modadvapi32                      *windows.LazyDLL  = windows.NewLazySystemDLL(<span class="string">"advapi32.dll"</span>)</span><br><span class="line">	moduserenv                       *windows.LazyDLL  = windows.NewLazySystemDLL(<span class="string">"userenv.dll"</span>)</span><br><span class="line"></span><br><span class="line">	procWTSGetActiveConsoleSessionId *windows.LazyProc = modkernel32.NewProc(<span class="string">"WTSGetActiveConsoleSessionId"</span>)</span><br><span class="line"></span><br><span class="line">	procWTSEnumerateSessionsW        *windows.LazyProc = modwtsapi32.NewProc(<span class="string">"WTSEnumerateSessionsW"</span>)</span><br><span class="line">	procWTSQueryUserToken            *windows.LazyProc = modwtsapi32.NewProc(<span class="string">"WTSQueryUserToken"</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">//https://docs.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-duplicatetokenex</span></span><br><span class="line">	procDuplicateTokenEx             *windows.LazyProc = modadvapi32.NewProc(<span class="string">"DuplicateTokenEx"</span>)</span><br><span class="line">	<span class="comment">//https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getusernamew</span></span><br><span class="line">	procGetUserName                  *windows.LazyProc = modadvapi32.NewProc(<span class="string">"GetUserNameW"</span>)</span><br><span class="line">	<span class="comment">//https://docs.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-gettokeninformation</span></span><br><span class="line">	procGetTokenInformation          *windows.LazyProc = modadvapi32.NewProc(<span class="string">"GetTokenInformation"</span>)</span><br><span class="line">	<span class="comment">//https://docs.microsoft.com/en-us/windows/win32/api/userenv/nf-userenv-loaduserprofilew</span></span><br><span class="line">	procLoadUserProfile              *windows.LazyProc = moduserenv.NewProc(<span class="string">"LoadUserProfileW"</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	WTS_CURRENT_SERVER_HANDLE <span class="keyword">uintptr</span> = <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	WTSActive <span class="keyword">int</span> = <span class="literal">iota</span></span><br><span class="line">	WTSConnected</span><br><span class="line">	WTSConnectQuery</span><br><span class="line">	WTSShadow</span><br><span class="line">	WTSDisconnected</span><br><span class="line">	WTSIdle</span><br><span class="line">	WTSListen</span><br><span class="line">	WTSReset</span><br><span class="line">	WTSDown</span><br><span class="line">	WTSInit</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	TokenPrimary <span class="keyword">int</span> = <span class="literal">iota</span> + <span class="number">1</span></span><br><span class="line">	TokenImpersonazion</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	SecurityAnonymous <span class="keyword">int</span> = <span class="literal">iota</span></span><br><span class="line">	SecurityIdentification</span><br><span class="line">	SecurityImpersonation</span><br><span class="line">	SecurityDelegation</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> WTS_SESSION_INFO <span class="keyword">struct</span> &#123;</span><br><span class="line">	SessionID      windows.Handle</span><br><span class="line">	WinStationName *<span class="keyword">uint16</span></span><br><span class="line">	State          <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">获取当前用户的session</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WTSEnumerateSessions</span><span class="params">()</span> <span class="params">([]*WTS_SESSION_INFO, error)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> (</span><br><span class="line">		sessionInformation windows.Handle      = windows.Handle(<span class="number">0</span>)</span><br><span class="line">		sessionCount       <span class="keyword">int</span>                 = <span class="number">0</span></span><br><span class="line">		sessionList        []*WTS_SESSION_INFO = <span class="built_in">make</span>([]*WTS_SESSION_INFO, <span class="number">0</span>)</span><br><span class="line">	)</span><br><span class="line">	<span class="keyword">if</span> returnCode, _, err := procWTSEnumerateSessionsW.Call(WTS_CURRENT_SERVER_HANDLE, <span class="number">0</span>, <span class="number">1</span>, <span class="keyword">uintptr</span>(unsafe.Pointer(&amp;sessionInformation)), <span class="keyword">uintptr</span>(unsafe.Pointer(&amp;sessionCount))); returnCode == <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">"call native WTSEnumerateSessionsW: %s"</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	structSize := unsafe.Sizeof(WTS_SESSION_INFO&#123;&#125;)</span><br><span class="line">	current := <span class="keyword">uintptr</span>(sessionInformation)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; sessionCount; i++ &#123;</span><br><span class="line">		sessionList = <span class="built_in">append</span>(sessionList, (*WTS_SESSION_INFO)(unsafe.Pointer(current)))</span><br><span class="line">		current += structSize</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sessionList, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">获取当前登陆的账号的用户名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetCurrUserName</span><span class="params">()</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> context [<span class="number">1024</span>]<span class="keyword">byte</span></span><br><span class="line">	leng := <span class="number">1024</span></span><br><span class="line">	sessionId, _, err := procGetUserName.Call(<span class="keyword">uintptr</span>(unsafe.Pointer(&amp;context)), <span class="keyword">uintptr</span>(unsafe.Pointer(&amp;leng)))</span><br><span class="line">	<span class="keyword">if</span> sessionId == <span class="number">0</span> &#123;</span><br><span class="line">		x_log.Err(<span class="string">"error : "</span>, err)</span><br><span class="line">		<span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">	&#125;</span><br><span class="line">	x_log.Status(<span class="string">"GetCurrUserName : "</span>, <span class="keyword">string</span>(context[:leng]))</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">string</span>(context[:leng]), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 获得当前系统活动的SessionID</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetCurrentUserSessionId</span><span class="params">()</span> <span class="params">(windows.Handle, error)</span></span> &#123;</span><br><span class="line">	sessionList, err := WTSEnumerateSessions()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>, fmt.Errorf(<span class="string">"get current user session token: %s"</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="keyword">range</span> sessionList &#123;</span><br><span class="line">		<span class="keyword">if</span> sessionList[i].State == WTSActive &#123;</span><br><span class="line">			<span class="keyword">return</span> sessionList[i].SessionID, <span class="literal">nil</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> sessionId, _, err := procWTSGetActiveConsoleSessionId.Call(); sessionId == <span class="number">0xFFFFFFFF</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>, fmt.Errorf(<span class="string">"get current user session token: call native WTSGetActiveConsoleSessionId: %s"</span>, err)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> windows.Handle(sessionId), <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> TOKEN_LINKED_TOKEN <span class="keyword">struct</span> &#123;</span><br><span class="line">	LinkedToken windows.Token</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> PROFILE_INFOA <span class="keyword">struct</span> &#123;</span><br><span class="line">	dwSize          <span class="keyword">uint32</span></span><br><span class="line">	dwFlags         <span class="keyword">uint32</span></span><br><span class="line">	lpUserName      <span class="keyword">uintptr</span></span><br><span class="line">	lpProfilePath   <span class="keyword">uintptr</span></span><br><span class="line">	lpDefaultPath   <span class="keyword">uintptr</span></span><br><span class="line">	lpServerName    <span class="keyword">uintptr</span></span><br><span class="line">	lpPolicyPath    <span class="keyword">uintptr</span></span><br><span class="line"></span><br><span class="line">	HProfile        windows.Handle</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// DuplicateUserTokenFromSessionID will attempt</span></span><br><span class="line"><span class="comment">// to duplicate the user token for the user logged</span></span><br><span class="line"><span class="comment">// into the provided session ID</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DuplicateUserTokenFromSessionID</span><span class="params">(sessionId windows.Handle, runas <span class="keyword">bool</span>)</span> <span class="params">(windows.Token, error)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> (</span><br><span class="line">		impersonationToken windows.Handle = <span class="number">0</span></span><br><span class="line">		userToken          windows.Token  = <span class="number">0</span></span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> returnCode, _, err := procWTSQueryUserToken.Call(<span class="keyword">uintptr</span>(sessionId), <span class="keyword">uintptr</span>(unsafe.Pointer(&amp;impersonationToken))); returnCode == <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>, fmt.Errorf(<span class="string">"call native WTSQueryUserToken: %s"</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> returnCode, _, err := procDuplicateTokenEx.Call(<span class="keyword">uintptr</span>(impersonationToken), <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">uintptr</span>(SecurityImpersonation), <span class="keyword">uintptr</span>(TokenPrimary), <span class="keyword">uintptr</span>(unsafe.Pointer(&amp;userToken))); returnCode == <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>, fmt.Errorf(<span class="string">"call native DuplicateTokenEx: %s"</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> runas &#123;</span><br><span class="line">		<span class="keyword">var</span> admin TOKEN_LINKED_TOKEN</span><br><span class="line">		<span class="keyword">var</span> dt <span class="keyword">uintptr</span> = <span class="number">0</span></span><br><span class="line">		<span class="keyword">if</span> returnCode, _, _ := procGetTokenInformation.Call(<span class="keyword">uintptr</span>(impersonationToken), <span class="number">19</span>, <span class="keyword">uintptr</span>(unsafe.Pointer(&amp;admin)), <span class="keyword">uintptr</span>(unsafe.Sizeof(admin)), <span class="keyword">uintptr</span>(unsafe.Pointer(&amp;dt))); returnCode != <span class="number">0</span> &#123;</span><br><span class="line">			userToken = admin.LinkedToken</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> err := windows.CloseHandle(impersonationToken); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>, fmt.Errorf(<span class="string">"close windows handle used for token duplication: %s"</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> userToken, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetCurrUserToken</span><span class="params">()</span> <span class="params">(windows.Token, error)</span></span> &#123;</span><br><span class="line">	<span class="comment">//var impersonationToken windows.Handle = 0</span></span><br><span class="line">	<span class="keyword">var</span> userToken          windows.Token  = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">	sessionId, err := GetCurrentUserSessionId();</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> userToken, err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> userToken, err = DuplicateUserTokenFromSessionID(sessionId, <span class="literal">true</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> userToken, err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> userToken, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetHandle</span><span class="params">()</span> <span class="params">(registry.Key, error)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> winCurrHandle windows.Handle = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">	token, err := GetCurrUserToken()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		x_log.Err(<span class="string">"error : "</span>, err)</span><br><span class="line">		<span class="keyword">return</span> registry.Key(winCurrHandle), err</span><br><span class="line">	&#125;</span><br><span class="line">	x_log.Status(<span class="string">"token : "</span>, token)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> profile PROFILE_INFOA</span><br><span class="line"></span><br><span class="line">	profile.dwSize = <span class="keyword">uint32</span>(unsafe.Sizeof(profile))</span><br><span class="line">	profile.dwFlags = <span class="number">1</span></span><br><span class="line">	userName , err := GetCurrUserName()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		x_log.Err(<span class="string">"error : "</span>, err)</span><br><span class="line">		<span class="keyword">return</span> registry.Key(winCurrHandle), err</span><br><span class="line">	&#125;</span><br><span class="line">	aa := userName</span><br><span class="line">	profile.lpUserName = <span class="keyword">uintptr</span>(unsafe.Pointer(&amp;aa))</span><br><span class="line">	x_log.Status(<span class="string">"profile : "</span>, profile.dwSize, profile.dwFlags, profile.lpUserName)</span><br><span class="line"></span><br><span class="line">	returnCode, _, err := procLoadUserProfile.Call(<span class="keyword">uintptr</span>(token), <span class="keyword">uintptr</span>(unsafe.Pointer(&amp;profile)))</span><br><span class="line">	<span class="keyword">if</span> returnCode == <span class="number">0</span> &#123;</span><br><span class="line">		x_log.Err(<span class="string">"error : "</span>, err)</span><br><span class="line">		<span class="keyword">return</span> registry.Key(winCurrHandle), err</span><br><span class="line">	&#125;</span><br><span class="line">	winCurrHandle = profile.HProfile</span><br><span class="line">	<span class="keyword">return</span> registry.Key(winCurrHandle), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  最后 GetHandle() 获取的结果, 就是模拟用户登陆后, 获取到的当前用户的注册表路径, 修改注册表信息的时候替换掉 CURRENT_USER 就可以修改注册表信息了</p>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>golang调用系统api读写路由</title>
    <url>/page/202103131430.html</url>
    <content><![CDATA[<p>  因为无能为力,所以随波逐流,因为心无所属,所以随遇而安</p>
<hr>
  <a id="more"></a>

<p>  windwos下,写入系统路由一般使用cmd命令,route add/route delete 添加或者删除命令,使用route print读当前系统的路由表<br>    在某些机器上,启动cmd运行这些命令会造成很长时间的延时,所以需要调用系统api进行添加或者删除</p>
<pre><code>优点:添加或者获取数据的时间缩短
缺点:在所有的windows下,可能缺少所需要的dll文件,或者api不向前兼容,导致低版本的windows无法使用此方法</code></pre><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">type</span> IpForwardRow <span class="keyword">struct</span> &#123;</span><br><span class="line">	ForwardDest       <span class="keyword">uint32</span></span><br><span class="line">    ForwardMask       <span class="keyword">uint32</span></span><br><span class="line">	ForwardPolicy     <span class="keyword">uint32</span></span><br><span class="line">    ForwardNextHop    <span class="keyword">uint32</span></span><br><span class="line">    ForwardIfIndex    <span class="keyword">uint32</span></span><br><span class="line">    ForwardType       <span class="keyword">uint32</span></span><br><span class="line">    ForwardProto      <span class="keyword">uint32</span></span><br><span class="line">    ForwardAge        <span class="keyword">uint32</span></span><br><span class="line">    ForwardNextHopAS  <span class="keyword">uint32</span></span><br><span class="line">    ForwardMetric1    <span class="keyword">uint32</span></span><br><span class="line">    ForwardMetric2    <span class="keyword">uint32</span></span><br><span class="line">    ForwardMetric3    <span class="keyword">uint32</span></span><br><span class="line">    ForwardMetric4    <span class="keyword">uint32</span></span><br><span class="line">    ForwardMetric5    <span class="keyword">uint32</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetRoute</span><span class="params">()</span> []<span class="title">IpForwardRow</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> retRow []IpForwardRow</span><br><span class="line">	modiphlpapi := windows.NewLazySystemDLL(<span class="string">"iphlpapi.dll"</span>)</span><br><span class="line"></span><br><span class="line">	procNotifyIpInterfaceChange := modiphlpapi.NewProc(<span class="string">"GetIpForwardTable"</span>)</span><br><span class="line">	context := <span class="built_in">make</span>([]<span class="keyword">uint8</span>, <span class="number">0</span>)</span><br><span class="line">	<span class="comment">//context := make([]uint8, 0)</span></span><br><span class="line">	<span class="keyword">var</span> pdwSize <span class="keyword">uint32</span> = <span class="number">0</span></span><br><span class="line">	ret, _, _ := procNotifyIpInterfaceChange.Call(<span class="keyword">uintptr</span>(unsafe.Pointer(&amp;context)),</span><br><span class="line">		<span class="keyword">uintptr</span>(unsafe.Pointer(&amp;pdwSize)),</span><br><span class="line">		<span class="number">1</span>,</span><br><span class="line">	) <span class="comment">//this must be pointer</span></span><br><span class="line">	<span class="keyword">if</span> ret == <span class="number">122</span> &#123;</span><br><span class="line">		context := <span class="built_in">make</span>([]<span class="keyword">uint32</span>, pdwSize/<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">		ret, _, _ = procNotifyIpInterfaceChange.Call(<span class="keyword">uintptr</span>(unsafe.Pointer(&amp;context[<span class="number">0</span>])),</span><br><span class="line">			<span class="keyword">uintptr</span>(unsafe.Pointer(&amp;pdwSize)),   <span class="comment">//this must be pointer</span></span><br><span class="line">			<span class="number">0</span>,</span><br><span class="line">		)</span><br><span class="line"></span><br><span class="line">		rowSize := <span class="keyword">int</span>(context[<span class="number">0</span>])</span><br><span class="line">		context = context[<span class="number">4</span>:]</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; rowSize; i++ &#123;</span><br><span class="line">			begin := i*<span class="number">14</span></span><br><span class="line">			end := begin + <span class="number">14</span></span><br><span class="line"></span><br><span class="line">			row := IpForwardRow&#123;</span><br><span class="line">				ForwardDest: context[begin + <span class="number">11</span>],</span><br><span class="line">				ForwardMask: context[begin+ <span class="number">12</span>],</span><br><span class="line">				ForwardNextHop: context[begin],</span><br><span class="line">				ForwardIfIndex: context[begin+ <span class="number">1</span>],</span><br><span class="line">			&#125;</span><br><span class="line">			retRow = <span class="built_in">append</span>(retRow, row)</span><br><span class="line"></span><br><span class="line">			<span class="comment">//fmt.Println(IpUint32ToString(context[begin + 11]))  // 目标网络</span></span><br><span class="line">			<span class="comment">//fmt.Println(IpUint32ToString(context[begin+ 12])) // 子网掩码  ?</span></span><br><span class="line">			<span class="comment">//fmt.Println(IpUint32ToString(context[begin]))  // 网关</span></span><br><span class="line">			<span class="comment">//fmt.Println(context[begin + 6])// 跃点数</span></span><br><span class="line">			<span class="comment">//fmt.Println(context[begin+ 1])// 网卡index  ForwardIfIndex</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			fmt.Println(IpUint32ToString(context[begin]), IpUint32ToString(context[begin+ <span class="number">4</span>] ), IpUint32ToString(context[begin+ <span class="number">11</span>]), IpUint32ToString(context[begin+ <span class="number">12</span>] ))</span><br><span class="line">			fmt.Println(context[begin:end])</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> retRow</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">iP4ToByte</span><span class="params">(data []<span class="keyword">byte</span>)</span> <span class="title">uint32</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> ret <span class="keyword">uint32</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">	ret = ret + <span class="keyword">uint32</span>(data[<span class="number">3</span>])&lt;&lt;<span class="number">24</span></span><br><span class="line">	ret = ret + <span class="keyword">uint32</span>(data[<span class="number">2</span>])&lt;&lt;<span class="number">16</span></span><br><span class="line">	ret = ret + <span class="keyword">uint32</span>(data[<span class="number">1</span>])&lt;&lt;<span class="number">8</span></span><br><span class="line">	ret = ret + <span class="keyword">uint32</span>(data[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">从dll中获取到的 ip地址是倒序的, 要先处理一下</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IpStringToUint32</span><span class="params">(ip <span class="keyword">string</span>)</span> <span class="title">uint32</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> ip == <span class="string">""</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line">	ipDest := x_ip.GetIP(ip)</span><br><span class="line">	ipUint32 := iP4ToByte(*ipDest.TOIp4Byte())</span><br><span class="line">	<span class="keyword">return</span> ipUint32</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IpUint32ToString</span><span class="params">(ip <span class="keyword">uint32</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> ip == <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"0.0.0.0"</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	ret := [<span class="number">4</span>]<span class="keyword">byte</span>&#123;&#125;</span><br><span class="line">	ret[<span class="number">3</span>] = <span class="keyword">uint8</span>(ip &gt;&gt; <span class="number">24</span>)</span><br><span class="line">	ret[<span class="number">2</span>] = <span class="keyword">uint8</span>(ip &gt;&gt; <span class="number">16</span>)</span><br><span class="line">	ret[<span class="number">1</span>] = <span class="keyword">uint8</span>(ip &gt;&gt; <span class="number">8</span>)</span><br><span class="line">	ret[<span class="number">0</span>] = <span class="keyword">uint8</span>(ip)</span><br><span class="line">	<span class="keyword">return</span> x_string.Get(ret[<span class="number">0</span>]) + <span class="string">"."</span> + x_string.Get(ret[<span class="number">1</span>]) + <span class="string">"."</span> + x_string.Get(ret[<span class="number">2</span>]) + <span class="string">"."</span> + x_string.Get(ret[<span class="number">3</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddRouteTable</span><span class="params">(dest, mask, gateway <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">	modiphlpapi := windows.NewLazySystemDLL(<span class="string">"iphlpapi.dll"</span>)</span><br><span class="line"></span><br><span class="line">	ipDest := IpStringToUint32(dest)</span><br><span class="line">	ipMask := IpStringToUint32(mask)</span><br><span class="line">	ipNext := IpStringToUint32(gateway)</span><br><span class="line"></span><br><span class="line">	a, e := net.Interfaces()</span><br><span class="line">	<span class="keyword">if</span> e == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> _, aa := <span class="keyword">range</span> a &#123;</span><br><span class="line">			aaa, _ := aa.Addrs()</span><br><span class="line">			fmt.Println(aa.Name , aa.Index, aaa)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	pAddRouteTable := modiphlpapi.NewProc(<span class="string">"CreateIpForwardEntry"</span>)</span><br><span class="line">	row := IpForwardRow &#123;</span><br><span class="line">	 	ForwardDest :    ipDest,   <span class="comment">// 目标地址</span></span><br><span class="line">	 	ForwardMask :    ipMask,   <span class="comment">// 子网掩码</span></span><br><span class="line">	 	ForwardNextHop : ipNext,   <span class="comment">//下一跳的地址</span></span><br><span class="line">	 	ForwardIfIndex : <span class="number">13</span>,       <span class="comment">//对应的是网卡的index</span></span><br><span class="line">	 	ForwardType :    <span class="number">3</span>,</span><br><span class="line">	 	ForwardProto :   <span class="number">3</span>,</span><br><span class="line">	 	ForwardMetric1 : <span class="number">15</span>,        <span class="comment">// 值越小越先匹配</span></span><br><span class="line">	&#125; </span><br><span class="line"></span><br><span class="line">	ret1, ret2 , errNum := pAddRouteTable.Call(<span class="keyword">uintptr</span>(unsafe.Pointer(&amp;row)))</span><br><span class="line">	<span class="keyword">if</span> ret1 != <span class="number">0</span> &#123;</span><br><span class="line">		x_log.Err(<span class="string">"调用方法错误 "</span>, ret1, ret2, errNum)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DelRouteTable</span><span class="params">(dest, mask, gateway <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">	modiphlpapi := windows.NewLazySystemDLL(<span class="string">"iphlpapi.dll"</span>)</span><br><span class="line"></span><br><span class="line">	ipDest := IpStringToUint32(dest)</span><br><span class="line">	ipMask := IpStringToUint32(mask)</span><br><span class="line">	ipNext := IpStringToUint32(gateway)</span><br><span class="line"></span><br><span class="line">	a, e := net.Interfaces()</span><br><span class="line">	<span class="keyword">if</span> e == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> _, aa := <span class="keyword">range</span> a &#123;</span><br><span class="line">			aaa, _ := aa.Addrs()</span><br><span class="line">			fmt.Println(aa.Name , aa.Index, aaa)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	pAddRouteTable := modiphlpapi.NewProc(<span class="string">"DeleteIpForwardEntry"</span>)</span><br><span class="line">	row := IpForwardRow &#123;</span><br><span class="line">	 	ForwardDest :    ipDest,   <span class="comment">// 目标地址</span></span><br><span class="line">	 	ForwardMask :    ipMask,   <span class="comment">// 子网掩码</span></span><br><span class="line">	 	ForwardNextHop : ipNext,   <span class="comment">//下一跳的地址</span></span><br><span class="line">	 	ForwardIfIndex : <span class="number">13</span>,       <span class="comment">//对应的是网卡的index</span></span><br><span class="line">	 	ForwardType :    <span class="number">3</span>,</span><br><span class="line">	 	ForwardProto :   <span class="number">3</span>,</span><br><span class="line">	 	ForwardMetric1 : <span class="number">15</span>,        <span class="comment">// 值越小越先匹配</span></span><br><span class="line">	&#125; </span><br><span class="line"></span><br><span class="line">	ret1, ret2 , errNum := pAddRouteTable.Call(<span class="keyword">uintptr</span>(unsafe.Pointer(&amp;row)))</span><br><span class="line">	<span class="keyword">if</span> ret1 != <span class="number">0</span> &#123;</span><br><span class="line">		x_log.Err(<span class="string">"调用方法错误 "</span>, ret1, ret2, errNum)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>go编译ios库文件</title>
    <url>/page/202007052020.html</url>
    <content><![CDATA[<p>  想你归想你，错过还是要错过，没什么的。</p>
<hr>
  <a id="more"></a>

<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>  因为ios程序的沙盒机制,无法调用其他可执行文件,所以只能把golang的程序编译成ios的库文件(xx.framework)给程序调用</p>
<h1 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h1><ol>
<li>安装go<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install go</span><br></pre></td></tr></table></figure></li>
<li>安装xcode</li>
<li>安装gomobile<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 从github上面拉取代码</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;mobile</span><br><span class="line">cp -r .&#x2F;mobile&#x2F; $GOPATH&#x2F;src&#x2F;golang.org&#x2F;x&#x2F;mobile&#x2F;</span><br><span class="line"># install安装gomobile, 安装完后,在$GOPATH&#x2F;src&#x2F;bin目录下会生成可执行的gomobile文件</span><br><span class="line">go install golang.org&#x2F;x&#x2F;mobile&#x2F;cmd&#x2F;gomobile</span><br><span class="line"># cd 目录到$GOPATH&#x2F;src&#x2F;bin, 执行初始化,生成gobind文件</span><br><span class="line">gomobie init</span><br><span class="line"># 把命令添加到全局使用</span><br><span class="line">touch ~&#x2F;.bash_profile</span><br><span class="line">vi ~&#x2F;.bash_profile</span><br><span class="line">export PATH&#x3D;$GOPATH&#x2F;bin&#x2F;:$PATH</span><br><span class="line">source ~&#x2F;.bash_profile</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h1 id="编译过程"><a href="#编译过程" class="headerlink" title="编译过程"></a>编译过程</h1><p>  把需要编译的文件或者包放到go工作目录下执行,即可在对应目录下生成xx.framework文件,例子<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gomobile bind -target&#x3D;ios golang.org&#x2F;x&#x2F;mobile&#x2F;example&#x2F;bind&#x2F;hello</span><br></pre></td></tr></table></figure></p>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><ol>
<li>把xx.framework文件中VERSION文件夹中的A提取出来重命名为xx.framework</li>
<li>在xcode中,TARGET-&gt;General-&gt;Frameworks,Libraries,and Embedded Content 导入xx.framework</li>
<li>TARGET-&gt;Build Settings-&gt;Header Search Path 添加一行 $SRCROOT 属性是recureive(递归寻找)</li>
<li>头文件引用#import “xx/xx.objc.h” 即可使用相关的函数 </li>
</ol>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><ol>
<li>gomobile暂不支持go.mod模式,编译前需要先把go.mod关闭 set GO111MODULE=off</li>
<li>gomobile对导出的函数/方法有些<a href="https://godoc.org/golang.org/x/mobile/cmd/gobind#hdr-Type_restrictions" target="_blank" rel="noopener">限制</a>,暂时不支持字符串切片类型([]string)的转换</li>
</ol>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/page/undefined.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>ios 编译各种坑</title>
    <url>/page/202006142010.html</url>
    <content><![CDATA[<p>  I’ve been working for few days trying to learn and implement Network monitor on the iPhone. I looked into netstat code from apple, and i lost like 25% of my hair.</p>
<hr>
  <a id="more"></a>

<h1 id="使用gomobile编译一个iosframework库"><a href="#使用gomobile编译一个iosframework库" class="headerlink" title="使用gomobile编译一个iosframework库"></a>使用gomobile编译一个iosframework库</h1><p>使用gomobile生成的文件中，真正的framework文件在version中的A，食用时应该把version中的文件提取出来然后再删除version文件夹，生成framework库食用</p>
<h1 id="找不到头文件"><a href="#找不到头文件" class="headerlink" title="找不到头文件"></a>找不到头文件</h1><p>target - Build Settings - Header Search  添加 $(PROJECT_DIR) 选择回归<br>target - Build Settings - Header Search - User Header Search Paths $(SRCROOT)/$(TARGET_NAME)/tun2socks-iOS</p>
<h1 id="初始化定义宏地方"><a href="#初始化定义宏地方" class="headerlink" title="初始化定义宏地方"></a>初始化定义宏地方</h1><p>target - Build Settings - Apple Clang-Preprocessing - Preprocessor Macros<br>$(inherited)<br>BADVPN_BREACTOR_BADVPN<br>BADVPN_FREEBSD<br>BADVPN_THREADWORK_USE_PTHREAD<br>BADVPN_THREAD_SAFE=1<br>BADVPN_USE_KEVENT<br>BADVPN_USE_SYSLOG</p>
<h1 id="xxx-函数不支持-c99"><a href="#xxx-函数不支持-c99" class="headerlink" title="xxx 函数不支持 c99"></a>xxx 函数不支持 c99</h1><p>target - Build Settings<br>C Language Dialect = Gun99<br>c++ Language Dialect = Gun++11</p>
<h1 id="添加第三方文件后找不到头文件"><a href="#添加第三方文件后找不到头文件" class="headerlink" title="添加第三方文件后找不到头文件"></a>添加第三方文件后找不到头文件</h1><p>target - build settings - header search paths<br>需要添加头文件的绝对路径还有 #import 库/头文件名</p>
<h1 id="找不到framework库的文件"><a href="#找不到framework库的文件" class="headerlink" title="找不到framework库的文件"></a>找不到framework库的文件</h1><p>dyld: Library not loaded: /Library/Frameworks/XXX.framework/<br>Reason: image not found</p>
<p>在Target的General选项卡里, 选择EmbeddedBinaries选项, 将找不到的framework添加进来, 然后就一键解决了..</p>
<p>原因:<br>在生成Framework的时候, 缺省是生成了动态库,所以需要上面这一步, 改成静态库就不需要这一步了</p>
<p>添加动态库时，把cocoaansy也添加上去， 在target - general - embedded binaries 中也添加上去，编译成功</p>
<h1 id="获取机器唯一uuid识别嘛"><a href="#获取机器唯一uuid识别嘛" class="headerlink" title="获取机器唯一uuid识别嘛"></a>获取机器唯一uuid识别嘛</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#import &lt;AdSupport&#x2F;AdSupport.h&gt;</span><br><span class="line">NSString *uuid &#x3D; [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];</span><br><span class="line">NSLog(uuid);</span><br></pre></td></tr></table></figure>
<p>但获取之后需要保存在钥匙串中，不然，如果用户进行广告推送开关修改，会把uuid重新置为一串0</p>
<h1 id="报错-Undefined-symbols-for-architecture-x86-64-解决方法"><a href="#报错-Undefined-symbols-for-architecture-x86-64-解决方法" class="headerlink" title="报错 Undefined symbols for architecture x86_64:解决方法"></a>报错 Undefined symbols for architecture x86_64:解决方法</h1><p>Target - build Phase- compile sources 添加.m文件</p>
<h1 id="添加pac文件，利用浏览器做代理转发"><a href="#添加pac文件，利用浏览器做代理转发" class="headerlink" title="添加pac文件，利用浏览器做代理转发"></a>添加pac文件，利用浏览器做代理转发</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (shExpMatch(url,&quot;*.google.com&#x2F;*&quot;)) &#123;</span><br><span class="line">    return &quot;PROXY 192.168.1.1:3128&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function FindProxyForURL(url, host) &#123;</span><br><span class="line">    return &quot;SOCKS5 127.0.0.1:1088; DIRECT;&quot; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="ios添加静态库"><a href="#ios添加静态库" class="headerlink" title="ios添加静态库"></a>ios添加静态库</h1><ul>
<li>设置Xcode -&gt; File -&gt; Workspace Settings -&gt; Build System -&gt; Legacy Build System</li>
<li>设置target -&gt; build settings -&gt; c/c++ language dialect  -&gt; Compiler Default</li>
<li>设置target -&gt; build settings -&gt; other linker flags -&gt; -force_load/-all_load</li>
<li>设置target -&gt; build option -&gt; bitcode -&gt; disable  这个要根据情况，看编译出来的库文件是否支持bitcode，默认是开启的</li>
</ul>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>Bundle Identifier 这个id究竟是怎么设置的<br><a href="https://www.jianshu.com/p/979f58f2b9e3" target="_blank" rel="noopener">https://www.jianshu.com/p/979f58f2b9e3</a><br>app group 是怎么设置的<br><a href="https://www.jianshu.com/p/5e6103d8fa8b" target="_blank" rel="noopener">https://www.jianshu.com/p/5e6103d8fa8b</a><br>企业版是什么东东<br>根据开发者账号的证书与配置文件，跳过appstroe，直接发布到网站上给被人下载</p>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>ios程序保活</title>
    <url>/page/202009052040.html</url>
    <content><![CDATA[<p>  据说一个人去疯狂的爱另一个人的概率,一生只有一次。</p>
<hr>
  <a id="more"></a>

<p>  在iphone里面一般APP在退出后，会在后台被挂起，这时APP的在后台大约运行1分钟就会被挂死，已达到释放手机缓存的作用，所以苹果手机的性能才会这么的高。如果有的后台项目想要一起在后台运行，需要在APP被挂起后，向申请后台，来延长后台运行时间，但不能一直申请，同一个程序最多申请十分钟，后台就不会同意此程序继续运行。</p>
<p>  一般的处理方法有几种<br>  1.后台播放一个无声音乐<br>  2.后台定时定位<br>  3.在后台进行下载<br>  4.循环把自己干掉，然后复制另一个自己</p>
<p>  综合各方面的考虑，最终选择了在后台播放无声的音乐</p>
<h1 id="部分代码"><a href="#部分代码" class="headerlink" title="部分代码"></a>部分代码</h1><p>  RunInBackground.h</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  RunInBackground.h</span></span><br><span class="line"><span class="comment">//  audioBg</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line">#<span class="keyword">import</span> &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">@interface <span class="type">RunInBackground</span> : <span class="type">NSObject</span></span><br><span class="line"></span><br><span class="line">+ (instancetype)sharedBg;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用此方法后，程序进入后台也不会死掉</span></span><br><span class="line">- (void)startRunInbackGround;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止播放音乐</span></span><br><span class="line">- (void)stopAudioPlay;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure>

<p>  RunInBackground.m</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  RunInBackground.m</span></span><br><span class="line"><span class="comment">//  audioBg</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line">#<span class="keyword">import</span> "RunInBackground.h"</span><br><span class="line">#<span class="keyword">import</span> &lt;AVFoundation/AVFoundation.h&gt;</span><br><span class="line">#<span class="keyword">import</span> &lt;UIKit/UIKit.h&gt;</span><br><span class="line"></span><br><span class="line">#ifndef <span class="type">PrintLog</span></span><br><span class="line">#define <span class="type">PrintLog</span></span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">@interface <span class="type">RunInBackground</span> ()</span><br><span class="line"></span><br><span class="line">@property (nonatomic, strong) <span class="type">AVAudioPlayer</span> *audioPlayer;</span><br><span class="line">@property (nonatomic, strong) <span class="type">NSTimer</span> *audioTimer;</span><br><span class="line">@property (nonatomic, strong) <span class="type">NSTimer</span> *logTimer;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation <span class="type">RunInBackground</span> &#123;</span><br><span class="line">    <span class="type">CFRunLoopRef</span> _runloopRef;</span><br><span class="line">    <span class="type">UIBackgroundTaskIdentifier</span> _task;</span><br><span class="line">    dispatch_queue_t _queue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供一个单例</span></span><br><span class="line">+ (instancetype)sharedBg &#123;</span><br><span class="line">    <span class="keyword">static</span> dispatch_once_t onceToken;</span><br><span class="line">    <span class="keyword">static</span> id instance;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        instance = [[<span class="keyword">self</span> alloc] <span class="keyword">init</span>];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 重写init方法，初始化音乐文件</span></span><br><span class="line">- (instancetype)<span class="keyword">init</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> <span class="keyword">init</span>]) &#123;</span><br><span class="line">        [<span class="keyword">self</span> setUpAudioSession];</span><br><span class="line">        </span><br><span class="line">        _queue = dispatch_queue_create(<span class="string">"com.audio.background"</span>, <span class="type">NULL</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 播放文件</span></span><br><span class="line">        <span class="type">NSString</span> *filePath = [[<span class="type">NSBundle</span> mainBundle] pathForResource:@<span class="string">"xixi"</span> ofType:@<span class="string">"mp3"</span>];</span><br><span class="line">        <span class="type">NSURL</span> *fileURL = [[<span class="type">NSURL</span> alloc] initFileURLWithPath:filePath];</span><br><span class="line">        <span class="keyword">self</span>.audioPlayer = [[<span class="type">AVAudioPlayer</span> alloc] initWithContentsOfURL:fileURL error:<span class="literal">nil</span>];</span><br><span class="line">        [<span class="keyword">self</span>.audioPlayer prepareToPlay];</span><br><span class="line">        <span class="comment">// 0.0~1.0,默认为1.0</span></span><br><span class="line">        <span class="keyword">self</span>.audioPlayer.volume = <span class="number">0.01</span>;</span><br><span class="line">        <span class="comment">// 循环播放</span></span><br><span class="line">        <span class="keyword">self</span>.audioPlayer.numberOfLoops = -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)startRunInbackGround &#123;</span><br><span class="line">    </span><br><span class="line">    _task =[[<span class="type">UIApplication</span> sharedApplication] beginBackgroundTaskWithExpirationHandler:^&#123;</span><br><span class="line">        dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">            [[<span class="type">UIApplication</span> sharedApplication] endBackgroundTask:_task];</span><br><span class="line">            _task = <span class="type">UIBackgroundTaskInvalid</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    dispatch_async(_queue, ^&#123;</span><br><span class="line">        <span class="keyword">self</span>.audioTimer = [[<span class="type">NSTimer</span> alloc] initWithFireDate:[<span class="type">NSDate</span> date] interval:<span class="number">170.0</span> target:<span class="keyword">self</span> selector:@selector(startAudioPlay) userInfo:<span class="literal">nil</span> repeats:<span class="type">YES</span>];</span><br><span class="line">#ifdef <span class="type">PrintLog</span></span><br><span class="line">        <span class="keyword">self</span>.logTimer = [<span class="type">NSTimer</span> scheduledTimerWithTimeInterval:<span class="number">5</span>.f target:<span class="keyword">self</span> selector:@selector(log) userInfo:<span class="literal">nil</span> repeats:<span class="type">YES</span>];</span><br><span class="line">#endif</span><br><span class="line">        _runloopRef = <span class="type">CFRunLoopGetCurrent</span>();</span><br><span class="line">        [[<span class="type">NSRunLoop</span> currentRunLoop] addTimer:<span class="keyword">self</span>.audioTimer forMode:<span class="type">NSDefaultRunLoopMode</span>];</span><br><span class="line">        <span class="type">CFRunLoopRun</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)log&#123;</span><br><span class="line">    <span class="type">NSLog</span>(@<span class="string">"===========%.2f==========="</span>, [<span class="type">UIApplication</span> sharedApplication].backgroundTimeRemaining);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)startAudioPlay &#123;</span><br><span class="line">    <span class="comment">// 异步执行</span></span><br><span class="line">    [<span class="keyword">self</span>.audioPlayer play];</span><br><span class="line">    </span><br><span class="line">    dispatch_after(dispatch_time(<span class="type">DISPATCH_TIME_NOW</span>, (int64_t)(<span class="number">5</span>.f * <span class="type">NSEC_PER_SEC</span>)), dispatch_get_main_queue(), ^&#123;</span><br><span class="line">        [<span class="keyword">self</span>.audioPlayer stop];</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">- (void)stopAudioPlay &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">CFRunLoopStop</span>(_runloopRef);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 关闭定时器即可</span></span><br><span class="line">    [<span class="keyword">self</span>.audioTimer invalidate];</span><br><span class="line">    <span class="keyword">self</span>.audioTimer = <span class="literal">nil</span>;</span><br><span class="line">#ifdef <span class="type">PrintLog</span></span><br><span class="line">    [<span class="keyword">self</span>.logTimer invalidate];</span><br><span class="line">    <span class="keyword">self</span>.logTimer = <span class="literal">nil</span>;</span><br><span class="line">#endif</span><br><span class="line">    [<span class="keyword">self</span>.audioPlayer stop];</span><br><span class="line">    [[<span class="type">UIApplication</span> sharedApplication] endBackgroundTask:_task];</span><br><span class="line">    _task = <span class="type">UIBackgroundTaskInvalid</span>;</span><br><span class="line">&#125;</span><br><span class="line">- (void)setUpAudioSession &#123;</span><br><span class="line">    <span class="comment">// 新建AudioSession会话</span></span><br><span class="line">    <span class="type">AVAudioSession</span> *audioSession = [<span class="type">AVAudioSession</span> sharedInstance];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置后台播放</span></span><br><span class="line">    <span class="type">NSError</span> *error = <span class="literal">nil</span>;</span><br><span class="line">    [audioSession setCategory:<span class="type">AVAudioSessionCategoryPlayback</span> withOptions:<span class="type">AVAudioSessionCategoryOptionMixWithOthers</span> error:&amp;error];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="type">NSLog</span>(@<span class="string">"Error setCategory AVAudioSession: %@"</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">NSLog</span>(@<span class="string">"%d"</span>, audioSession.isOtherAudioPlaying);</span><br><span class="line">    </span><br><span class="line">    <span class="type">NSError</span> *activeSetError = <span class="literal">nil</span>;</span><br><span class="line">    <span class="comment">// 启动AudioSession，如果一个前台app正在播放音频则可能启动失败</span></span><br><span class="line">    <span class="comment">//[audioSession setActive:YES error:&amp;activeSetError];</span></span><br><span class="line">    <span class="keyword">if</span> (activeSetError) &#123;</span><br><span class="line">        <span class="type">NSLog</span>(@<span class="string">"Error activating AVAudioSession: %@"</span>, activeSetError);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>ios编译tun2socks库</title>
    <url>/page/202005311818.html</url>
    <content><![CDATA[<p>  我终于是变成了自己曾经最讨厌的人</p>
<hr>
<p>  事情是这样的,公司说要做一个ios的客户端.但系我识条铁咩,我连苹果手机都木有用过啊.启动无限猴子理论,总有总会有一只猴子能做出来的吧,一定会有的吧…</p>
  <a id="more"></a>

<ul>
<li><p>原料</p>
<ul>
<li>一台macos电脑,系统10.15+,安装pods,xcode</li>
<li>一台iphone,系统9.0+</li>
<li>tun2socks源码,在github上面找吧,我找的是(<a href="https://github.com/jefby/Potatso-iOS" target="_blank" rel="noopener">https://github.com/jefby/Potatso-iOS</a>) 下PacketProcessor里面的</li>
</ul>
</li>
<li><p>过程</p>
<ul>
<li>新建一个工程，新建一个framework的target，在工程的目录下新建一个podfile<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> <span class="string">'https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git'</span></span><br><span class="line"></span><br><span class="line">platform :ios, <span class="string">'9.0'</span></span><br><span class="line">use_frameworks!</span><br><span class="line"></span><br><span class="line">def socket</span><br><span class="line">    pod <span class="string">'CocoaAsyncSocket'</span>, <span class="string">'~&gt; 7.4.3'</span></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">target <span class="string">"testxxx"</span> <span class="keyword">do</span></span><br><span class="line">    socket </span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">target <span class="string">"PacketProcessor"</span> <span class="keyword">do</span> </span><br><span class="line">    socket</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
执行 pod install</li>
</ul>
<p>把tun2socks-ios及tunnelinterface.m和tunnelinterface.h复制到新项目中</p>
</li>
<li><p>配置</p>
<ul>
<li>build settings</li>
<li>user header search paths 添加<ul>
<li>$(inherited)</li>
<li>“$(SRCROOT)/$(TARGET_NAME)/tun2socks-iOS”</li>
<li>“$(SRCROOT)/$(TARGET_NAME)/tun2socks-iOS/lwip/src/include”</li>
<li>“$(SRCROOT)/$(TARGET_NAME)/tun2socks-iOS/lwip/custom”</li>
<li>“$(SRCROOT)/$(TARGET_NAME)/tun2socks-iOS/lwip/src/include/ipv4”</li>
<li>“$(SRCROOT)/$(TARGET_NAME)/tun2socks-iOS/lwip/src/include/ipv6”</li>
</ul>
</li>
<li>c language dialect 改成<ul>
<li>gun99</li>
</ul>
</li>
<li>c++ language dialect 改成<ul>
<li>gun++11</li>
</ul>
</li>
<li>clang preprocessing 下 preprocessor macros 添加<ul>
<li>BADVPN_BREACTOR_BADVPN</li>
<li>BADVPN_FREEBSD</li>
<li>BADVPN_THREADWORK_USE_PTHREAD</li>
<li>BADVPN_THREAD_SAFE=1</li>
<li>BADVPN_USE_KEVENT</li>
<li>BADVPN_USE_SYSLOG</li>
<li>BADVPN_LITTLE_ENDIAN</li>
<li>BADVPN_LIBTSOCKS</li>
</ul>
</li>
</ul>
</li>
<li><p>添加自己的bundleId</p>
</li>
</ul>
<ul>
<li><p>注意事项</p>
<ul>
<li>编译的时候我是报了getipaddr/gethostaddr这两个函数需要&lt;netdb.h&gt;这个头,但是我是明明已经添加上去了,我看了一下,这边只影响到udpgateway的使用,于是就把相关代码删掉,然后就可以正常编译成功了.</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>linux常用命令</title>
    <url>/page/202005231612.html</url>
    <content><![CDATA[<p>  陌生人可以变成熟人，但熟人一旦变成陌生人，就再也回不去了。</p>
<hr>
<p>  整理了一些linux下比较常用的命令<br>  <a id="more"></a></p>
<h1 id="进阶命令"><a href="#进阶命令" class="headerlink" title="进阶命令"></a>进阶命令</h1><h2 id="反向代理隧道"><a href="#反向代理隧道" class="headerlink" title="反向代理隧道"></a>反向代理隧道</h2><ul>
<li><p>在需要被远程的机器上执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh -NfR 2222:localhost:22 &lt;公网机器的用户名&gt;@&lt;公网机器的ip地址&gt; -p 22000</span><br><span class="line"><span class="comment">#输入公网机器的对应用户名的密码</span></span><br><span class="line">********</span><br><span class="line"><span class="comment">#重启sshd服务</span></span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>
</li>
<li><p>在公网的机器上执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh -p 2222 root@localhost </span><br><span class="line"><span class="comment">#输入被远程机器的用户名的密码</span></span><br><span class="line">********</span><br></pre></td></tr></table></figure>


</li>
</ul>
<h1 id="基本常用命令"><a href="#基本常用命令" class="headerlink" title="基本常用命令"></a>基本常用命令</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建文件夹</span></span><br><span class="line">mkdir xxx   </span><br><span class="line"><span class="comment"># 创建文件</span></span><br><span class="line">touch xxx   </span><br><span class="line"><span class="comment">#删除文件</span></span><br><span class="line">rm  xxx  </span><br><span class="line"><span class="comment">#删除文件夹   </span></span><br><span class="line">rm -rf      </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看目录中隐藏文件</span></span><br><span class="line">ls -a</span><br><span class="line">ls -lt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件</span></span><br><span class="line">cat xxx</span><br><span class="line">vi xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件内查找</span></span><br><span class="line">grep &#123;str,^str,[0-9]&#125; &#123;-r /* 子目录查找&#125;  /tmp/<span class="built_in">test</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较</span></span><br><span class="line">sdiff file1 file2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看权限 (本机-所有组-其他用户)</span></span><br><span class="line">ls -l xxx</span><br><span class="line">chmod 777 xxx  (4-r 2-w 1-x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改文件拥有者 </span></span><br><span class="line">chown 用户:组群 文件名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找</span></span><br><span class="line">find &lt;目录&gt; name ‘xxx’</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装工具</span></span><br><span class="line">yun -y install xxx/xxx*</span><br><span class="line"><span class="comment"># 更新包</span></span><br><span class="line">yum -y update	</span><br><span class="line"><span class="comment"># 删除包	</span></span><br><span class="line">yum -y remove		</span><br><span class="line">yum list</span><br><span class="line"></span><br><span class="line"><span class="comment"># rpm模块安装</span></span><br><span class="line">rpm -ivh xxxx.rpm</span><br><span class="line"><span class="comment"># rpm模块更新</span></span><br><span class="line">rpm -Uvh xxxx.rpm</span><br><span class="line"><span class="comment"># rpm模块卸载</span></span><br><span class="line">rpm -e --nodeps xxx.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看工具</span></span><br><span class="line">rpm -qa 查看所有安装的包</span><br><span class="line"><span class="comment">#打印xxx相关的包</span></span><br><span class="line">rpm -qa | grep xxx  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 防火墙</span></span><br><span class="line">iptables -L</span><br><span class="line">firewall-cmd --state</span><br><span class="line">systemctl stop firewalld.service	<span class="comment">#停止运行</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service   <span class="comment">#禁止开机启动</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机启动脚本  </span></span><br><span class="line">/etc/rc.d/rc.local</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line"><span class="comment"># 解压gz压缩包</span></span><br><span class="line">tar -xzvf xxx </span><br><span class="line">unzip 文件名.zip</span><br><span class="line"><span class="comment"># 把xxx打包成xxx.tar</span></span><br><span class="line">tar -cvf xxx.tar  xxx  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加环境变量</span></span><br><span class="line">/etc/profile</span><br><span class="line">vim ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"><span class="comment"># 加载环境变量 </span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网路ip</span></span><br><span class="line">ifconfig</span><br><span class="line"><span class="comment"># 查看网关 </span></span><br><span class="line">cat /etc/sysconfig/network </span><br><span class="line"><span class="comment"># 查看dns cat /etc/resolv.conf </span></span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-ensxx   </span><br><span class="line"><span class="comment"># 重启网络服务 </span></span><br><span class="line">service network restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 CPU 物理个数</span></span><br><span class="line">grep <span class="string">'physical id'</span> /proc/cpuinfo | sort -u | wc -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 CPU 核心数量</span></span><br><span class="line">grep <span class="string">'core id'</span> /proc/cpuinfo | sort -u | wc -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 CPU 线程数</span></span><br><span class="line">grep <span class="string">'processor'</span> /proc/cpuinfo | sort -u | wc -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 CPU  型号</span></span><br><span class="line">dmidecode -s processor-version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 CPU 的详细信息：</span></span><br><span class="line">cat /proc/cpuinfo     </span><br><span class="line"></span><br><span class="line"><span class="comment"># cpu进程使用 q退出</span></span><br><span class="line">top</span><br><span class="line"></span><br><span class="line"><span class="comment"># 具体进程</span></span><br><span class="line">ps -ef | grep xxx</span><br><span class="line">ps -ef | grep <span class="variable">$Pro</span> | grep -v grep | wc -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 磁盘使用</span></span><br><span class="line">df -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内存使用</span></span><br><span class="line">free -m</span><br><span class="line">grep MemTotal /proc/meminfo <span class="comment"># 查看内存总量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看内核版本</span></span><br><span class="line">uname -a/-r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换内核</span></span><br><span class="line">rpm -ivh kernel-3.10.0-229.7.2.el7.centos.x86_64.rpm --force</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关机</span></span><br><span class="line">shutdown -s-t xx</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件安装路径</span></span><br><span class="line">whereis xxx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库</span></span><br><span class="line">postgres -U admin msdb</span><br><span class="line">myspl -u root -r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台运行python</span></span><br><span class="line">nohup python -u test.py &gt; test.log 2&gt;&amp;1 &amp;</span><br><span class="line">nohup python3 -u /home/ipv6_web_complexity/main.py &gt; /dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不停止运行清空日志内容</span></span><br><span class="line">cp /dev/null nohup.out</span><br><span class="line">cat /dev/null &gt; test.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># python生成可执行文件</span></span><br><span class="line">pyinstaller -F xxx.py </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统日志文件（可以通过cat或tail命令来查看）</span></span><br><span class="line">/var/<span class="built_in">log</span>/message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一 </span><br><span class="line">/var/<span class="built_in">log</span>/secure 与安全相关的日志信息 </span><br><span class="line">/var/<span class="built_in">log</span>/maillog 与邮件相关的日志信息 </span><br><span class="line">/var/<span class="built_in">log</span>/cron 与定时任务相关的日志信息 </span><br><span class="line">/var/<span class="built_in">log</span>/spooler 与UUCP和news设备相关的日志信息</span><br><span class="line">/var/<span class="built_in">log</span>/boot.log 守护进程启动和停止相关的日志消息</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#系统信息</span></span><br><span class="line"><span class="comment"># 查看内核/操作系统/CPU信息 </span></span><br><span class="line">uname -a   </span><br><span class="line">cat /etc/issue </span><br><span class="line"><span class="comment"># 查看操作系统版本 </span></span><br><span class="line">cat /etc/redhat-release </span><br><span class="line"><span class="comment"># 查看CPU信息</span></span><br><span class="line">cat /proc/cpuinfo   </span><br><span class="line"><span class="comment"># 查看计算机名 </span></span><br><span class="line">hostname   </span><br><span class="line"><span class="comment"># 列出所有PCI设备 </span></span><br><span class="line">lspci -tv  </span><br><span class="line"><span class="comment"># 列出所有USB设备  </span></span><br><span class="line">lsusb -tv  </span><br><span class="line"><span class="comment"># 列出加载的内核模块 </span></span><br><span class="line">lsmod  </span><br><span class="line"><span class="comment"># 查看环境变量   </span></span><br><span class="line">env    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 资源</span></span><br><span class="line"><span class="comment"># 查看内存使用量和交换区使用量</span></span><br><span class="line">free -m    </span><br><span class="line"><span class="comment"># 查看各分区使用情况 </span></span><br><span class="line">df -h    </span><br><span class="line"><span class="comment"># 查看指定目录的大小</span></span><br><span class="line">du -sh &lt;目录名&gt;   </span><br><span class="line"><span class="comment"># 查看内存总量 </span></span><br><span class="line">grep MemTotal /proc/meminfo </span><br><span class="line"><span class="comment"># 查看空闲内存量 </span></span><br><span class="line">grep MemFree /proc/meminfo </span><br><span class="line"><span class="comment"># 查看系统运行时间、用户数、负载 </span></span><br><span class="line">uptime   </span><br><span class="line"><span class="comment"># 查看系统负载 </span></span><br><span class="line">cat /proc/loadavg  </span><br><span class="line"><span class="comment"># 查看目录占用空间</span></span><br><span class="line">du -h -x --max-depth=1</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 磁盘和分区</span></span><br><span class="line"><span class="comment"># 查看挂接的分区状态 </span></span><br><span class="line">mount | column -t  </span><br><span class="line"><span class="comment"># 查看所有分区 </span></span><br><span class="line">fdisk -l   </span><br><span class="line"><span class="comment"># 查看所有交换分区 </span></span><br><span class="line">swapon -s   </span><br><span class="line"><span class="comment"># 查看磁盘参数(仅适用于IDE设备) </span></span><br><span class="line">hdparm -i /dev/hda</span><br><span class="line"><span class="comment"># 查看启动时IDE设备检测状况   </span></span><br><span class="line">dmesg | grep IDE  </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 网络</span></span><br><span class="line"><span class="comment"># 查看所有网络接口的属性 </span></span><br><span class="line">ifconfig/ ip addr</span><br><span class="line"><span class="comment"># 查看防火墙设置 </span></span><br><span class="line">iptables -L -n</span><br><span class="line"><span class="comment"># 添加一条防火墙策略</span></span><br><span class="line">iptables -I INPUT 1 -s 192.168.1.1 -p tcp --dport 22 -j ACCEPT</span><br><span class="line"><span class="comment"># 删除一条防火墙策略</span></span><br><span class="line">iptables -D INPUT 2</span><br><span class="line"><span class="comment"># 查看路由表    </span></span><br><span class="line">route -n   </span><br><span class="line"><span class="comment"># 查看所有监听端口 </span></span><br><span class="line">netstat -lntp   </span><br><span class="line"><span class="comment"># 查看所有已经建立的连接 </span></span><br><span class="line">netstat -antp</span><br><span class="line"><span class="comment"># 查看网络统计信息    </span></span><br><span class="line">netstat -ano</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 进程</span></span><br><span class="line"><span class="comment"># 查看所有进程 </span></span><br><span class="line">ps -ef </span><br><span class="line"><span class="comment"># 实时显示进程状态（另一篇文章里面有详细的介绍）   </span></span><br><span class="line">top    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户： </span></span><br><span class="line"><span class="comment"># 查看活动用户 </span></span><br><span class="line">w</span><br><span class="line"><span class="comment"># 查看指定用户信息 </span></span><br><span class="line">id &lt;用户名&gt;   </span><br><span class="line"><span class="comment"># 查看用户登录日志 </span></span><br><span class="line">last    </span><br><span class="line"><span class="comment"># 查看系统所有用户 </span></span><br><span class="line">cut -d: -f1 /etc/passwd </span><br><span class="line"><span class="comment"># 查看系统所有组</span></span><br><span class="line">cut -d: -f1 /etc/group </span><br><span class="line"><span class="comment"># 查看当前用户的计划任务 </span></span><br><span class="line">crontab -l   </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务</span></span><br><span class="line"><span class="comment"># 列出所有系统服务 </span></span><br><span class="line">chkconfig –list  </span><br><span class="line"><span class="comment"># 列出所有启动的系统服务</span></span><br><span class="line">chkconfig –list | grep on </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看ipv6 网关</span></span><br><span class="line">route -6 -n</span><br><span class="line"><span class="comment"># 添加网卡</span></span><br><span class="line">ifconfig name ipaddr</span><br><span class="line"><span class="comment"># 修改ip地址</span></span><br><span class="line">ifconfig</span><br><span class="line">ip addr </span><br><span class="line"></span><br><span class="line"><span class="comment"># 管道查询进程号</span></span><br><span class="line">ps -ef | egrep <span class="string">'\&lt;sdpi\&gt;'</span> | grep -v <span class="string">"grep"</span>| awk <span class="string">'&#123;print $2&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># redis数据库</span></span><br><span class="line">redis-cli -h host -p port -a password</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录postgres数据库</span></span><br><span class="line">psql -U admin -d xxxdb -p 5432</span><br><span class="line"></span><br><span class="line"><span class="comment"># 树形结构显示目录</span></span><br><span class="line">ls -R</span><br></pre></td></tr></table></figure>

<h1 id="centos7安装Go"><a href="#centos7安装Go" class="headerlink" title="centos7安装Go"></a>centos7安装Go</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;studygolang.com&#x2F;dl&#x2F;golang&#x2F;go1.12.7.linux-amd64.tar.gz</span><br><span class="line">tar -xvf go1.14.1.linux-amd64.tar.gz</span><br><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">export GOROOT&#x3D;&#x2F;data&#x2F;work&#x2F;go</span><br><span class="line">export GOPATH&#x3D;&#x2F;data&#x2F;work&#x2F;gopath</span><br><span class="line">export PATH&#x3D;$PATH:$GOROOT&#x2F;bin:$GOPATH&#x2F;bin</span><br></pre></td></tr></table></figure>


<h1 id="centos7安装python3"><a href="#centos7安装python3" class="headerlink" title="centos7安装python3"></a>centos7安装python3</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y groupinstall &quot;Development tools&quot; </span><br><span class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wget https:&#x2F;&#x2F;www.python.org&#x2F;ftp&#x2F;python&#x2F;3.5.5&#x2F;Python-3.5.5.tgz</span><br><span class="line">tar -zxvf Python-3.5.5.tgz </span><br><span class="line">cd Python-3.5.5&#x2F;</span><br><span class="line"></span><br><span class="line">.&#x2F;configure --enable-shared --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;python3</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin&#x2F;python3 &#x2F;usr&#x2F;bin&#x2F;python3</span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin&#x2F;pip3 &#x2F;usr&#x2F;bin&#x2F;pip3</span><br><span class="line"></span><br><span class="line">cp libpython3.5m.so.1.0 &#x2F;usr&#x2F;local&#x2F;lib64&#x2F;</span><br><span class="line">cp libpython3.5m.so.1.0 &#x2F;usr&#x2F;lib&#x2F;</span><br><span class="line">cp libpython3.5m.so.1.0 &#x2F;usr&#x2F;lib64&#x2F;</span><br><span class="line"></span><br><span class="line">pip3 install scrapy</span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin&#x2F;scrapy &#x2F;usr&#x2F;bin&#x2F;scrapy</span><br><span class="line"></span><br><span class="line">pip install asyncio-nats-client</span><br></pre></td></tr></table></figure>

<h1 id="centos7安装docker"><a href="#centos7安装docker" class="headerlink" title="centos7安装docker"></a>centos7安装docker</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">删除旧版本</span><br><span class="line">yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-selinux \</span><br><span class="line">                  docker-engine-selinux \</span><br><span class="line">                  docker-engine</span><br><span class="line">安装依赖工具</span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">下载依赖包</span><br><span class="line">yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br><span class="line">清除缓存</span><br><span class="line">yum makecache fast</span><br><span class="line">安装秒废板docker</span><br><span class="line">yum -y install docker-ce</span><br><span class="line">启动服务</span><br><span class="line">systemctl start docker</span><br><span class="line">测试</span><br><span class="line">hello-world</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs 使用ffi调用静态库方法</title>
    <url>/page/202006251912.html</url>
    <content><![CDATA[<p>  你确定这就是爱吗，真的爱我吗。</p>
<hr>
<p>  nodejs 调用 dll库的过程,其中有一个函数带回调</p>
  <a id="more"></a>

<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>  nodejs v10.16.3<br>  npm v6.9.0<br>  visual stdio 2017 (好像vs过高版本是不行的,有个同事装的2019编译不过)</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g node-gyp</span><br><span class="line">npm install --global --production windows-build-tools</span><br><span class="line">npm config set msvs_version 2017</span><br><span class="line">npm install ffi</span><br></pre></td></tr></table></figure>

<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>api.h 静态库的头文件</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __API_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __API_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int32_t</span> err_code;    </span><br><span class="line">    <span class="keyword">char</span>  * err_msg;</span><br><span class="line">&#125; ret_value;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*log_receiver)</span><span class="params">(<span class="keyword">int32_t</span> prio, <span class="keyword">char</span>* content)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">ret_value * <span class="title">client_init</span><span class="params">(log_receiver logger, <span class="keyword">int32_t</span> log_level)</span></span>;</span><br><span class="line"><span class="function">ret_value * <span class="title">client_close</span><span class="params">()</span> </span>;</span><br><span class="line"><span class="function">ret_value * <span class="title">client_set_addr</span><span class="params">(<span class="keyword">char</span> * target, <span class="keyword">char</span> * host, <span class="keyword">char</span> * port)</span></span>;</span><br><span class="line"><span class="function">ret_value * <span class="title">client_connect_tunnel</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">ret_value * <span class="title">client_stop</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p>main.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ffi = <span class="built_in">require</span>(<span class="string">'ffi'</span>);</span><br><span class="line"><span class="keyword">var</span> Struct = <span class="built_in">require</span>(<span class="string">'ref-struct'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ret_value = Struct(&#123;</span><br><span class="line">    <span class="string">'err_code'</span> : <span class="string">'int'</span>,</span><br><span class="line">    <span class="string">'err_msg'</span> : <span class="string">'string'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> libclient = <span class="keyword">new</span> ffi.Library(<span class="string">'./client.dll'</span>, &#123;</span><br><span class="line">    <span class="string">'client_init'</span> : [<span class="string">"void"</span>, [<span class="string">'pointer'</span>, <span class="string">'int'</span>]],</span><br><span class="line">    <span class="string">'client_close'</span> : [ret_value, []],</span><br><span class="line">    <span class="string">'client_set_addr'</span> : [ret_value, [<span class="string">'string'</span>, <span class="string">'string'</span>, <span class="string">'string'</span>]],</span><br><span class="line">    <span class="string">'client_connect_tunnel'</span> : [ret_value, []],</span><br><span class="line">    <span class="string">'client_stop'</span> : [ret_value, []],</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'hello world'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> callback = ffi.Callback(<span class="string">'void'</span>, [<span class="string">'int'</span>, <span class="string">'string'</span>],</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">id, name</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"id: "</span>, id);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"name: "</span>, name);</span><br><span class="line">    &#125;);</span><br><span class="line">    libclient.client_init(callback, <span class="number">3</span>);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    aa = libclient.client_set_addr(<span class="string">"controller"</span>, <span class="string">"192.168.1.1"</span>, <span class="string">"4567"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'client_set_addr ================='</span>, aa);</span><br><span class="line">    </span><br><span class="line">    aa = libclient.client_connect_tunnel();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'client_connect_tunnel ============'</span>, aa);</span><br><span class="line">    </span><br><span class="line">    sleep(<span class="number">30</span>);</span><br><span class="line">    </span><br><span class="line">    aa = libclient.client_stop();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'client_stop ============'</span>, aa);</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后执行运行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">node main.js</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>pyinstaller编译scrapy爬虫脚本</title>
    <url>/page/202006210938.html</url>
    <content><![CDATA[<p>  愿你的梦中有听不完的歌和喝不完的酒。</p>
<hr>
  <a id="more"></a>

<p>  事情是这样的,公司需要把一个用scrapy制作的爬虫脚本打包成一个可执行的二进制文件</p>
<h1 id="pyinstaller-打包scrapy"><a href="#pyinstaller-打包scrapy" class="headerlink" title="pyinstaller 打包scrapy"></a>pyinstaller 打包scrapy</h1><p>  需求版本<br>  python(3.7.3)<br>  pyinstaller(3.5)</p>
<h2 id="添加scrapy-hook-py"><a href="#添加scrapy-hook-py" class="headerlink" title="添加scrapy-hook.py"></a>添加scrapy-hook.py</h2><p>  内容如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="comment">#调用hook，批量导入数据与模块</span></span><br><span class="line"><span class="keyword">from</span> PyInstaller.utils.hooks <span class="keyword">import</span> collect_submodules, collect_data_files</span><br><span class="line"></span><br><span class="line"><span class="comment"># This collects all dynamically imported scrapy modules and data files.</span></span><br><span class="line">hiddenimports = (collect_submodules(<span class="string">'scrapy'</span>) +</span><br><span class="line">                 collect_submodules(<span class="string">'scrapy.pipelines'</span>) +</span><br><span class="line">                 collect_submodules(<span class="string">'scrapy.extensions'</span>) +</span><br><span class="line">                 collect_submodules(<span class="string">'scrapy.utils'</span>)+</span><br><span class="line">                 collect_submodules(<span class="string">'scrapy.spiders'</span>) + </span><br><span class="line">                 collect_submodules(<span class="string">'scrapy.core.downloader.handlers'</span>)</span><br><span class="line">)</span><br><span class="line"><span class="comment">#加载数据</span></span><br><span class="line">datas = collect_data_files(<span class="string">'scrapy'</span>)</span><br></pre></td></tr></table></figure>

<h2 id="添加run-scrapy-spec-文件"><a href="#添加run-scrapy-spec-文件" class="headerlink" title="添加run_scrapy.spec 文件"></a>添加run_scrapy.spec 文件</h2><p>  内容如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: python ; coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">block_cipher = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">a = Analysis([<span class="string">'run_scrapy.py'</span>],</span><br><span class="line">             pathex=[<span class="string">'D:\\hzj\\wechat\\WeChat Files\\forget_tc\\FileStorage\\File\\2020-06\\ip_web_spider'</span>],  <span class="comment"># 改成当前路径</span></span><br><span class="line">             binaries=[],</span><br><span class="line">             datas=[(<span class="string">'G:\\1\\spider\\BookSpider\\VERSION'</span>,<span class="string">'scrapy'</span>),  <span class="comment">#scrapy安装目录下的VERSION</span></span><br><span class="line">                    (<span class="string">'G:\\1\\spider\\BookSpider\\mime.types'</span>,<span class="string">'scrapy'</span>), <span class="comment"># scrapy安装目录下的mime.types</span></span><br><span class="line">                    (<span class="string">'.'</span>,<span class="string">'.'</span>)],</span><br><span class="line">             hiddenimports=[],</span><br><span class="line">             hookspath=[],</span><br><span class="line">             runtime_hooks=[],</span><br><span class="line">             excludes=[],</span><br><span class="line">             win_no_prefer_redirects=<span class="literal">False</span>,</span><br><span class="line">             win_private_assemblies=<span class="literal">False</span>,</span><br><span class="line">             cipher=block_cipher,</span><br><span class="line">             noarchive=<span class="literal">False</span>)</span><br><span class="line">pyz = PYZ(a.pure, a.zipped_data,</span><br><span class="line">             cipher=block_cipher)</span><br><span class="line">exe = EXE(pyz,</span><br><span class="line">          a.scripts,</span><br><span class="line">          [],</span><br><span class="line">          exclude_binaries=<span class="literal">True</span>,</span><br><span class="line">          name=<span class="string">'run_scrapy'</span>,</span><br><span class="line">          debug=<span class="literal">False</span>,</span><br><span class="line">          bootloader_ignore_signals=<span class="literal">False</span>,</span><br><span class="line">          strip=<span class="literal">False</span>,</span><br><span class="line">          upx=<span class="literal">True</span>,</span><br><span class="line">          console=<span class="literal">True</span> )</span><br><span class="line">coll = COLLECT(exe,</span><br><span class="line">               a.binaries,</span><br><span class="line">               a.zipfiles,</span><br><span class="line">               a.datas,</span><br><span class="line">               strip=<span class="literal">False</span>,</span><br><span class="line">               upx=<span class="literal">True</span>,</span><br><span class="line">               upx_exclude=[],</span><br><span class="line">               name=<span class="string">'run_scrapy'</span>)</span><br></pre></td></tr></table></figure>


<h2 id="run-scrapy-py-文件头添加"><a href="#run-scrapy-py-文件头添加" class="headerlink" title="run_scrapy.py 文件头添加"></a>run_scrapy.py 文件头添加</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy.spiderloader</span><br><span class="line"><span class="keyword">import</span> scrapy.statscollectors</span><br><span class="line"><span class="keyword">import</span> scrapy.logformatter</span><br><span class="line"><span class="keyword">import</span> scrapy.dupefilters</span><br><span class="line"><span class="keyword">import</span> scrapy.squeues</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.spiderstate</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.corestats</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.telnet</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.logstats</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.memusage</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.memdebug</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.feedexport</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.closespider</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.debug</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.httpcache</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.statsmailer</span><br><span class="line"><span class="keyword">import</span> scrapy.extensions.throttle</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> scrapy.core.scheduler</span><br><span class="line"><span class="keyword">import</span> scrapy.core.engine</span><br><span class="line"><span class="keyword">import</span> scrapy.core.scraper</span><br><span class="line"><span class="keyword">import</span> scrapy.core.spidermw</span><br><span class="line"><span class="keyword">import</span> scrapy.core.downloader</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.stats</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.httpcache</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.cookies</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.useragent</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.httpproxy</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.ajaxcrawl</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.decompression</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.defaultheaders</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.downloadtimeout</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.httpauth</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.httpcompression</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.redirect</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.retry</span><br><span class="line"><span class="keyword">import</span> scrapy.downloadermiddlewares.robotstxt</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> scrapy.spidermiddlewares.depth</span><br><span class="line"><span class="keyword">import</span> scrapy.spidermiddlewares.httperror</span><br><span class="line"><span class="keyword">import</span> scrapy.spidermiddlewares.offsite</span><br><span class="line"><span class="keyword">import</span> scrapy.spidermiddlewares.referer</span><br><span class="line"><span class="keyword">import</span> scrapy.spidermiddlewares.urllength</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> scrapy.pipelines</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> scrapy.core.downloader.handlers.http</span><br><span class="line"><span class="keyword">import</span> scrapy.core.downloader.contextfactory</span><br><span class="line"><span class="keyword">import</span> scrapy.core.downloader.handlers.file</span><br><span class="line"><span class="keyword">import</span> scrapy.core.downloader.handlers.ftp</span><br><span class="line"><span class="keyword">import</span> scrapy.core.downloader.handlers.datauri</span><br><span class="line"><span class="keyword">import</span> scrapy.core.downloader.handlers.s3</span><br></pre></td></tr></table></figure>


<h2 id="编译过程"><a href="#编译过程" class="headerlink" title="编译过程"></a>编译过程</h2><ul>
<li>删除当前目录下dist/和build/文件夹</li>
<li>执行 pyinstaller run_scrapy.spec</li>
<li>注意:编译的时候不能添加-y 参数,打包成一个可执行文件,原因未明,只能把python3的环境打包一下,然后在相对目录中运行爬虫脚本</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python常用手机agent</title>
    <url>/page/202011220951.html</url>
    <content><![CDATA[<p>  有时候我在想,如果可以的话,让你渣我一下也是没有什么问题的././</p>
<hr>
<p>  记录一下python 爬虫 手机常用的agent</p>
  <a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UPPOOL &#x3D; [</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.1.0; zh-cn; BLA-AL00 Build&#x2F;HUAWEIBLA-AL00) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.132 MQQBrowser&#x2F;8.9 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 8.1; PAR-AL00 Build&#x2F;HUAWEIPAR-AL00; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.132 MQQBrowser&#x2F;6.2 TBS&#x2F;044304 Mobile Safari&#x2F;537.36 MicroMessenger&#x2F;6.7.3.1360(0x26070333) NetType&#x2F;WIFI Language&#x2F;zh_CN Process&#x2F;tools&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 8.1.0; ALP-AL00 Build&#x2F;HUAWEIALP-AL00; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;63.0.3239.83 Mobile Safari&#x2F;537.36 T7&#x2F;10.13 baiduboxapp&#x2F;10.13.0.11 (Baidu; P1 8.1.0)&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.0.0; zh-CN; MHA-AL00 Build&#x2F;HUAWEIMHA-AL00) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.108 UCBrowser&#x2F;12.1.4.994 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.0.0; zh-CN; VTR-AL00 Build&#x2F;HUAWEIVTR-AL00) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.108 UCBrowser&#x2F;12.1.4.994 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.0.0; zh-CN; HUAWEI NXT-TL00 Build&#x2F;HUAWEINXT-TL00) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.108 UCBrowser&#x2F;12.1.4.994 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 7.0; MHA-AL00 Build&#x2F;HUAWEIMHA-AL00; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;63.0.3239.83 Mobile Safari&#x2F;537.36 T7&#x2F;10.13 baiduboxapp&#x2F;10.13.0.11 (Baidu; P1 7.0)&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.0.0; zh-cn; VKY-AL00 Build&#x2F;HUAWEIVKY-AL00) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.132 MQQBrowser&#x2F;8.9 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.0.0; zh-cn; EVA-AL10 Build&#x2F;HUAWEIEVA-AL10) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.132 MQQBrowser&#x2F;8.9 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.0.0; zh-CN; HUAWEI NXT-TL00 Build&#x2F;HUAWEINXT-TL00) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.108 UCBrowser&#x2F;12.1.2.992 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 7.0; zh-cn; FRD-AL10 Build&#x2F;HUAWEIFRD-AL10) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.132 MQQBrowser&#x2F;8.8 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 7.0; zh-CN; HUAWEI NXT-TL00 Build&#x2F;HUAWEINXT-TL00) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.108 UCBrowser&#x2F;12.1.3.993 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 8.1.0; ALP-AL00 Build&#x2F;HUAWEIALP-AL00; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;63.0.3239.83 Mobile Safari&#x2F;537.36 T7&#x2F;10.13 baiduboxapp&#x2F;10.13.0.10 (Baidu; P1 8.1.0)&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.0.0; zh-cn; Mi Note 2 Build&#x2F;OPR1.170623.032) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;61.0.3163.128 Mobile Safari&#x2F;537.36 XiaoMi&#x2F;MiuiBrowser&#x2F;10.1.1&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.1.0; zh-cn; Mi Note 3 Build&#x2F;OPM1.171019.019) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;61.0.3163.128 Mobile Safari&#x2F;537.36 XiaoMi&#x2F;MiuiBrowser&#x2F;10.0.2&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.1.0; zh-cn; MI MAX 3 Build&#x2F;OPM1.171019.019) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;61.0.3163.128 Mobile Safari&#x2F;537.36 XiaoMi&#x2F;MiuiBrowser&#x2F;10.1.1&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 8.0.0; MI 6 Build&#x2F;OPR1.170623.027; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;63.0.3239.83 Mobile Safari&#x2F;537.36 T7&#x2F;10.13 baiduboxapp&#x2F;10.13.0.10 (Baidu; P1 8.0.0)&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 8.0.0; MI 5 Build&#x2F;OPR1.170623.032; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;63.0.3239.83 Mobile Safari&#x2F;537.36 T7&#x2F;10.12 baiduboxapp&#x2F;10.12.0.12 (Baidu; P1 8.0.0)&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 8.1.0; MI MAX 3 Build&#x2F;OPM1.171019.019; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;63.0.3239.83 Mobile Safari&#x2F;537.36 T7&#x2F;10.12 baiduboxapp&#x2F;10.12.0.12 (Baidu; P1 8.1.0)&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 7.1.1; MI MAX 2 Build&#x2F;NMF26F; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;63.0.3239.83 Mobile Safari&#x2F;537.36 T7&#x2F;10.13 baiduboxapp&#x2F;10.13.0.10 (Baidu; P1 7.1.1)&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 4.4.4; zh-cn; MI 3 Build&#x2F;KTU84P) AppleWebKit&#x2F;537.36 (KHTML, like Gecko)Version&#x2F;4.0 Chrome&#x2F;37.0.0.0 MQQBrowser&#x2F;7.1 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.0.0; zh-cn; MI 5 Build&#x2F;OPR1.170623.032) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;61.0.3163.128 Mobile Safari&#x2F;537.36 XiaoMi&#x2F;MiuiBrowser&#x2F;9.8.7&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 7.1.2; zh-cn; MI 5X Build&#x2F;N2G47H) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.132 MQQBrowser&#x2F;8.8 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.1.0; zh-cn; MI 6X Build&#x2F;OPM1.171019.011) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;61.0.3163.128 Mobile Safari&#x2F;537.36 XiaoMi&#x2F;MiuiBrowser&#x2F;9.8.7&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 7.0; SM-G9280 Build&#x2F;NRD90M; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;48.0.2564.116 Mobile Safari&#x2F;537.36 T7&#x2F;10.8 baiduboxapp&#x2F;10.8.7.10 (Baidu; P1 7.0)&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.0.0; zh-CN; SM-G9500 Build&#x2F;R16NW) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.108 UCBrowser&#x2F;12.1.3.993 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.0.0; zh-cn; SM-G9350 Build&#x2F;R16NW) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.132 MQQBrowser&#x2F;8.8 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 6.0.1; SM-C7000 Build&#x2F;MMB29M; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;51.0.2704.81 Mobile Safari&#x2F;537.36 baiduboxapp&#x2F;6.3.1 (Baidu; P1 6.0.1)&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 5.1; zh-CN; m2 note Build&#x2F;LMY47D) AppleWebKit&#x2F;534.30 (KHTML, like Gecko) Version&#x2F;4.0 UCBrowser&#x2F;10.9.2.712 U3&#x2F;0.8.0 Mobile Safari&#x2F;534.30&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 7.1.1; zh-cn; PRO 6 Build&#x2F;NMF26O) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.132 MQQBrowser&#x2F;8.5 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 7.0; zh-CN; PRO 5 Build&#x2F;NRD90M) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.108 UCBrowser&#x2F;12.0.4.984 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 5.1.1; zh-CN; OPPO R9 Plusm A Build&#x2F;LMY47V) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.108 UCBrowser&#x2F;12.1.4.994 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 4.4.4; zh-cn; OPPO R7s Build&#x2F;KTU84P) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.132 MQQBrowser&#x2F;8.9 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 8.1.0; zh-CN; vivo Y85 Build&#x2F;OPM1.171019.011) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.108 UCBrowser&#x2F;11.9.6.976 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; Android 7.1.2; vivo X9Plus Build&#x2F;N2G47H; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;63.0.3239.83 Mobile Safari&#x2F;537.36 T7&#x2F;10.13 baiduboxapp&#x2F;10.13.0.10 (Baidu; P1 7.1.2)&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 7.1.2; zh-cn; vivo X9s Plus Build&#x2F;N2G47H) AppleWebKit&#x2F;537.36 (KHTML, like Gecko)Version&#x2F;4.0 Chrome&#x2F;37.0.0.0 MQQBrowser&#x2F;7.7 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 5.1.1; zh-CN; SM801 Build&#x2F;LMY48Z) AppleWebKit&#x2F;534.30 (KHTML, like Gecko) Version&#x2F;4.0 UCBrowser&#x2F;11.0.4.846 U3&#x2F;0.8.0 Mobile Safari&#x2F;534.30&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (Linux; U; Android 7.1.1; zh-CN; OD105 Build&#x2F;NMF26F) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;57.0.2987.108 UCBrowser&#x2F;12.1.0.990 Mobile Safari&#x2F;537.36&quot;,</span><br><span class="line">&quot;Mozilla&#x2F;5.0 (iPhone 6s; CPU iPhone OS 11_4_1 like Mac OS X) AppleWebKit&#x2F;604.3.5 (KHTML, like Gecko) Version&#x2F;11.0 MQQBrowser&#x2F;8.3.0 Mobile&#x2F;15B87 Safari&#x2F;604.1 MttCustomUA&#x2F;2 QBWebViewType&#x2F;1 WKType&#x2F;1&quot;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python生成可执行文件</title>
    <url>/page/202005231633.html</url>
    <content><![CDATA[<p>  信任就像一张纸，皱了，即使抚平，也恢复不了原样了！不要去欺骗别人，因为你能骗到的人，都是相信你的人。</p>
<hr>
<p>  使用python自带的工具pyinstaller，把py文件生成可执行文件<br>  <a id="more"></a></p>
<h1 id="安装pyinstaller"><a href="#安装pyinstaller" class="headerlink" title="安装pyinstaller"></a>安装pyinstaller</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure>

<h1 id="参数项"><a href="#参数项" class="headerlink" title="参数项"></a>参数项</h1><p>  -F 生成单个文件<br>  -p 添加自定义依赖包,多个包使用;分割<br>  –hidden-import 添加使用到的包头<br>  -i 添加图标</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>  生成的文件在./dist 中给予可执行权限,可以直接运行</p>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>sql触发器</title>
    <url>/page/202006210940.html</url>
    <content><![CDATA[<p>  我心之所困所扰所念所盼皆为虚妄，所愿所求所奢所望皆为痴念，与她何关？</p>
<hr>
<p>  事情是这样的,公司要弄一个东东,需要不停的监控数据库的变动,于是就有两种方法,一种是前台客户端不停的轮询向数据库查询,另一种是数据库发现数据变化后通知前台客户端</p>
  <a id="more"></a>

<h1 id="新建数据表"><a href="#新建数据表" class="headerlink" title="新建数据表"></a>新建数据表</h1><p>create_table.sql</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- test plugin ningbo zhongcai</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> test_plugin <span class="keyword">WITH</span> <span class="keyword">TEMPLATE</span> = template0 <span class="keyword">ENCODING</span> = <span class="string">'SQL_ASCII'</span> LC_COLLATE = <span class="string">'C'</span> LC_CTYPE = <span class="string">'C'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> test_plugin OWNER <span class="keyword">TO</span> postgres;</span><br><span class="line"></span><br><span class="line">\connect test_plugin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- Name: sdp_api_forward; Type: TABLE; Schema: public; Owner: admin</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> public.sdp_api_forward (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">integer</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">text</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    forward <span class="built_in">text</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    remark <span class="built_in">text</span>,</span><br><span class="line">    add_time <span class="built_in">timestamp</span> <span class="keyword">without</span> <span class="built_in">time</span> zone,</span><br><span class="line">    update_time <span class="built_in">timestamp</span> <span class="keyword">without</span> <span class="built_in">time</span> zone</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> public.sdp_api_forward OWNER <span class="keyword">TO</span> <span class="keyword">admin</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- Name: sdp_api_user_policy; Type: TABLE; Schema: public; Owner: admin</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> public.sdp_api_user_policy (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">integer</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">text</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    api <span class="built_in">text</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    action_list jsonb,</span><br><span class="line">    remark <span class="built_in">text</span>,</span><br><span class="line">    add_time <span class="built_in">timestamp</span> <span class="keyword">without</span> <span class="built_in">time</span> zone,</span><br><span class="line">    update_time <span class="built_in">timestamp</span> <span class="keyword">without</span> <span class="built_in">time</span> zone</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> public.sdp_api_user_policy OWNER <span class="keyword">TO</span> <span class="keyword">admin</span>;</span><br></pre></td></tr></table></figure>

<h1 id="创建触发器表"><a href="#创建触发器表" class="headerlink" title="创建触发器表"></a>创建触发器表</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sdp_api_forward_ver(</span><br><span class="line">ver <span class="built_in">serial</span>,</span><br><span class="line">op  <span class="built_in">CHARACTER</span> <span class="built_in">VARYING</span>(<span class="number">1</span>),</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">text</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">forward <span class="built_in">text</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">DEFAULT</span> <span class="string">''</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> idx_sdp_api_forward_ver_id <span class="keyword">on</span> sdp_api_forward_ver;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sdp_api_forward_ver  owner <span class="keyword">TO</span> <span class="keyword">admin</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> f_sdp_api_forward()</span><br><span class="line">    <span class="keyword">RETURNS</span> <span class="keyword">TRIGGER</span> <span class="keyword">AS</span></span><br><span class="line">$<span class="keyword">BODY</span>$</span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">IF</span> (TG_OP = <span class="string">'DELETE'</span>) <span class="keyword">THEN</span></span><br><span class="line">            <span class="keyword">DELETE</span> <span class="keyword">FROM</span> sdp_api_forward_ver <span class="keyword">WHERE</span> <span class="keyword">id</span> = OLD.id;</span><br><span class="line">            <span class="keyword">INSERT</span> <span class="keyword">INTO</span> sdp_api_forward_ver (op, <span class="keyword">id</span>) <span class="keyword">SELECT</span> <span class="string">'-'</span>, OLD.id;</span><br><span class="line">            RETURN OLD;</span><br><span class="line">        ELSIF (TG_OP = '<span class="keyword">UPDATE</span><span class="string">') THEN</span></span><br><span class="line"><span class="string">            IF (OLD.forward != NEW.forward OR OLD.NAME != NEW.NAME) THEN</span></span><br><span class="line"><span class="string">                DELETE FROM sdp_api_forward_ver WHERE ID = NEW.ID;</span></span><br><span class="line"><span class="string">                INSERT INTO sdp_api_forward_ver (OP, ID, NAME, forward) SELECT '</span>+<span class="string">', NEW.ID, NEW.NAME, NEW.FORWARD;</span></span><br><span class="line"><span class="string">            END IF;</span></span><br><span class="line"><span class="string">            RETURN NEW;</span></span><br><span class="line"><span class="string">        ELSIF (TG_OP = '</span><span class="keyword">INSERT</span><span class="string">') THEN</span></span><br><span class="line"><span class="string">            DELETE FROM sdp_api_forward_ver WHERE ID = NEW.ID;</span></span><br><span class="line"><span class="string">            INSERT INTO sdp_api_forward_ver (OP, ID, NAME, forward) SELECT '</span>+<span class="string">', NEW.ID, NEW.NAME, NEW.FORWARD;</span></span><br><span class="line"><span class="string">            RETURN NEW;</span></span><br><span class="line"><span class="string">        END IF;</span></span><br><span class="line"><span class="string">    END;</span></span><br><span class="line"><span class="string">$BODY$ LANGUAGE plpgsql VOLATILE;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CREATE TRIGGER t_sdp_api_forward_ver BEFORE INSERT OR UPDATE OR DELETE ON sdp_api_forward FOR EACH ROW  EXECUTE PROCEDURE f_sdp_api_forward();</span></span><br></pre></td></tr></table></figure>

<h1 id="客户端部分代码-golang"><a href="#客户端部分代码-golang" class="headerlink" title="客户端部分代码(golang)"></a>客户端部分代码(golang)</h1><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> xpostgres</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"com.x.base/tools/x_sql_pg"</span></span><br><span class="line">	<span class="string">"com.x.base/util/x_func"</span></span><br><span class="line">	<span class="string">"com.x.base/util/x_log"</span></span><br><span class="line">	<span class="string">"com.x.base/util/x_string"</span></span><br><span class="line">	<span class="string">"com.x.base/x_baseapp"</span></span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"github.com/jackc/pgx"</span></span><br><span class="line">	<span class="string">"golang.org/x/net/context"</span></span><br><span class="line">	<span class="string">"pg_test/appdata"</span></span><br><span class="line">	<span class="string">"sync"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> verMap sync.Map</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetMaxVer</span><span class="params">(datetype <span class="keyword">string</span>)</span> <span class="title">int32</span></span> &#123;</span><br><span class="line">	value, ok := verMap.Load(datetype)</span><br><span class="line">	<span class="keyword">if</span> !ok &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> value.(<span class="keyword">int32</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">setMaxVer</span><span class="params">(datetype <span class="keyword">string</span>, ver <span class="keyword">int32</span>)</span></span> &#123;</span><br><span class="line">	verMap.Store(datetype, ver)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetDBMaxVer</span><span class="params">(conn *pgx.Conn, datatype <span class="keyword">string</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	rr, err1 := conn.Query(<span class="string">"select max(ver) from "</span> + datatype)</span><br><span class="line">	<span class="keyword">defer</span> rr.Close()</span><br><span class="line">	<span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> rr.Next() &#123;</span><br><span class="line">		v, err1 := rr.Values()</span><br><span class="line">		<span class="keyword">if</span> err1 == <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> v[<span class="number">0</span>] != <span class="literal">nil</span> &#123;</span><br><span class="line">				fmt.Println(v[<span class="number">0</span>])</span><br><span class="line">				setMaxVer(datatype, v[<span class="number">0</span>].(<span class="keyword">int32</span>))</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">int</span>(v[<span class="number">0</span>].(<span class="keyword">int32</span>))</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">UpdateDataVer</span><span class="params">(conn *pgx.Conn)</span></span> &#123;</span><br><span class="line">	GetDBMaxVer(conn, <span class="string">"sdp_api_forward_ver"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ProcDataChange</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	x_func.ProcCount(<span class="function"><span class="keyword">func</span><span class="params">(execSerial <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">		conn, e := appdata.PgService.GetConnect()</span><br><span class="line">		<span class="keyword">if</span> e != <span class="literal">nil</span> &#123;</span><br><span class="line">			x_log.Err(<span class="string">"连接数据库错误 "</span>, e)</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">defer</span> conn.Close()</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(appdata.VerDataType); i++ &#123;</span><br><span class="line">			e = conn.Listen(<span class="string">"sdp_api_forward_ver"</span>)</span><br><span class="line">			<span class="keyword">if</span> e != <span class="literal">nil</span> &#123;</span><br><span class="line">				x_log.Err(<span class="string">"接受消息错误 "</span>, appdata.VerDataType[i], e)</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//全量跟新一次版本号</span></span><br><span class="line">		UpdateDataVer(conn)</span><br><span class="line"></span><br><span class="line">		x_log.SysMsg(<span class="string">"开始监听数据库变化"</span>)</span><br><span class="line">		<span class="keyword">for</span> &#123;</span><br><span class="line">			notification, err := conn.WaitForNotification(context.Background())</span><br><span class="line">			<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">				x_log.Err(<span class="string">"监听消息错误"</span>, err)</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">			&#125;</span><br><span class="line">			procmsg(conn, notification)</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> x_baseapp.IsExit</span><br><span class="line">	&#125;, <span class="number">-1</span>, <span class="number">60</span>, <span class="number">3600</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> UsersForward <span class="keyword">struct</span> &#123;</span><br><span class="line">	Ver <span class="keyword">int32</span></span><br><span class="line">	OP <span class="keyword">string</span></span><br><span class="line">	UserID <span class="keyword">string</span></span><br><span class="line">	UserName <span class="keyword">string</span></span><br><span class="line">	Forward []<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ToStruct</span><span class="params">(datatype <span class="keyword">string</span>, data *<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;, tags <span class="keyword">string</span>)</span> *<span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">	<span class="keyword">var</span> dd <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">	<span class="keyword">switch</span> datatype &#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">"sdp_api_forward_ver"</span>:</span><br><span class="line">		<span class="keyword">if</span> (*data)[<span class="string">"op"</span>].(<span class="keyword">string</span>) == <span class="string">"+"</span> &#123;</span><br><span class="line">			dd = UsersForward &#123;</span><br><span class="line">				Ver:    (*data)[<span class="string">"ver"</span>].(<span class="keyword">int32</span>),</span><br><span class="line">				OP:     (*data)[<span class="string">"op"</span>].(<span class="keyword">string</span>),</span><br><span class="line">				UserID: (*data)[<span class="string">"id"</span>].(<span class="keyword">string</span>),</span><br><span class="line">				UserName: (*data)[<span class="string">"name"</span>].(<span class="keyword">string</span>),</span><br><span class="line">				Forward:  (*data)[<span class="string">"forward"</span>].([]<span class="keyword">string</span>),</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			dd = UsersForward &#123;</span><br><span class="line">				Ver:    (*data)[<span class="string">"ver"</span>].(<span class="keyword">int32</span>),</span><br><span class="line">				OP:     (*data)[<span class="string">"op"</span>].(<span class="keyword">string</span>),</span><br><span class="line">				UserID: (*data)[<span class="string">"userid"</span>].(<span class="keyword">string</span>),</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> &amp;dd</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">procmsg</span><span class="params">(conn *pgx.Conn, notification *pgx.Notification)</span></span> &#123;</span><br><span class="line">	newVer := x_string.ToInt32(notification.Payload)</span><br><span class="line">	<span class="keyword">var</span> sqltext <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//x_log.Debug(notification.Channel ," ver=", GetMaxVer(notification.Channel), newVer, notification.Payload)</span></span><br><span class="line">	<span class="comment">//发过消息的就不发了</span></span><br><span class="line">	<span class="keyword">if</span> GetMaxVer(notification.Channel) &lt; newVer &#123;</span><br><span class="line">		sqltext = <span class="string">"select * from "</span> + notification.Channel + <span class="string">" where ver &gt;= "</span> + notification.Payload + <span class="string">"order by ver"</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">//数据库去读取</span></span><br><span class="line">		rr, err1 := conn.Query(sqltext)</span><br><span class="line"></span><br><span class="line">		<span class="keyword">defer</span> rr.Close()</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">			x_log.Err(<span class="string">"db err "</span>, err1)</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> rr.Next() &#123;</span><br><span class="line">			vv, err1 := x_sql_pg.ToMap(rr)</span><br><span class="line">			<span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">				x_log.Err(<span class="string">"db err "</span>, err1)</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			ver := (*vv)[<span class="string">"ver"</span>].(<span class="keyword">int32</span>)</span><br><span class="line"></span><br><span class="line">			<span class="comment">//小于这个版本号的说明发过了</span></span><br><span class="line">			<span class="keyword">if</span> GetMaxVer(notification.Channel) &gt; ver &#123;</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			setMaxVer(notification.Channel, ver)</span><br><span class="line">			ToStruct(notification.Channel, vv, <span class="string">""</span>)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>  一旦数据库发现 sdp_api_forward 发生变化,就会自动的更新表sdp_api_forward_ver,然后当检测到ver发生变动,数据库就能立刻通知到前台的客户端,进行其他的操作啦啦啦giao</p>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>postgres</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>tap虚拟网卡在windows7上兼容问题</title>
    <url>/page/202006251910.html</url>
    <content><![CDATA[<p>  我恨从前和现在的对比出来的那种落差感。</p>
<hr>
  <a id="more"></a>

<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>  事情是这样的,最近公司研发的项目,在windows系统下,开启全局代理的时候需要用到一个tun/tap的虚拟网卡<br>  这是一个openvpn中的一个组件<br>  在windows7系统下,有些系统太旧,没有更新补丁,导致虚拟网卡的签名认证不通过,无法使用此功能</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ul>
<li>方案一:帮系统打上windows sp1 的补丁,然后在系统自动更新补丁的地方,手动更新两个补丁KB4474419与KB3033929</li>
<li>方案二:对于那些无法更新补丁的系统,我们下载了一个openvpn2.3.4版本的虚拟网卡,此网卡的数字签名是旧版本的,可以在windows7任何系统下运行</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>vpn</tag>
      </tags>
  </entry>
  <entry>
    <title>(转载)tcpdump使用方法</title>
    <url>/page/202005231626.html</url>
    <content><![CDATA[<p>  等生活中真有了生老病死这样的大事，你才知道以前的忧伤都是狗屁！</p>
<hr>
<p>  tcpdump是linux下用来抓包的一个灰常快捷方便的工具<br>  <a id="more"></a></p>
<h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 监视指定网络接口的数据包</span></span><br><span class="line"><span class="comment"># 如果不指定网卡，默认tcpdump只会监视第一个网络接口，一般是eth0，下面的例子都没有指定网络接口。</span></span><br><span class="line">tcpdump -i eth1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 例如截获所有210.27.48.1 的主机收到的和发出的所有的数据包</span></span><br><span class="line">tcpdump -i eth1 host 210.27.48.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果想要获取主机210.27.48.1除了和主机210.27.48.2之外所有主机通信的ip包，使用命令：</span></span><br><span class="line">tcpdump -i eth0 ip host 210.27.48.1 and ! 210.27.48.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 截获主机210.27.48发出的所有数据（送到dns服务器的包）</span></span><br><span class="line">tcpdump -i eth0 src host 210.27.48</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监视所有送到主机210.27.48的数据包（dns服务器送出的包）</span></span><br><span class="line">tcpdump -i eth0 dst host 210.27.48</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#监视指定主机和端口的数据包</span></span><br><span class="line"><span class="comment"># 如果想要获取主机210.27.48.1接收或发出的telnet包，使用如下命令</span></span><br><span class="line">tcpdump tcp port 23 host 210.27.48.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对本机的udp 123 端口进行监视 123 为ntp的服务端口</span></span><br><span class="line">tcpdump udp port 123 </span><br><span class="line"></span><br><span class="line">tcpdump tcp -i eth1 -s 0 and src net 192.168.1.0/24 -w ./target.cap</span><br><span class="line">(1)tcp: ip icmp arp rarp 和 tcp、udp、icmp这些选项等都要放到第一个参数的位置，用来过滤数据报的类型</span><br><span class="line">(2)-i eth1 : 只抓经过接口eth1的包</span><br><span class="line">(3)src net 192.168.1.0/24 : 数据包的源网络地址为192.168.1.0/24</span><br><span class="line">(4)-w ./target.cap : 保存成<span class="built_in">cap</span>文件，方便用ethereal(即wireshark)分析</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>tcpdump</tag>
      </tags>
  </entry>
  <entry>
    <title>使用python编写一个守护进程脚本</title>
    <url>/page/202006060905.html</url>
    <content><![CDATA[<p>  千万不要把自己的软弱展现给别人看，千万不要把自己的狼狈述说给别人听。因为根本没有人会觉得你很可怜，只会觉得你很没用。</p>
<hr>
<p>  事情是这样的，公司要求写一个守护进程的脚本，保证另一个脚本一直在运行</p>
  <a id="more"></a>

<h1 id="人生苦短，用python吧"><a href="#人生苦短，用python吧" class="headerlink" title="人生苦短，用python吧"></a>人生苦短，用python吧</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding : utf-8</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> os, sys, time</span><br><span class="line"> </span><br><span class="line"><span class="comment">#son</span></span><br><span class="line">pid = os.fork()</span><br><span class="line"><span class="keyword">if</span> pid &gt; <span class="number">0</span>:</span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line">os.chdir(<span class="string">"/"</span>)</span><br><span class="line">os.setsid()</span><br><span class="line">os.umask(<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#grandson</span></span><br><span class="line">pid = os.fork()</span><br><span class="line"><span class="keyword">if</span> pid &gt; <span class="number">0</span>:</span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line">sys.stdout.flush()</span><br><span class="line">sys.stderr.flush()</span><br><span class="line">si = file(<span class="string">"/dev/null"</span>, <span class="string">'r'</span>)</span><br><span class="line">so = file(<span class="string">"/dev/null"</span>, <span class="string">'a+'</span>)</span><br><span class="line">se = file(<span class="string">"/dev/null"</span>, <span class="string">'a+'</span>, <span class="number">0</span>)</span><br><span class="line">os.dup2(si.fileno(), sys.stdin.fileno())</span><br><span class="line">os.dup2(so.fileno(), sys.stdout.fileno())</span><br><span class="line">os.dup2(se.fileno(), sys.stderr.fileno())</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    tunnel_status = os.popen(<span class="string">"ps -ef | egrep '\&lt;tunnel\&gt;' | grep -v grep | wc -l"</span>)</span><br><span class="line">    text = tunnel_status.read()</span><br><span class="line">    <span class="keyword">if</span> int(text) == <span class="number">0</span>:</span><br><span class="line">        cmd_status = os.popen(<span class="string">"python /home/tunnel/tunnel.py"</span>).read()</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'/var/log/daemon.log'</span>, <span class="string">'ab+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S The tunnel is restart!!!\r\n"</span>, time.localtime(time.time())))</span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>冷记忆</title>
    <url>/page/202005171645.html</url>
    <content><![CDATA[<p>有我记得，有我知道，便已足够。</p>
]]></content>
      <categories>
        <category>生活点滴</category>
      </categories>
      <tags>
        <tag>cold</tag>
      </tags>
  </entry>
  <entry>
    <title>可执行文件做成一个服务</title>
    <url>/page/202006060900.html</url>
    <content><![CDATA[<p>  当你做对的时候，没人会记得；当你做错的时候，连呼吸都是错。</p>
<hr>
<p>  一般程序执行 ./只是运行在前台,当离开了当前窗口,程序就会自动挂死,我们一般把程序做成一个服务,可以7x24跑在后台</p>
  <a id="more"></a>

<h1 id="系统centos7-0以上"><a href="#系统centos7-0以上" class="headerlink" title="系统centos7.0以上"></a>系统centos7.0以上</h1><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>  一般的服务模板<br>xxx.service</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line"># 应用描述</span><br><span class="line">Description&#x3D; xxx</span><br><span class="line"># 应用文档地址</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"># 进程启动方式，有：simple(默认), forking, oneshot, notify, dbus, idle这几种方式</span><br><span class="line">Type&#x3D;simple</span><br><span class="line"></span><br><span class="line"># 启动程序</span><br><span class="line">WorkingDirectory&#x3D;&#x2F;root&#x2F;sdpplugin&#x2F;plugin_path_check</span><br><span class="line">ExecStart&#x3D;&#x2F;root&#x2F;sdpplugin&#x2F;plugin_path_check&#x2F;plugin_path_check_linux</span><br><span class="line"></span><br><span class="line"># 进程结束后重启方式，可选值有：always, on-success, on-failure, on-abnormal, on-abort, on-watchdog</span><br><span class="line">Restart&#x3D;always</span><br><span class="line"># 重启间隔秒数</span><br><span class="line">RestartSec&#x3D;30</span><br><span class="line"># 标准输出到</span><br><span class="line">StandardOutput&#x3D;syslog</span><br><span class="line"># 标准错误输出到</span><br><span class="line">StandardError&#x3D;syslog</span><br><span class="line"># 设置syslog中log的程序名称</span><br><span class="line">SyslogIdentifier&#x3D;helloexample</span><br><span class="line"># 设置syslog中log类型</span><br><span class="line">SyslogFacility&#x3D;local0</span><br><span class="line"># 设置syslog中log级别，此处为info</span><br><span class="line">SyslogLevel&#x3D;info</span><br><span class="line"># 程序运行时的用户</span><br><span class="line">User&#x3D;root</span><br><span class="line"># 程序运行时分配的组</span><br><span class="line">Group&#x3D;root</span><br><span class="line"># 程序的环境变量</span><br><span class="line">Environment&#x3D;NODE_ENV&#x3D;production</span><br><span class="line"></span><br><span class="line"># 依赖于</span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>
<ul>
<li><p>必须要修改项:</p>
<ul>
<li>Description: 程序描述</li>
<li>WorkingDirectory: 程序运行目录</li>
<li>ExecStart: 程序运行指令</li>
</ul>
</li>
<li><p>可选修改项: </p>
<ul>
<li>Restart: 程序挂掉后是否要重启</li>
<li>RestartSec: 重启的间隔时间</li>
<li>User: 使用什么用户执行该程序</li>
<li>Group: 使用什么用户组执行该程序</li>
</ul>
</li>
<li><p>修改完毕把该文件放到 /etc/systemd/system/ 目录或者 /usr/lib/systemd/system/ 目录下,然后执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 重新加载文件</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="comment">## 启动程序</span></span><br><span class="line">systemctl start xxx.service</span><br><span class="line"><span class="comment">## 开机启动程序</span></span><br><span class="line">systemctl <span class="built_in">enable</span> xxx.service</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看xxx程序当前的日志(即时刷新)</span></span><br><span class="line">journalctl -f -u xxx.service</span><br><span class="line"><span class="comment"># 查看xxx程序历史日志</span></span><br><span class="line">journalctl -l -u xxx.service</span><br></pre></td></tr></table></figure>

<h1 id="系统centos6-0以下，debain系统"><a href="#系统centos6-0以下，debain系统" class="headerlink" title="系统centos6.0以下，debain系统"></a>系统centos6.0以下，debain系统</h1><p>  由于debain系统,ubuntu,centos6.0以下，没有systemctl服务<br>  我们可以编辑 /etc/init.d/xxx  然后赋予可执行权限</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash </span></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">start()</span><br><span class="line">&#123; </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"start PROGRAMME_NAME"</span>     <span class="comment">## PROGRAMME_NAME是程序名</span></span><br><span class="line">    PROGRAMME_NAME &amp;                  <span class="comment">## PROGRAMME_NAME是程序名</span></span><br><span class="line">	RETVAL=$?</span><br><span class="line">	sleep 2	</span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$RETVAL</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line">    	<span class="built_in">echo</span> <span class="string">"start PROGRAMME_NAME ok!"</span>  <span class="comment">## PROGRAMME_NAME是程序名</span></span><br><span class="line">		<span class="built_in">exit</span> 0</span><br><span class="line">	<span class="keyword">fi</span>	</span><br><span class="line">    <span class="built_in">exit</span> 1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">stop()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"stop PROGRAMME_NAME"</span>	  <span class="comment">## PROGRAMME_NAME是程序名</span></span><br><span class="line">	pid=$(cat PROGRAMME_PID)	   <span class="comment">## PROGRAMME_PID 程序pid路径</span></span><br><span class="line">    <span class="built_in">kill</span> <span class="variable">$pid</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"stop PROGRAMME_NAME ok!"</span>    <span class="comment">## PROGRAMME_NAME是程序名</span></span><br><span class="line">&#125;</span><br><span class="line">status()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> [ -f PROGRAMME_PID ]; <span class="keyword">then</span>     <span class="comment">## PROGRAMME_PID 程序pid路径</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"PROGRAMME_NAME is run"</span>    <span class="comment">## PROGRAMME_NAME是程序名</span></span><br><span class="line">		<span class="built_in">exit</span> 0</span><br><span class="line">	<span class="keyword">fi</span>	</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"PROGRAMME_NAME not run"</span>    <span class="comment">## PROGRAMME_NAME是程序名</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">stop)</span><br><span class="line">    stop</span><br><span class="line">    ;;</span><br><span class="line">restart)</span><br><span class="line">    stop</span><br><span class="line">    start</span><br><span class="line">    ;;</span><br><span class="line">status)</span><br><span class="line">	status</span><br><span class="line">	;;</span><br><span class="line">*)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"usage: <span class="variable">$0</span> start|stop|restart"</span></span><br><span class="line">    <span class="built_in">exit</span> 0;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>

<ul>
<li>启动命令<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">service  PROGRAMME_NAME start</span><br><span class="line">service  PROGRAMME_NAME stop</span><br><span class="line">service  PROGRAMME_NAME status</span><br></pre></td></tr></table></figure>

</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>(转载)可能有用的100多个网站</title>
    <url>/page/202006142017.html</url>
    <content><![CDATA[<p>  既然如此不容易，那么，遇见你，不管我们是什么关系，都代表我真的喜欢你。</p>
<hr>
  <a id="more"></a>

<h1 id="搞学习"><a href="#搞学习" class="headerlink" title="搞学习"></a>搞学习</h1><p>CSDN： <a href="https://www.csdn.net/" target="_blank" rel="noopener">https://www.csdn.net/</a><br>TED（最优质的演讲）：<a href="https://www.ted.com/" target="_blank" rel="noopener">https://www.ted.com/</a><br>谷粉学术： <a href="https://gfsoso.99lb.net/scholar.html" target="_blank" rel="noopener">https://gfsoso.99lb.net/scholar.html</a><br>大学资源网：<a href="http://www.dxzy163.com/" target="_blank" rel="noopener">http://www.dxzy163.com/</a><br>简答题：<a href="http://www.jiandati.com/" target="_blank" rel="noopener">http://www.jiandati.com/</a><br><strong>网易公开课：<a href="https://open.163.com/ted/" target="_blank" rel="noopener">https://open.163.com/ted/</a></strong><br>网易云课堂：<a href="https://study.163.com/" target="_blank" rel="noopener">https://study.163.com/</a><br>中国大学MOOC：<a href="http://www.icourse163.org" target="_blank" rel="noopener">www.icourse163.org</a><br>网易云课堂：study.163.com<br>哔哩哔哩弹幕网： <a href="http://www.bilibili.com" target="_blank" rel="noopener">www.bilibili.com</a><br>我要自学网： <a href="http://www.51zxw.net" target="_blank" rel="noopener">www.51zxw.net</a><br><strong>知乎：<a href="http://www.zhihu.com" target="_blank" rel="noopener">www.zhihu.com</a></strong><br>学堂在线：<a href="http://www.xuetangx.com" target="_blank" rel="noopener">www.xuetangx.com</a><br>爱课程：<a href="http://www.icourses.cn" target="_blank" rel="noopener">www.icourses.cn</a><br>猫咪论文：<a href="https://lunwen.im/" target="_blank" rel="noopener">https://lunwen.im/</a><br>iData（论文搜索）：<a href="http://www.cn-ki.net" target="_blank" rel="noopener">www.cn-ki.net</a><br>文泉考试：<a href="https://www.wqkaoshi.com" target="_blank" rel="noopener">https://www.wqkaoshi.com</a><br>码农之家（计算机电子书下载）：<a href="http://www.xz577.com" target="_blank" rel="noopener">www.xz577.com</a><br>鸠摩搜书：<a href="http://www.jiumodiary.com" target="_blank" rel="noopener">www.jiumodiary.com</a><br>云海电子图书馆：<a href="http://www.pdfbook.cn" target="_blank" rel="noopener">www.pdfbook.cn</a><br>周读（书籍搜索）：ireadweek.com<br>知轩藏书：<a href="http://www.zxcs.me/" target="_blank" rel="noopener">http://www.zxcs.me/</a><br>脚本之家电子书下载：<a href="https://www.jb51.net/books/" target="_blank" rel="noopener">https://www.jb51.net/books/</a><br>搜书VIP-电子书搜索：<a href="http://www.soshuvip.com/all.html" target="_blank" rel="noopener">http://www.soshuvip.com/all.html</a><br>书格（在线古籍图书馆）：<a href="https://new.shuge.org/" target="_blank" rel="noopener">https://new.shuge.org/</a><br>术语在线：<a href="http://www.termonline.cn/" target="_blank" rel="noopener">http://www.termonline.cn/</a><br>必看网（人生必看的书籍）：<a href="https://www.biikan.com/" target="_blank" rel="noopener">https://www.biikan.com/</a></p>
<h1 id="冷知识-黑科技"><a href="#冷知识-黑科技" class="headerlink" title="冷知识 / 黑科技"></a>冷知识 / 黑科技</h1><p>上班摸鱼必备（假装电脑系统升级）： <a href="http://fakeupdate.net/" target="_blank" rel="noopener">http://fakeupdate.net/</a><br>福利单词（一个不太正经的背单词网站）： <a href="http://dict.ftqq.com" target="_blank" rel="noopener">http://dict.ftqq.com</a><br>创意光线绘画：<a href="http://weavesilk.com/" target="_blank" rel="noopener">http://weavesilk.com/</a><br>星系观察： <a href="https://stellarium-web.org/" target="_blank" rel="noopener">https://stellarium-web.org/</a><br>煎蛋：<a href="http://jandan.net/" target="_blank" rel="noopener">http://jandan.net/</a><br><strong>渣男-说话的艺术：<a href="https://lovelive.tools/" target="_blank" rel="noopener">https://lovelive.tools/</a></strong><br>全历史：<a href="https://www.allhistory.com/" target="_blank" rel="noopener">https://www.allhistory.com/</a><br>iData：<a href="https://www.cn-ki.net/" target="_blank" rel="noopener">https://www.cn-ki.net/</a><br>caj云阅读：<a href="http://cajviewer.cnki.net/cajcloud/" target="_blank" rel="noopener">http://cajviewer.cnki.net/cajcloud/</a></p>
<h1 id="写代码"><a href="#写代码" class="headerlink" title="写代码"></a>写代码</h1><p>GitHub：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a><br>码云：<a href="https://gitee.com/" target="_blank" rel="noopener">https://gitee.com/</a><br>源码之家：<a href="https://www.mycodes.net/" target="_blank" rel="noopener">https://www.mycodes.net/</a><br>JSON to Dart： <a href="https://javiercbk.github.io/json_to_dart/" target="_blank" rel="noopener">https://javiercbk.github.io/json_to_dart/</a><br><strong>Json在线解析验证： <a href="https://www.json.cn/" target="_blank" rel="noopener">https://www.json.cn/</a></strong><br><strong>在线接口测试（Getman）：<a href="https://getman.cn/" target="_blank" rel="noopener">https://getman.cn/</a></strong></p>
<h1 id="资源搜索"><a href="#资源搜索" class="headerlink" title="资源搜索"></a>资源搜索</h1><p>DogeDoge搜索引擎：<a href="http://www.dogedoge.com" target="_blank" rel="noopener">www.dogedoge.com</a><br>秘迹搜索：<a href="https://mijisou.com/" target="_blank" rel="noopener">https://mijisou.com/</a><br>小白盘：<a href="https://www.xiaobaipan.com/" target="_blank" rel="noopener">https://www.xiaobaipan.com/</a><br>云盘精灵（资源搜索）：<a href="http://www.yunpanjingling.com" target="_blank" rel="noopener">www.yunpanjingling.com</a><br>虫部落（资源搜索）：<a href="http://www.chongbuluo.com" target="_blank" rel="noopener">www.chongbuluo.com</a><br>如风搜（资源搜索）：<a href="http://www.rufengso.net/" target="_blank" rel="noopener">http://www.rufengso.net/</a><br>爱扒：<a href="https://www.zyboe.com/" target="_blank" rel="noopener">https://www.zyboe.com/</a></p>
<h1 id="小工具"><a href="#小工具" class="headerlink" title="小工具"></a>小工具</h1><p>奶牛快传（在线传输文件利器）： cowtransfer.com<br><strong>文叔叔（大文件传输，不限速）：<a href="https://www.wenshushu.cn/" target="_blank" rel="noopener">https://www.wenshushu.cn/</a></strong><br>云端超级应用空间（PS，PPT，Excel，Ai）：<a href="https://uzer.me/" target="_blank" rel="noopener">https://uzer.me/</a><br>香当网（年终总结，个人简历，事迹材料，租赁合同，演讲稿）：<a href="https://www.xiangdang.net/" target="_blank" rel="noopener">https://www.xiangdang.net/</a><br>二维码生成：<a href="https://cli.im/" target="_blank" rel="noopener">https://cli.im/</a><br>搜狗翻译：fanyi.sogou.com<br>熵数（图表制作，数据可视化）：<a href="https://dydata.io/appv2/#/pages/index/home" target="_blank" rel="noopener">https://dydata.io/appv2/#/pages/index/home</a><br>拷贝兔：<a href="https://cp.anyknew.com/" target="_blank" rel="noopener">https://cp.anyknew.com/</a><br>图片无限变放大：<a href="http://bigjpg.com/zh" target="_blank" rel="noopener">http://bigjpg.com/zh</a><br>幕布（在线大纲笔记工具）：mubu.com<br>在线转换器（在线转换器转换任何测量单位）：<a href="https://zh.justcnw.com/" target="_blank" rel="noopener">https://zh.justcnw.com/</a><br>调查问卷制作：<a href="https://www.wenjuan.com/" target="_blank" rel="noopener">https://www.wenjuan.com/</a><br>果核剥壳（软件下载）：<a href="https://www.ghpym.com/" target="_blank" rel="noopener">https://www.ghpym.com/</a><br>软件下载：<a href="https://www.unyoo.com/" target="_blank" rel="noopener">https://www.unyoo.com/</a><br>MSDN我告诉你（windows10系统镜像下载）：<a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">https://msdn.itellyou.cn/</a></p>
<h1 id="导航页（工具集）"><a href="#导航页（工具集）" class="headerlink" title="导航页（工具集）"></a>导航页（工具集）</h1><p>世界各国网址大全： <a href="http://www.world68.com/" target="_blank" rel="noopener">http://www.world68.com/</a><br>小森林导航：<a href="http://www.xsldh6.com/" target="_blank" rel="noopener">http://www.xsldh6.com/</a><br>简捷工具：<a href="http://www.shulijp.com/" target="_blank" rel="noopener">http://www.shulijp.com/</a><br>NiceTool.net 好工具网：<a href="http://www.nicetool.net/" target="_blank" rel="noopener">http://www.nicetool.net/</a><br>现实君工具箱（综合型在线工具集成网站）：<a href="http://tool.uixsj.cn/" target="_blank" rel="noopener">http://tool.uixsj.cn/</a><br>蓝调网站：<a href="http://lcoc.top/" target="_blank" rel="noopener">http://lcoc.top/</a><br>偷渡鱼：<a href="https://touduyu.com/" target="_blank" rel="noopener">https://touduyu.com/</a><br>牛导航：<a href="http://www.ziliao6.com/" target="_blank" rel="noopener">http://www.ziliao6.com/</a><br>小呆导航：<a href="https://www.webjike.com/index.html" target="_blank" rel="noopener">https://www.webjike.com/index.html</a><br>简法主页：<a href="http://www.jianfast.com/" target="_blank" rel="noopener">http://www.jianfast.com/</a><br>KIM主页：<a href="https://kim.plopco.com/" target="_blank" rel="noopener">https://kim.plopco.com/</a><br>聚BT：<a href="https://jubt.net/cn/index.html" target="_blank" rel="noopener">https://jubt.net/cn/index.html</a><br>精准云工具合集：<a href="https://jingzhunyun.com/" target="_blank" rel="noopener">https://jingzhunyun.com/</a><br>兔2工具合集：<a href="https://www.tool2.cn/" target="_blank" rel="noopener">https://www.tool2.cn/</a><br>爱资料工具（在线实用工具集合）：<a href="http://www.toolnb.com" target="_blank" rel="noopener">www.toolnb.com</a><br>工具导航：<a href="https://hao.logosc.cn/" target="_blank" rel="noopener">https://hao.logosc.cn/</a></p>
<h1 id="看视频"><a href="#看视频" class="headerlink" title="看视频"></a>看视频</h1><p>94神马电影网：<a href="http://www.9rmb.com/" target="_blank" rel="noopener">http://www.9rmb.com/</a><br>NO视频官网：<a href="http://www.novipnoad.com/" target="_blank" rel="noopener">http://www.novipnoad.com/</a><br>蓝光画质电影：<a href="http://www.languang.co/" target="_blank" rel="noopener">http://www.languang.co/</a><br>在线看剧：<a href="http://dy.27234.cn/" target="_blank" rel="noopener">http://dy.27234.cn/</a><br>大数据导航：<a href="http://hao.199it.com/" target="_blank" rel="noopener">http://hao.199it.com/</a><br>多功能图片网站：<a href="https://www.logosc.cn/so/" target="_blank" rel="noopener">https://www.logosc.cn/so/</a><br>牛牛TV：<a href="http://www.ziliao6.com/tv/" target="_blank" rel="noopener">http://www.ziliao6.com/tv/</a><br>VideoFk解析视频：<a href="http://www.videofk.com/" target="_blank" rel="noopener">http://www.videofk.com/</a><br>蓝调网站：<a href="http://lcoc.top/vip2.3/" target="_blank" rel="noopener">http://lcoc.top/vip2.3/</a><br>永久资源采集网：<a href="http://www.yongjiuzy1.com/" target="_blank" rel="noopener">http://www.yongjiuzy1.com/</a></p>
<h1 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h1><p>码力全开（产品/设计师/独立开发者的资源库）： <a href="https://www.maliquankai.com/designnav/" target="_blank" rel="noopener">https://www.maliquankai.com/designnav/</a><br>免费音频素材：<a href="https://icons8.cn/music" target="_blank" rel="noopener">https://icons8.cn/music</a><br>新CG儿（视频素材模板，无水印+免费下载）：<a href="https://www.newcger.com/" target="_blank" rel="noopener">https://www.newcger.com/</a><br>Iconfont（阿里巴巴矢量图标库）： <a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a><br>小图标下载：<a href="https://www.easyicon.net/" target="_blank" rel="noopener">https://www.easyicon.net/</a><br>Flight Icon：<a href="https://www.flighticon.co/" target="_blank" rel="noopener">https://www.flighticon.co/</a><br>第一字体转换器：<a href="http://www.diyiziti.com/" target="_blank" rel="noopener">http://www.diyiziti.com/</a><br>doyoudosh（平面设计）：<a href="http://www.doyoudo.com" target="_blank" rel="noopener">www.doyoudo.com</a><br>企业宣传视频在线制作：<a href="https://duomu.tv/" target="_blank" rel="noopener">https://duomu.tv/</a><br>MAKE海报设计官网：<a href="http://maka.im/" target="_blank" rel="noopener">http://maka.im/</a><br>一键海报神器：<a href="https://www.logosc.cn/photo/?utm_source=hao.logosc.cn&amp;utm_medium=referral" target="_blank" rel="noopener">https://www.logosc.cn/photo/?utm_source=hao.logosc.cn&amp;utm_medium=referral</a><br>字由（字体设计）：<a href="http://www.hellofont.cn/" target="_blank" rel="noopener">http://www.hellofont.cn/</a><br>查字体网站：<a href="https://fonts.safe.360.cn/" target="_blank" rel="noopener">https://fonts.safe.360.cn/</a><br>爱给网（免费素材下载的网站，包括音效、配乐，3D、视频、游戏，平面、教程）： <a href="http://www.aigei.com/" target="_blank" rel="noopener">http://www.aigei.com/</a><br>在线视频剪辑：<a href="https://bilibili.clipchamp.com/editor" target="_blank" rel="noopener">https://bilibili.clipchamp.com/editor</a></p>
<h1 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h1><p>即书（在线制作PPT）：<a href="https://www.keysuper.com/" target="_blank" rel="noopener">https://www.keysuper.com/</a><br>PDF处理：<a href="https://smallpdf.com/cn" target="_blank" rel="noopener">https://smallpdf.com/cn</a><br>PDF处理：<a href="https://www.ilovepdf.com/zh-cn" target="_blank" rel="noopener">https://www.ilovepdf.com/zh-cn</a><br>PDF处理： <a href="https://www.pdfpai.com/" target="_blank" rel="noopener">https://www.pdfpai.com/</a><br>PDF处理：<a href="https://www.hipdf.cn/" target="_blank" rel="noopener">https://www.hipdf.cn/</a><br>图片压缩，PDF处理：<a href="https://docsmall.com/" target="_blank" rel="noopener">https://docsmall.com/</a><br>腾讯文档（在线协作编辑和管理文档）：docs.qq.com<br>ProcessOn（在线协作制作结构图）：<a href="http://www.processon.com" target="_blank" rel="noopener">www.processon.com</a><br>iLovePDF（在线转换PDF利器）：<a href="http://www.ilovepdf.com" target="_blank" rel="noopener">www.ilovepdf.com</a><br>PPT在线制作：<a href="https://www.woodo.cn/" target="_blank" rel="noopener">https://www.woodo.cn/</a><br>PDF24工具（pdf处理工具）：<a href="https://tools.pdf24.org/en" target="_blank" rel="noopener">https://tools.pdf24.org/en</a><br>IMGBOT（在线图片处理）：<a href="http://www.imgbot.ai" target="_blank" rel="noopener">www.imgbot.ai</a><br>福昕云编辑（在线编辑PDF）：edit.foxitcloud.cn<br>TinyPNG（在线压缩图片）：tinypng.com<br>优品PPT（模板下载）： <a href="http://www.ypppt.com/" target="_blank" rel="noopener">http://www.ypppt.com/</a><br>第一PPT（模板下载）：<a href="http://www.1ppt.com/xiazai/" target="_blank" rel="noopener">http://www.1ppt.com/xiazai/</a><br>三顿PPT导航：sandunppt.com<br>Excel函数表： <a href="https://support.office.com/zh-cn/article/excel-%E5%87%BD%E6%95%B0%EF%BC%88%E6%8C%89%E5%AD%97%E6%AF%8D%E9%A1%BA%E5%BA%8F%EF%BC%89-b3944572-255d-4efb-bb96-c6d90033e188" target="_blank" rel="noopener">https://support.office.com/zh-cn/article/excel-%E5%87%BD%E6%95%B0%EF%BC%88%E6%8C%89%E5%AD%97%E6%AF%8D%E9%A1%BA%E5%BA%8F%EF%BC%89-b3944572-255d-4efb-bb96-c6d90033e188</a></p>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>电脑壁纸：<a href="http://lcoc.top/bizhi/" target="_blank" rel="noopener">http://lcoc.top/bizhi/</a><br><a href="https://unsplash.com/" target="_blank" rel="noopener">https://unsplash.com/</a><br><a href="https://pixabay.com/" target="_blank" rel="noopener">https://pixabay.com/</a><br><a href="https://www.pexels.com/" target="_blank" rel="noopener">https://www.pexels.com/</a><br><a href="https://visualhunt.com/" target="_blank" rel="noopener">https://visualhunt.com/</a><br><a href="https://www.ssyer.com/" target="_blank" rel="noopener">https://www.ssyer.com/</a><br>彼岸图网：<a href="http://pic.netbian.com/" target="_blank" rel="noopener">http://pic.netbian.com/</a><br>极像素（超高清大图）：<a href="https://www.sigoo.com/" target="_blank" rel="noopener">https://www.sigoo.com/</a><br>免费版权图片搜索：<a href="https://www.logosc.cn/so/" target="_blank" rel="noopener">https://www.logosc.cn/so/</a></p>
]]></content>
      <categories>
        <category>其他东东</category>
      </categories>
  </entry>
  <entry>
    <title>各个系统硬件指纹获取</title>
    <url>/page/202006071445.html</url>
    <content><![CDATA[<p>  我从未想过要放弃你，只是偶尔有小情绪不确定我在你心里的位置，当我想要退缩的时候希望你能看出我的心思。</p>
<hr>
<p>  主要是获取机器硬件不经常更换的零件的信息,然后进行hashcode获取到的一个值,常用于鉴别是否同一台机器</p>
  <a id="more"></a>

<h1 id="主要获取的信息"><a href="#主要获取的信息" class="headerlink" title="主要获取的信息"></a>主要获取的信息</h1><pre><code>- CPU(cpu：DeviceID)
- 主板(主板：serialnumber)
- BIOS(bios：serialnumber)
- 网卡(一般是PCI总线上的网卡的MAC地址)
- RAM(内存：SerialNumber)</code></pre><h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><ul>
<li><p>主板uuid(需要先安装dmidecode)</p>
<ul>
<li>dmidecode -s system-uuid</li>
<li>dmidecode -t system | grep “Serial Number”</li>
</ul>
</li>
<li><p>获取cpuid(不一定有该命令)</p>
<ul>
<li>dmidecode -t 4 | grep ID |sort -u |awk -F’: ‘ ‘{print $2}’</li>
</ul>
</li>
<li><p>获取mac地址</p>
<ul>
<li>查找 /sys/class/net 下文件的路径,取带有pci字样的网卡的mac地址</li>
</ul>
</li>
<li><p>获取显卡id(不一定有该命令)</p>
<ul>
<li>lspci | grep VGA</li>
</ul>
</li>
<li><p>注意:linux系统因为各个版本安装的软件、指令都不相同,所以最好使用读取文件的方式来获取信息</p>
</li>
</ul>
<h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><ul>
<li><p>一般有两种方式获取</p>
<ul>
<li>利用系统自带库函数</li>
<li>利用wmic,但wmic是生成数据库,然后查表原理,有时候查询速度会比较慢<ul>
<li>wbemtest.exe打开wmic</li>
</ul>
</li>
</ul>
</li>
<li><p>获取cpuid</p>
<ul>
<li>Select * from Win32_Processor</li>
</ul>
</li>
<li><p>获取mac地址</p>
<ul>
<li>Select * from Win32_NetworkAdapter</li>
</ul>
</li>
<li><p>获取显卡id</p>
<ul>
<li>Select * from CIM_LogicalDevice</li>
</ul>
</li>
</ul>
<h1 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h1><ul>
<li>获取主板id<ul>
<li>system_profiler | grep “Serial Number (system)”</li>
</ul>
</li>
<li>获取cpuid   <ul>
<li>ioreg -rd1 -c IOPlatformExpertDevice | awk ‘/IOPlatformUUID/ {print $3;}’</li>
</ul>
</li>
<li>获取mac地址<ul>
<li>ifconfig -a | grep ‘ether’ | awk ‘{print $2}’</li>
</ul>
</li>
<li>获取显卡id<ul>
<li>system_profiler SPDisplaysDataType | grep ‘Device ID’ | awk ‘{print$3}’</li>
</ul>
</li>
</ul>
<h1 id="android-iphone"><a href="#android-iphone" class="headerlink" title="android/iphone"></a>android/iphone</h1><ul>
<li>获取机器唯一uuid</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>finger</tag>
      </tags>
  </entry>
  <entry>
    <title>如何生成静态库</title>
    <url>/page/202007052014.html</url>
    <content><![CDATA[<p>  我环游遍了整个星系，找不到比你更亮的星星</p>
<hr>
<p>  事情是这样的，由于要保护公司某段核心代码，需要把这段代码生成各种系统下可用的静态库，以供其他的组件调用。核心代码中包含有回调函数还有手动申请/释放内存的函数，以防有的系统下无法调用，所以先做个打个先锋。做一下demo进行尝试。</p>
  <a id="more"></a>


<h1 id="golang编译静态库"><a href="#golang编译静态库" class="headerlink" title="golang编译静态库"></a>golang编译静态库</h1><p>testlib.go</p>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">//#include &lt;libc.h&gt;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"C"</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//export AddNum</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddNum</span><span class="params">(int1 <span class="keyword">int</span>, int2 <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> int1 + int2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//export SubNum</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SubNum</span><span class="params">(int1 <span class="keyword">int</span>, int2 <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> int1 - int2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//export Addperfix</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Addperfix</span><span class="params">(perfix, name <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">    fmt.Println(perfix, <span class="string">"!"</span>, name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//export Sayhello</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Sayhello</span><span class="params">(f <span class="keyword">func</span>(<span class="keyword">string</span>, <span class="keyword">string</span>)</span>, <span class="title">name</span> <span class="title">string</span>)</span> &#123;</span><br><span class="line">    f(<span class="string">"hello"</span>, name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>  ps:必须要在需要暴露的函数上头加上//export，不然生成的出来的头文件不会携带该函数。</p>
<h2 id="golang编译成a库"><a href="#golang编译成a库" class="headerlink" title="golang编译成a库"></a>golang编译成a库</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">go build -buildmode=c-archive -o libtest.a libtest.go</span><br></pre></td></tr></table></figure>

<p>  ps:关于go build buildmode的设置 具体可查看 go help buildmode</p>
<ul>
<li>c-archive 编译出来的是静态库和一个头文件</li>
<li>c-shared 编译出来的是动态库和一个头文件</li>
</ul>
<h2 id="golang编译成framework"><a href="#golang编译成framework" class="headerlink" title="golang编译成framework"></a>golang编译成framework</h2><p>  golang编译成framework静态库最好是使用gomobile来进行编译</p>
<h2 id="golang编译成dll"><a href="#golang编译成dll" class="headerlink" title="golang编译成dll"></a>golang编译成dll</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">go build -buildmode=c-archive -o libtest.dll libtest.go</span><br></pre></td></tr></table></figure>

<h1 id="c编译静态库"><a href="#c编译静态库" class="headerlink" title="c编译静态库"></a>c编译静态库</h1><p>main.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"libtest.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">AddNum</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SubNum</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1 - num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetMemoryTest</span><span class="params">(<span class="keyword">char</span> **pStr)</span> </span>&#123;</span><br><span class="line">    *pStr = (<span class="keyword">char</span> *) <span class="built_in">malloc</span>(<span class="number">100</span>);</span><br><span class="line">    <span class="built_in">strcpy</span>(*pStr, <span class="string">"hello world"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myfoo</span><span class="params">(<span class="keyword">char</span> *pStr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"get data:%s\n"</span>,pStr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CallbackTest</span><span class="params">(pfoo foo, <span class="keyword">char</span> *pStr)</span> </span>&#123;</span><br><span class="line">    foo(pStr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"start test\n"</span>);</span><br><span class="line">    <span class="keyword">char</span> *str = <span class="literal">NULL</span>;</span><br><span class="line">    GetMemoryTest(&amp;str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, str);</span><br><span class="line">    <span class="keyword">if</span> (str != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(str);</span><br><span class="line">        str = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">char</span> tStr[] = <span class="string">"callback test"</span>;</span><br><span class="line">    CallbackTest(myfoo, tStr);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>testlib.h</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __TESTTEST_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __TESTTEST_H__</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*pfoo)</span><span class="params">(<span class="keyword">char</span> *pStr)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetMemory</span><span class="params">(<span class="keyword">char</span> **pStr)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CallbackTest</span><span class="params">(pfoo foo, <span class="keyword">char</span> *pStr)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">AddNum</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SubNum</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"><span class="meta">#<span class="meta-keyword">endif</span></span></span></span><br></pre></td></tr></table></figure>

<h2 id="c编译成a库"><a href="#c编译成a库" class="headerlink" title="c编译成a库"></a>c编译成a库</h2><p>可以使用cc/gcc/clang等工具生成</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编译</span></span><br><span class="line">cc -c main.c</span><br><span class="line"><span class="comment"># 连接</span></span><br><span class="line">cc main.o</span><br><span class="line"><span class="comment"># 打包</span></span><br><span class="line">ar -r libtest.a main.o</span><br></pre></td></tr></table></figure>

<h2 id="c编译成dll"><a href="#c编译成dll" class="headerlink" title="c编译成dll"></a>c编译成dll</h2><p>需要安装winGW</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打包</span></span><br><span class="line">gcc -shared -o libtest.dll main.c</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">gcc -L. -llibtest -o main.exe main.c</span><br></pre></td></tr></table></figure>

<h1 id="objectiveC编译静态库"><a href="#objectiveC编译静态库" class="headerlink" title="objectiveC编译静态库"></a>objectiveC编译静态库</h1><p>testlib.m</p>
<figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"testlib.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">testliba</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">int</span>)AddNum:(<span class="keyword">int</span>)First andSecond:(<span class="keyword">int</span>)Second &#123;</span><br><span class="line">    <span class="keyword">return</span> (First + Second);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">int</span>)SubNum:(<span class="keyword">int</span>)First andSecond:(<span class="keyword">int</span>)Second &#123;</span><br><span class="line">    <span class="keyword">return</span> (First - Second);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)GetMemory:(<span class="keyword">char</span>**)p &#123;</span><br><span class="line">    *p = (<span class="keyword">char</span> *) malloc(<span class="number">100</span>);</span><br><span class="line">    strcpy(*p, <span class="string">"hello world"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)PrintText &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"测试打印"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)SetDelegateObject:(<span class="keyword">id</span>)cbobject setBackFunctionName:(<span class="built_in">NSString</span> *)selectorName &#123;</span><br><span class="line">    callbackObject = cbobject;</span><br><span class="line">    callbackFunction = selectorName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)handleEventObject &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"执行本类的操作"</span>);</span><br><span class="line">    SEL func_selector = <span class="built_in">NSSelectorFromString</span>(callbackFunction);</span><br><span class="line">    <span class="keyword">if</span> ([callbackObject respondsToSelector:func_selector]) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"回调成功..."</span>);</span><br><span class="line">        [callbackObject performSelector:func_selector];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"回调失败..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>

<p>testlib.h</p>
<figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">testliba</span> : <span class="title">NSObject</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义回调类和回调函数</span></span><br><span class="line">    <span class="keyword">id</span> callbackObject;</span><br><span class="line">    <span class="built_in">NSString</span> *callbackFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">int</span>)AddNum:(<span class="keyword">int</span>)First andSecond:(<span class="keyword">int</span>)Second;</span><br><span class="line">- (<span class="keyword">int</span>)SubNum:(<span class="keyword">int</span>)First andSecond:(<span class="keyword">int</span>)Second;</span><br><span class="line">- (<span class="keyword">void</span>)GetMemory:(<span class="keyword">char</span>**)p;</span><br><span class="line">- (<span class="keyword">void</span>)SetDelegateObject:(<span class="keyword">id</span>)cbobject setBackFunctionName:(<span class="built_in">NSString</span> *)selectorName;</span><br><span class="line">- (<span class="keyword">void</span>)handleEventObject;</span><br><span class="line">- (<span class="keyword">void</span>)PrintText;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>

<h2 id="objC-编译成framework，a"><a href="#objC-编译成framework，a" class="headerlink" title="objC 编译成framework，a"></a>objC 编译成framework，a</h2><p>  使用xcode新建一个静态库的工程，然后加载文件进行编译</p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>  编译出来的静态库，<br>  在windows下可以使用静态库查看软件查看其内部结构<br>  在macos下可以用命令lipo -info 和nm 来查看该动态库支持的类型和框架<br>  如果要在ios上使用 x64_86 是使用在模拟器上的 arm64是使用在真机上的 arm7 是使用在ios6以前的系统上的</p>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>ios</tag>
        <tag>clang</tag>
        <tag>lib</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu下安装ARM64位系统的交叉编译工具</title>
    <url>/page/202105280947.html</url>
    <content><![CDATA[<p>  其实所有纠结做选择的人心里早就有了答案，咨询只是想得到内心所倾向的选择。最终的所谓命运，还是自己一步步走出来的。</p>
<hr>
<p>  程序需要在arm下边跑,要使用aarch64-linux-gnu进行交叉编译,刚好虚拟机上没有这个文件,需要重新安装</p>
  <a id="more"></a>

<h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><ul>
<li>查看哪些版本可以安装；</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-cache search aarch64</span><br></pre></td></tr></table></figure>

<ul>
<li>安装一个gcc开头的9版本的支持64bit ARM linux的交叉编译工具；</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install gcc-9-aarch64-linux-gnu</span><br></pre></td></tr></table></figure>

<ul>
<li>下载包的时候报错,原因是镜像文件太久了,需要替换</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sudo apt-get install gcc-9-aarch64-linux-gnu</span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">The following package was automatically installed and is no longer required:</span><br><span class="line">   cpp-aarch64-linux-gnu (4:9.2.1-3.1ubuntu1)</span><br><span class="line">Use 'sudo apt autoremove' to remove it.</span><br><span class="line">Suggested packages:</span><br><span class="line">   gcc-9-doc (9.2.1-9ubuntu2)</span><br><span class="line">   gcc-9-locales (9.2.1-9ubuntu2)</span><br><span class="line">   libgcc1-dbg-arm64-cross (1:9.2.1-9ubuntu2cross1)</span><br><span class="line">   libgomp1-dbg-arm64-cross (9.2.1-9ubuntu2cross1)</span><br><span class="line">   libitm1-dbg-arm64-cross (9.2.1-9ubuntu2cross1)</span><br><span class="line">   libatomic1-dbg-arm64-cross (9.2.1-9ubuntu2cross1)</span><br><span class="line">   libasan5-dbg-arm64-cross (9.2.1-9ubuntu2cross1)</span><br><span class="line">   liblsan0-dbg-arm64-cross (9.2.1-9ubuntu2cross1)</span><br><span class="line">   libtsan0-dbg-arm64-cross (9.2.1-9ubuntu2cross1)</span><br><span class="line">   libubsan1-dbg-arm64-cross (9.2.1-9ubuntu2cross1)</span><br><span class="line">   libquadmath0-dbg-arm64-cross</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">   gcc-9-aarch64-linux-gnu (9.2.1-9ubuntu2cross1)</span><br><span class="line">0 upgraded, 1 newly installed, 0 to remove and 4 not upgraded.</span><br><span class="line">Need to get 7,350 kB of archives.</span><br><span class="line">After this operation, 25.2 MB of additional disk space will be used.</span><br><span class="line">Err:1 http://mirrors.163.com/ubuntu eoan/main amd64 gcc-9-aarch64-linux-gnu amd64 9.2.1-9ubuntu2cross1</span><br><span class="line">  404  Not Found [IP: 14.17.102.87 80]</span><br><span class="line">E: Failed to fetch http://mirrors.163.com/ubuntu/pool/main/g/gcc-9-cross/gcc-9-aarch64-linux-gnu_9.2.1-9ubuntu2cross1_amd64.deb  404  Not Found [IP: 14.17.102.87 80]</span><br><span class="line">E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?</span><br><span class="line">ubuntu root@[/home/dev/new_sdp/gateway]# apt-get update --fix-missing</span><br><span class="line">Ign:1 http://mirrors.163.com/ubuntu eoan InRelease</span><br><span class="line">Ign:2 http://mirrors.163.com/ubuntu eoan-updates InRelease</span><br><span class="line">Ign:3 http://mirrors.163.com/ubuntu eoan-backports InRelease</span><br><span class="line">Ign:4 http://mirrors.163.com/ubuntu eoan-security InRelease</span><br><span class="line">Err:5 http://mirrors.163.com/ubuntu eoan Release</span><br><span class="line">  404  Not Found [IP: 14.17.102.89 80]</span><br><span class="line">Err:6 http://mirrors.163.com/ubuntu eoan-updates Release</span><br><span class="line">  404  Not Found [IP: 14.17.102.89 80]</span><br><span class="line">Err:7 http://mirrors.163.com/ubuntu eoan-backports Release</span><br><span class="line">  404  Not Found [IP: 14.17.102.89 80]</span><br><span class="line">Err:8 http://mirrors.163.com/ubuntu eoan-security Release</span><br><span class="line">  404  Not Found [IP: 14.17.102.89 80]</span><br><span class="line">Reading package lists... Done</span><br><span class="line">E: The repository 'http://mirrors.163.com/ubuntu eoan Release' no longer has a Release file.</span><br><span class="line">N: Updating from such a repository can't be done securely, and is therefore disabled by default.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br><span class="line">E: The repository 'http://mirrors.163.com/ubuntu eoan-updates Release' no longer has a Release file.</span><br><span class="line">N: Updating from such a repository can't be done securely, and is therefore disabled by default.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br><span class="line">E: The repository 'http://mirrors.163.com/ubuntu eoan-backports Release' no longer has a Release file.</span><br><span class="line">N: Updating from such a repository can't be done securely, and is therefore disabled by default.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br><span class="line">E: The repository 'http://mirrors.163.com/ubuntu eoan-security Release' no longer has a Release file.</span><br><span class="line">N: Updating from such a repository can't be done securely, and is therefore disabled by default.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br></pre></td></tr></table></figure>

<ul>
<li><p>在<a href="https://mirrors.ustc.edu.cn/repogen/" target="_blank" rel="noopener">官网</a>上下载对应版本最新的源文件</p>
</li>
<li><p>把下载好的sources.list拷贝到对应的位置将原文件覆盖</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cp sources.list &#x2F;etc&#x2F;apt</span><br></pre></td></tr></table></figure>

<ul>
<li>重新更新源</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<ul>
<li>重新安装交叉编译库</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install gcc-9-aarch64-linux-gnu</span><br></pre></td></tr></table></figure>

<ul>
<li>然后再安装一个没有版本号的gcc-aarch64-linux-gnu；</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install gcc-aarch64-linux-gnu</span><br></pre></td></tr></table></figure>

<ul>
<li>最后检查</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aarch64-linux-gnu-gcc -v</span><br></pre></td></tr></table></figure>

<ul>
<li>完成[棒棒哒]</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>图片用字符拼凑小程序</title>
    <url>/page/202006210935.html</url>
    <content><![CDATA[<p>  情不知其所起，一往而深。</p>
<hr>
<p>  一个把照片转化成字符的小程序</p>
  <a id="more"></a>

<p>  注意,图片最好像素不要太高,色彩要比较分明<br>  亦可自行调整 img.resize((int(width<em>0.6), int(width</em>0.3/scale) )) 中的参数</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os, sys</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getText</span><span class="params">(img)</span>:</span></span><br><span class="line">    img = img.convert(<span class="string">"L"</span>)</span><br><span class="line">    charlist = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(<span class="number">0</span>,img.size[<span class="number">1</span>]):</span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> range(<span class="number">0</span>,img.size[<span class="number">0</span>]):</span><br><span class="line">            gray = img.getpixel((w,h)) </span><br><span class="line">            pos = gray/<span class="number">256</span></span><br><span class="line">            charlist = charlist + codelist[int((count<span class="number">-1</span>)*pos)]</span><br><span class="line">        charlist = charlist+<span class="string">'\r\n'</span></span><br><span class="line">    <span class="keyword">return</span> charlist</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getImage</span><span class="params">(fileName)</span>:</span></span><br><span class="line">    file = open(fileName, <span class="string">'rb'</span>)</span><br><span class="line">    img = Image.open(file)</span><br><span class="line">    <span class="keyword">return</span> img</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trantxt</span><span class="params">(fileName)</span>:</span></span><br><span class="line">    outfile = open(<span class="string">"test_"</span>+fileName +<span class="string">'.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">    outfile.write(getText(img))</span><br><span class="line">    outfile.close()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        print(<span class="string">"please input the phtot name."</span>)</span><br><span class="line">    fileName = sys.argv[<span class="number">1</span>]</span><br><span class="line">    img = getImage(fileName)</span><br><span class="line">    width, height = img.size[<span class="number">0</span>],img.size[<span class="number">1</span>]</span><br><span class="line">    codelist = <span class="string">"""qwertyuiop[]asdfghjkl;'zxcvbnm,./`~!@#$%^&amp;&lt;()*+&#123;&#125;:"?&gt; |"""</span> </span><br><span class="line">    count = len(codelist)</span><br><span class="line">    scale = width / height </span><br><span class="line">    img = img.resize((int(width*<span class="number">0.6</span>), int(width*<span class="number">0.3</span>/scale) ))  </span><br><span class="line">    trantxt(fileName)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其他东东</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>实现一个过期后自动删除数据的map</title>
    <url>/page/202011081015.html</url>
    <content><![CDATA[<p>  人的感情就像牙齿，掉了就没了，再装也是假的，掉了的东西就不要捡了，接受突如其来的失去，珍惜不期而遇的惊喜。</p>
<hr>
  <a id="more"></a>

<p>  就是做一个map，可以自动设置过期时间，过期后数据要自动删除，线程安全<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  package  x_expireMap</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">	&quot;com.x.base&#x2F;util&#x2F;x_log&quot;</span><br><span class="line">	&quot;sync&quot;</span><br><span class="line">	&quot;time&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">map表,每个参数带一个timeout属性,如果超过时间了,从map中删除</span><br><span class="line">申请后,需要手动停止</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">type ExpireMap struct &#123;</span><br><span class="line">	&#x2F;&#x2F;存放所有数据的 map</span><br><span class="line">	Data 		sync.Map</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;初始化过期的时间</span><br><span class="line">	timeout 	int64</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;一个用过期时间节点为key的一个map,为了遍历的时候不循环的整个load整个的map</span><br><span class="line">	timeMap 	map[int64][]interface&#123;&#125;</span><br><span class="line"></span><br><span class="line">	lock 		sync.Mutex</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;一个停止的chan</span><br><span class="line">	ch 			chan interface&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">初始化的时候可以选择超时时间,单位为秒</span><br><span class="line"> *&#x2F;</span><br><span class="line">func NewExpireMap(timeout int64) *ExpireMap &#123;</span><br><span class="line">	if timeout &#x3D;&#x3D; 0 &#123;</span><br><span class="line">		timeout &#x3D; 10</span><br><span class="line">	&#125;</span><br><span class="line">	e :&#x3D; ExpireMap &#123;</span><br><span class="line">		Data: sync.Map&#123;&#125;,</span><br><span class="line">		timeout:timeout,</span><br><span class="line">		timeMap: make(map[int64][]interface&#123;&#125;),</span><br><span class="line">		lock: sync.Mutex&#123;&#125;,</span><br><span class="line">		ch: make(chan interface&#123;&#125;),</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	go e.check(time.Now().Unix())</span><br><span class="line">	return &amp;e</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">查找</span><br><span class="line"> *&#x2F;</span><br><span class="line">func (e *ExpireMap) check(nowTime int64) &#123;</span><br><span class="line">	t :&#x3D; time.NewTicker(1 * time.Second)</span><br><span class="line"></span><br><span class="line">	for &#123;</span><br><span class="line">		select &#123;</span><br><span class="line">		case &lt;-t.C:</span><br><span class="line">			nowTime++</span><br><span class="line"></span><br><span class="line">			if key, ok :&#x3D; e.timeMap[nowTime]; ok &#123;</span><br><span class="line">				e.deleteData(key, nowTime)</span><br><span class="line">			&#125;</span><br><span class="line">		case &lt;-e.ch:</span><br><span class="line">			x_log.Debug(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;ExpireMap stop&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;)</span><br><span class="line">			return</span><br><span class="line">		default:</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">添加一个data到map中</span><br><span class="line"> *&#x2F;</span><br><span class="line">func (e *ExpireMap) Add(data interface&#123;&#125;) &#123;</span><br><span class="line">	e.lock.Lock()</span><br><span class="line">	defer e.lock.Unlock()</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;已经有就不再添加了</span><br><span class="line">	if e.Get(data) &#123;</span><br><span class="line">		return</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	tt :&#x3D; time.Now().Unix() + e.timeout</span><br><span class="line"></span><br><span class="line">	e.Data.Store(data, tt)</span><br><span class="line">	e.timeMap[tt] &#x3D; append(e.timeMap[tt], data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">过期的时候删除data</span><br><span class="line"> *&#x2F;</span><br><span class="line">func (e *ExpireMap) deleteData(data []interface&#123;&#125;, t int64) &#123;</span><br><span class="line">	e.lock.Lock()</span><br><span class="line">	defer e.lock.Unlock()</span><br><span class="line"></span><br><span class="line">	delete(e.timeMap, t)</span><br><span class="line"></span><br><span class="line">	for _, dd :&#x3D; range data &#123;</span><br><span class="line">		e.Data.Delete(dd)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">检测这个data 是否存在</span><br><span class="line"> *&#x2F;</span><br><span class="line">func (e *ExpireMap) Get(data interface&#123;&#125;) bool &#123;</span><br><span class="line"></span><br><span class="line">	timeout, ok :&#x3D; e.Data.Load(data)</span><br><span class="line">	if ok &amp;&amp; time.Now().Unix() &lt; timeout.(int64) &#123;</span><br><span class="line">		return true</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	return false</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (e *ExpireMap) Stop () &#123;</span><br><span class="line">	e.lock.Lock()</span><br><span class="line">	defer e.lock.Unlock()</span><br><span class="line">	e.ch &lt;- 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>对于golang两个库相互循环引用的解决方案</title>
    <url>/page/202006251915.html</url>
    <content><![CDATA[<p>  卑微的讨好别人，只会换来别人的无视，这世界只有自身的强大，才能换来别人对你的重视，只有平等的对待，才能换来真正的尊重。</p>
<hr>
  <a id="more"></a>

<p>相信用golang写过代码的小伙伴都遇到过这个,包循环引用导致编译无法通过的问题，一个最简单最蠢的办法就是所有的包都合并放到一个包里了，还有一个办法，就是对需要互相调用的API抽象成一个公共的接口，在不同包里实现接口，调用接口就可以达到效果.</p>
<p>  例如现在我自定义了一个xlog包和一个xini的包,xlog使用了xini中读取配置文件的接口,xini调用了xlog里面的打印log接口</p>
<p>  那我们可以把xlog抽象成一个interface</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var XLogHandle XLogInterface</span><br><span class="line"></span><br><span class="line">type XLogInterface interface &#123;</span><br><span class="line">	SysMsg(msg string, param ...interface&#123;&#125;)</span><br><span class="line">	Info(msg string, param ...interface&#123;&#125;)</span><br><span class="line">	Warn(msg string, param ...interface&#123;&#125;)</span><br><span class="line">	Debug(msg string, param ...interface&#123;&#125;)</span><br><span class="line">	Status(msg string, param ...interface&#123;&#125;)</span><br><span class="line">	Err(msg string, param ...interface&#123;&#125;)</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;把详细信息写入数据库的接口</span><br><span class="line">	InfoS(logModule, LogSubType, id string, param ...interface&#123;&#125;)</span><br><span class="line">	WarnS(logModule, LogSubType, id string, param ...interface&#123;&#125;)</span><br><span class="line">	DebugS(logModule, LogSubType, id string, param ...interface&#123;&#125;)</span><br><span class="line">	StatusS(logModule, LogSubType, id string, param ...interface&#123;&#125;)</span><br><span class="line">	ErrS(logModule, LogSubType, id string, param ...interface&#123;&#125;)</span><br><span class="line"></span><br><span class="line">	IsDebugShow() bool</span><br><span class="line">	DebugShow(key string) bool</span><br><span class="line"></span><br><span class="line">	SetLogPrefix(prefix string)</span><br><span class="line">	ResetLogPath(path string)</span><br><span class="line">	Close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>  然后新建一个包,实例化这个interfaces,注意一定要实现所有的方法,系统才认为你继承了这个interfaces</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package x_logbase</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">	&quot;com.x.base&#x2F;tools&#x2F;x_ini&quot;</span><br><span class="line">	&quot;com.x.base&#x2F;util&#x2F;x_file&#x2F;x_monitorfile&quot;</span><br><span class="line">	&quot;com.x.base&#x2F;util&#x2F;x_log&quot;</span><br><span class="line">	&quot;fmt&quot;</span><br><span class="line">	&quot;os&quot;</span><br><span class="line">	&quot;os&#x2F;exec&quot;</span><br><span class="line">	&quot;path&#x2F;filepath&quot;</span><br><span class="line">	&quot;runtime&quot;</span><br><span class="line">	&quot;strconv&quot;</span><br><span class="line">	&quot;strings&quot;</span><br><span class="line">	&quot;time&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">type XLog struct &#123;</span><br><span class="line">	IsError   	int</span><br><span class="line">	IsWarn    	int</span><br><span class="line">	IsInfo    	int</span><br><span class="line">	IsDebug   	int</span><br><span class="line">	DebugDetail map[string]int</span><br><span class="line">	IsStatus  	int</span><br><span class="line">	Path      	string</span><br><span class="line">	LogType   	string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var xlog XLog</span><br><span class="line">var tmpPath string</span><br><span class="line">var newLogPath string</span><br><span class="line">var xlogPrefix string</span><br><span class="line">var isLogExit bool &#x3D; false</span><br><span class="line"></span><br><span class="line">var infoWriter XLogBase</span><br><span class="line">var errWriter XLogBase</span><br><span class="line">var warnWriter XLogBase</span><br><span class="line">var debugWriter XLogBase</span><br><span class="line">var statusWriter XLogBase</span><br><span class="line">&#x2F;&#x2F;备用writer 数据库出错时写入文件</span><br><span class="line">var normalWriter XLogBase</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">type XLogBase interface &#123;</span><br><span class="line">	Add(params ...interface&#123;&#125;)</span><br><span class="line">	Save()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func init() &#123;</span><br><span class="line">	isLogExit &#x3D; true</span><br><span class="line">	f, err :&#x3D; exec.LookPath(os.Args[0])</span><br><span class="line">	var pp string &#x3D; &quot;&quot;</span><br><span class="line">	if err !&#x3D; nil &#123;</span><br><span class="line">		pp &#x3D; &quot;&#x2F;&quot;</span><br><span class="line">	&#125;</span><br><span class="line">	path, err :&#x3D; filepath.Abs(f)</span><br><span class="line">	if err !&#x3D; nil &#123;</span><br><span class="line">		pp &#x3D; &quot;&#x2F;&quot;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	i :&#x3D; strings.LastIndex(path, &quot;&#x2F;&quot;)</span><br><span class="line"></span><br><span class="line">	if i &lt; 0 &#123;</span><br><span class="line">		i &#x3D; strings.LastIndex(path, &quot;\\&quot;)</span><br><span class="line">	&#125;</span><br><span class="line">	if i &lt; 0 &#123;</span><br><span class="line">		pp &#x3D; &quot;&#x2F;&quot;</span><br><span class="line">	&#125;</span><br><span class="line">	ret :&#x3D; string(path[0 : i+1])</span><br><span class="line"></span><br><span class="line">	pp &#x3D; strings.ReplaceAll(ret, &quot;\\&quot;, &quot;&#x2F;&quot;)</span><br><span class="line">	tmpPath &#x3D; pp</span><br><span class="line"></span><br><span class="line">	x_log.XLogHandle &#x3D; xlog.CreateInterface(tmpPath)</span><br><span class="line">	reloadIniFile()</span><br><span class="line">	fmt.Println(&quot;[log_level] status&#x3D;&quot;, xlog.IsStatus, &quot; debug&#x3D;&quot;, xlog.IsDebug, &quot; info&#x3D;&quot;, xlog.IsInfo, &quot; warn&#x3D;&quot;, xlog.IsWarn, &quot; error&#x3D;&quot;, xlog.IsError)</span><br><span class="line"></span><br><span class="line">	go startWrite()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func (l XLog) Create(t string, preix string, level int) XLogBase &#123;</span><br><span class="line">	switch t &#123;</span><br><span class="line">	case &quot;file&quot;:</span><br><span class="line">		r :&#x3D; NewXLogWrite(preix, level)</span><br><span class="line">		return r</span><br><span class="line">	case &quot;sql&quot;:</span><br><span class="line">		r :&#x3D; NewXLogSql(preix)</span><br><span class="line">		return r</span><br><span class="line">	default:</span><br><span class="line">		return nil</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) CreateInterface(path string) x_log.XLogInterface &#123;</span><br><span class="line">	return &amp;XLog&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) SysMsg(msg string, param ...interface&#123;&#125;) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) Info(msg string, param ...interface&#123;&#125;) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) Warn(msg string, param ...interface&#123;&#125;) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) Debug(msg string, param ...interface&#123;&#125;)&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) Status(msg string, param ...interface&#123;&#125;) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) Err(msg string, param ...interface&#123;&#125;) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) IsDebugShow() bool &#123;</span><br><span class="line">	return xlog.IsDebug &gt; 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) DebugShow(key string) bool &#123;</span><br><span class="line">	if xlog.IsDebug &gt; 0 &#123;</span><br><span class="line">		_, ok :&#x3D; xlog.DebugDetail[key]</span><br><span class="line">		return ok</span><br><span class="line">	&#125;</span><br><span class="line">	return false</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) SetLogPrefix(prefix string) &#123;</span><br><span class="line">	xlogPrefix &#x3D; prefix</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) ResetLogPath(path string) &#123;</span><br><span class="line">	newLogPath &#x3D; path</span><br><span class="line">	xlog.Path &#x3D; path</span><br><span class="line">	initWriter()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func (l *XLog) Close() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func initWriter() &#123;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func startWrite() &#123;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func NowStr() string &#123;</span><br><span class="line">	return time.Now().Format(&quot;2006-01-02 15:04:05&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func GetStack(skip int) string &#123;</span><br><span class="line">	skip++</span><br><span class="line">	_, file, line, _ :&#x3D; runtime.Caller(skip)</span><br><span class="line"></span><br><span class="line">	return fmt.Sprintf(&quot;%s:%s&quot;, file, strconv.Itoa(line))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line">重新加载日志文件</span><br><span class="line">*&#x2F;</span><br><span class="line">func reloadIniFile() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;详细信息写入sql</span><br><span class="line">func (l *XLog) InfoS(logModule, LogSubType, id string, param ...interface&#123;&#125;) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) ErrS(logModule, LogSubType, id string, param ...interface&#123;&#125;) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) StatusS(logModule, LogSubType, id string, param ...interface&#123;&#125;) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) WarnS(logModule, LogSubType, id string, param ...interface&#123;&#125;) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (l *XLog) DebugS(logModule, LogSubType, id string, param ...interface&#123;&#125;) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>招聘提纲</title>
    <url>/page/202108261920.html</url>
    <content><![CDATA[<p>  隐约雷鸣，阴霾天空，但盼风雨来，能留你在此。<br>  隐约雷鸣，阴霾天空，即使天无雨，我亦留此地。</p>
<hr>
  <a id="more"></a>

<h1 id="面试流程-技术面"><a href="#面试流程-技术面" class="headerlink" title="面试流程(技术面)"></a>面试流程(技术面)</h1><ul>
<li><p>有带简历吗?</p>
</li>
<li><p>先做个自我介绍,简单介绍一下你自己?</p>
</li>
<li><p>具体的项目经历,在项目中担任的角色,所用到的技术栈</p>
</li>
<li><p>项目中有遇到的难题,怎样解决的</p>
</li>
<li><p>你觉得自己有什么特长,优秀的点,比别人更擅长的</p>
<ul>
<li>业务理解能力/编码能力/沟通能力/逻辑能力/学习能力</li>
</ul>
</li>
<li><p>技术细节</p>
<ul>
<li>简单说一下TCP/UDP协议吧<ul>
<li>TCP是不是安全的,它用的什么技术保证不会丢包<ul>
<li>重传</li>
<li>滑动窗口</li>
</ul>
</li>
<li>TCP的三次握手与四次挥手</li>
<li>如果两个机器已经建立了socket通讯, 一方突然关机了, 描述一下另一台机器的状态变化</li>
</ul>
</li>
<li>linux常用的命令<ul>
<li>虚拟机</li>
<li>iptables</li>
<li>nginx</li>
<li>微服务(docker,k8s)</li>
</ul>
</li>
<li>数据库<ul>
<li>四大特征</li>
<li>什么叫数据库的事务</li>
<li>数据库的触发器</li>
<li>数据库的锁</li>
</ul>
</li>
<li>HTTP协议<ul>
<li>请描述一下,在浏览器上输入一个网址,然后点击访问后,经过了哪些步骤(只描述网络层协议)<ul>
<li>dns解析-&gt; arp -&gt; 建立tcp-&gt; 发送http请求 -&gt; http相应html/js等信息响应 -&gt; 浏览器本地渲染</li>
</ul>
</li>
</ul>
</li>
<li>版本管理工具<ul>
<li>git/svn</li>
</ul>
</li>
<li>算法方面, 你自己知道的觉得很牛的算法(红黑树,map表,hash,布隆过滤器)</li>
<li>三选一的题目</li>
</ul>
</li>
<li><p>个人未来规划</p>
<ul>
<li>未来发展方向(端方面的, 高性能,高并发,设计架构)</li>
<li>个人规划</li>
</ul>
</li>
<li><p>简单介绍我们公司</p>
<ul>
<li>网络安全</li>
<li>两个主线产品</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>other</tag>
      </tags>
  </entry>
  <entry>
    <title>排序算法</title>
    <url>/page/202006060925.html</url>
    <content><![CDATA[<p>  只要你要、只要我有。倾我所能、尽我所有。我给过你的，给不了第二个人。你给过我的，也请不要再给第二个人。</p>
<hr>
  <a id="more"></a>

<h1 id="正常的排序算法"><a href="#正常的排序算法" class="headerlink" title="正常的排序算法"></a>正常的排序算法</h1><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><ul>
<li>原理：最简单粗暴，相邻的比较大小，然后交换</li>
<li>时间复杂度：O(n*n)</li>
<li>空间复杂度：O(1)</li>
<li>适用：数据量小</li>
</ul>
<h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><ul>
<li>原理：比较简单粗暴，从数据中选取最小的放到最前面，以此类推</li>
<li>时间复杂度：O(n*n)</li>
<li>空间复杂度：O(1)</li>
<li>适用：数据量小</li>
</ul>
<h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><ul>
<li>原理：将一个数据插入到已排序的队列中</li>
<li>时间复杂度：O(n*n)</li>
<li>空间复杂度：O(1)</li>
<li>适用：数据量小，数据相对有序</li>
</ul>
<h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><ul>
<li>原理：分治算法，使每个子序列有序，然后合并到一个大有序的序列</li>
<li>时间复杂度：O(nlogn)</li>
<li>空间复杂度：O(n)</li>
<li>适用：数据量很大</li>
</ul>
<h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><ul>
<li>原理：创建一个完全二叉树储存数值，然后根据完全二叉树的性质，结点的键值或者索引总是大于或者小于叶子结点的性质，进行排序</li>
<li>时间复杂度：O(nlogn)</li>
<li>空间复杂度：O(1)</li>
<li>适用：数据量很大</li>
</ul>
<h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><ul>
<li>原理：创建一个奇点，大于这个数放到右边，小于这个数放到左边，递归</li>
<li>时间复杂度：O(nlogn)</li>
<li>空间复杂度：O(logn)<br>适用：数据量中型</li>
</ul>
<h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><ul>
<li>原理：数组分到有限数量的桶子里。每个桶子再个别排序</li>
<li>时间复杂度：O(n+nlogn-nlogm)</li>
<li>空间复杂度：O(n+m)</li>
<li>适用：数据的长度都差不多，数据量很大，求中位数(学生分数)</li>
</ul>
<h2 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h2><ul>
<li>原理：增强版的插入排序，把一堆序列分割成几个序列进行插入排序</li>
<li>时间复杂度：O(n^1.2)</li>
<li>空间复杂度：O(1)</li>
<li>适用：数据量很大</li>
</ul>
<h2 id="鸡尾酒排序"><a href="#鸡尾酒排序" class="headerlink" title="鸡尾酒排序"></a>鸡尾酒排序</h2><ul>
<li>原理：双向的冒泡排序算法</li>
<li>时间复杂度：O(n*n)</li>
<li>空间复杂度：O(1)</li>
<li>数据量小型，相对有序</li>
</ul>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>  选快希堆均不稳</p>
<h1 id="不正常的排序算法"><a href="#不正常的排序算法" class="headerlink" title="不正常的排序算法"></a>不正常的排序算法</h1><h2 id="睡眠排序"><a href="#睡眠排序" class="headerlink" title="睡眠排序"></a>睡眠排序</h2><ul>
<li>原理：对所有数进行sleep，那个先sleep完成就打印出来，大数的话可以sleep到天荒地老</li>
</ul>
<h2 id="随机排序-猴子排序"><a href="#随机排序-猴子排序" class="headerlink" title="随机排序(猴子排序)"></a>随机排序(猴子排序)</h2><ul>
<li>原理：无限猴子原理，总有一只猴子可以随机排序到有序的列表</li>
</ul>
]]></content>
      <categories>
        <category>算法为王</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库整理</title>
    <url>/page/202006060920.html</url>
    <content><![CDATA[<p>  在这个世界上，不要太依赖别人。因为即使是你的影子，也会在黑暗时离开你的。</p>
<hr>
  <a id="more"></a>

<h1 id="数据库的分类"><a href="#数据库的分类" class="headerlink" title="数据库的分类"></a>数据库的分类</h1><ul>
<li>关系型数据库，把简单的数据结构归类为简单的二维表哥，oracal，mysql</li>
<li>非关系型数据库，微博、微信、sns需要高性能，高并发，一致性要求不高 nosql <ul>
<li>键值：使用key-value存储，相当于hashmap的模型，存取速度快，高并发，redis</li>
<li>面向文档：以文档作为键值，mongodb</li>
</ul>
</li>
</ul>
<h1 id="数据库三大范式"><a href="#数据库三大范式" class="headerlink" title="数据库三大范式"></a>数据库三大范式</h1><ul>
<li>每列的原子性(直到不可拆分)</li>
<li>每列都必须与主键相系</li>
<li>每列都必须与主键直接相关(消除传递依赖)</li>
</ul>
<h1 id="数据库的事务-ACID"><a href="#数据库的事务-ACID" class="headerlink" title="数据库的事务(ACID)"></a>数据库的事务(ACID)</h1><ul>
<li>原子性<ul>
<li>每个事物的所有语句都是一个整体，其中一条不成功，整个事务回退</li>
</ul>
</li>
<li>一致性<ul>
<li>提交了就会有状态的改变，数据库之间相互透明，转账</li>
</ul>
</li>
<li>隔离性<ul>
<li>每个事务间不会相互影响</li>
<li>隔离级别<ul>
<li>读未提交，可能会出现脏读</li>
<li>读已提交，可能会出现不可重复读</li>
<li>重复度，可能会出现幻读</li>
<li>串行，最高级别的隔离，效率低</li>
</ul>
</li>
<li>锁<ul>
<li>共享锁</li>
<li>排他锁</li>
</ul>
</li>
</ul>
</li>
<li>持久性<ul>
<li>数据库崩毁恢复</li>
<li>系统崩毁恢复</li>
<li>异地容灾</li>
</ul>
</li>
</ul>
<h2 id="分布式事务"><a href="#分布式事务" class="headerlink" title="分布式事务"></a>分布式事务</h2><ul>
<li>一个操作需要读写多张表的时候，需要用到分布式事务</li>
<li>PAC理论<ul>
<li>一致性：数据必须一致</li>
<li>可用性：所有用户都可以访问到</li>
<li>分区容忍性：当结点间通讯有问题，允许一定时间内数据不同步</li>
</ul>
</li>
</ul>
<h2 id="事务的锁"><a href="#事务的锁" class="headerlink" title="事务的锁"></a>事务的锁</h2><ul>
<li><p>乐观锁</p>
<ul>
<li>假定读取资源的过程中，数据不会被修改 ，使用版本控制</li>
</ul>
</li>
<li><p>悲观锁</p>
<ul>
<li>假定读取资源的过程中，数据一定会被修改，先把资源锁住，提交完毕再进行释放</li>
</ul>
</li>
<li><p>共享锁</p>
<ul>
<li>锁定的资源只能进行读取，不能进行增删改操作，直到该锁释放</li>
</ul>
</li>
<li><p>排他锁</p>
<ul>
<li>锁定的资源可以进行读写还有操作</li>
</ul>
</li>
<li><p>死锁</p>
<ul>
<li>两个事务或者多个事务在同一资源上相互占用，并请求对方所占用的资源，从而造成恶性循环的现象<ul>
<li>系统资源不足</li>
<li>进程运行推进的顺序不当</li>
<li>资源分配不当</li>
</ul>
</li>
<li>避免死锁的核心思想是</li>
<li>系统对进程发出每一个资源申请进行动态检查,并根据检查结果决定是否分配资源,如果分配后系统可能发生死锁,则不予分配,否则予以分配.这是一种保证系统不进入不安全或者死锁状态的动态策略</li>
</ul>
</li>
</ul>
<h1 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h1><ul>
<li>数据支持的类型 string(字符串)、list(链表)、set(集合)和zset(有序集合)</li>
<li>支持内存缓存</li>
<li>支持持久化缓存</li>
<li>支持主从集群、分布式</li>
<li>支持队列</li>
</ul>
<h2 id="备份持久化"><a href="#备份持久化" class="headerlink" title="备份持久化"></a>备份持久化</h2><ul>
<li>快照保存：占用内存大，会有损耗</li>
<li>日志保存：占用内存小，复原的时间长，数据完整性高</li>
</ul>
<h2 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h2><ul>
<li>有一台作为主机，进行日常的读写操作，一台备机，同步主机的数据库，当主机宕机，自动切换到备机执行</li>
</ul>
<h1 id="postgres"><a href="#postgres" class="headerlink" title="postgres"></a>postgres</h1><ul>
<li>对象-关系型数据库</li>
<li>登录<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">psql -U admin -d testdb -p 5432</span><br></pre></td></tr></table></figure></li>
<li>清空一个表<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">truncate table xx</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="postgregraph"><a href="#postgregraph" class="headerlink" title="postgregraph"></a>postgregraph</h2><ul>
<li>基于postgres的一个图数据库<ul>
<li>创建图：CREATE GRAPH IF NOT EXISTS network;</li>
<li>指定用户默认就是使用一个图ALTER DATABASE postgres SET graph_path TO network；</li>
<li>设置默认图进行查询 SET graph_path = network;</li>
<li>查询语句<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   MATCH (p:host )-[l:link]-&gt;(t:host) </span><br><span class="line">where p.date &gt;&#x3D; date(&#39;2000-10-12&#39;) and  p.date &lt;&#x3D; date(&#39;2005-10-12&#39;)</span><br><span class="line">return p , l , t</span><br><span class="line">-- delete p,l,t</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>实现一个简单的nats消息队列</title>
    <url>/page/202005171658.html</url>
    <content><![CDATA[<p>  很多东西可遇而不可求，不属于自己的，何必拼了命去在乎。</p>
<hr>
<p>  事情是这样的，公司想用nats做为中间件收发消息，所以先实现了个简单的nats消息队列收发信息的demo<br>  <a id="more"></a></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>  消息队列是构建分布式互联网应用的基础设施，通过消息队列可以实现解耦合架构设计，提高系统可用性以及可扩展性。nats是Go常用消息中间系统，轻量级、高性能的，支持发布、订阅机制，但不支持持久化消息。</p>
<h2 id="golang语言实现nats"><a href="#golang语言实现nats" class="headerlink" title="golang语言实现nats"></a>golang语言实现nats</h2><ul>
<li><p>运行前需要运行nats-server的服务器</p>
<p>nats-demo.go</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">    &quot;github.com&#x2F;nats-io&#x2F;go-nats&quot;</span><br><span class="line">    &quot;log&quot;</span><br><span class="line">    &quot;fmt&quot;</span><br><span class="line">	&quot;strconv&quot;</span><br><span class="line">    &quot;time&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">const (</span><br><span class="line">    url  &#x3D; &quot;nats:&#x2F;&#x2F;127.0.0.1:4222&quot;</span><br><span class="line">    subj &#x3D; &quot;log_report&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">var (</span><br><span class="line">    nc  *nats.Conn</span><br><span class="line">    err error</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func init() &#123;</span><br><span class="line">    nc, err &#x3D; nats.Connect(url); </span><br><span class="line">    if err !&#x3D; nil &#123;</span><br><span class="line">        fmt.Println(&quot;error&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line"></span><br><span class="line">    startServer(subj, &quot;s1&quot;)</span><br><span class="line">    &#x2F;&#x2F;startServer(subj, &quot;s2&quot;)</span><br><span class="line">    &#x2F;&#x2F;startServer(subj, &quot;s3&quot;)</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;wait for subscribe complete</span><br><span class="line">    time.Sleep(1 * time.Second)</span><br><span class="line"></span><br><span class="line">    startClient(subj)</span><br><span class="line">	</span><br><span class="line">    select &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;send message to server</span><br><span class="line">func startClient(subj string) &#123;</span><br><span class="line">	for i :&#x3D; 0; i &lt; 10000; i++ &#123;</span><br><span class="line">		nc.Publish(&quot;log_report&quot;, []byte(&quot;101^20191126092511^192.168.1.1^123456789^XXX^1^&quot; +strconv.Itoa(i) + &quot;\n&quot;))</span><br><span class="line">	&#125;</span><br><span class="line">    nc.Publish(subj, []byte(&quot;201^1^192.168.1.2^123456789^XXX^20191126092611^1\n&quot;))</span><br><span class="line">    nc.Publish(subj, []byte(&quot;202^1^192.168.1.3^123456789^XXX^20191126092611^1^2\n&quot;))</span><br><span class="line">	for j :&#x3D; 0; j &lt; 10000; j++ &#123;</span><br><span class="line">		nc.Publish(&quot;log_report&quot;, []byte(&quot;210^1^192.168.1.4^123456789^XXX^&quot;+ strconv.Itoa(j)+ &quot;^20191126092811^1\n&quot;))</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;开启服务</span><br><span class="line">func startServer(subj, name string) &#123;</span><br><span class="line">    go sync(nc, subj, name)</span><br><span class="line">    go async(nc, subj, name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;异步接收信息</span><br><span class="line">func async(nc *nats.Conn, subj, name string) &#123;</span><br><span class="line">    nc.Subscribe(subj, func(msg *nats.Msg) &#123;</span><br><span class="line">        fmt.Println(name, &quot;Received a message From Async : &quot;, string(msg.Data))</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;同步接收消息</span><br><span class="line">func sync(nc *nats.Conn, subj, name string) &#123;</span><br><span class="line">    subscription, err :&#x3D; nc.SubscribeSync(subj)</span><br><span class="line">    checkErr(err)</span><br><span class="line">    if msg, err :&#x3D; subscription.NextMsg(10 * time.Second); checkErr(err) &#123;</span><br><span class="line">        if msg !&#x3D; nil &#123;</span><br><span class="line">            fmt.Println(name, &quot;Received a message From Sync : &quot;, string(msg.Data))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        &#x2F;&#x2F;handle timeout</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func checkErr(err error) bool &#123;</span><br><span class="line">    if err !&#x3D; nil &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">        return false</span><br><span class="line">    &#125;</span><br><span class="line">    return true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
</ul>
<h2 id="python语言实现nats"><a href="#python语言实现nats" class="headerlink" title="python语言实现nats"></a>python语言实现nats</h2><ul>
<li>版本需高于 3.5.1</li>
<li>运行前需要运行nats-server的服务器</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install asyncio-nats-client</span><br></pre></td></tr></table></figure>

<p>  nats-server.py</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line">#coding: utf-8 </span><br><span class="line">import asyncio</span><br><span class="line">import os</span><br><span class="line">import time</span><br><span class="line">from nats.aio.client import Client as NATS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">async def example():</span><br><span class="line">    nc &#x3D; NATS()</span><br><span class="line"></span><br><span class="line">    await nc.connect(   </span><br><span class="line">        servers&#x3D;[&quot;nats:&#x2F;&#x2F;demo.nats.io:4222&quot;],</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    async def message_handler(msg):</span><br><span class="line"></span><br><span class="line">        subject &#x3D; msg.subject</span><br><span class="line">        reply &#x3D; msg.reply</span><br><span class="line">        data &#x3D; msg.data.decode()</span><br><span class="line"></span><br><span class="line">        print(&quot;Received a message on &#39;&#123;subject&#125; &#123;reply&#125;&#39;: &#123;data&#125;&quot;.format(</span><br><span class="line">            subject&#x3D;subject, reply&#x3D;reply, data&#x3D;data))</span><br><span class="line"></span><br><span class="line">    text &#x3D; b&#39;&quot;url&quot;:&quot;www.baidu.com&quot;&#39;</span><br><span class="line"></span><br><span class="line">    sid &#x3D; await nc.subscribe(&quot;eve&quot;, cb&#x3D;message_handler)</span><br><span class="line"></span><br><span class="line">    await nc.auto_unsubscribe(sid, 1)</span><br><span class="line">    await nc.publish(&quot;eve&quot;, text)</span><br><span class="line"></span><br><span class="line">    await nc.drain()</span><br><span class="line"></span><br><span class="line">    time.sleep(3)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    loop &#x3D; asyncio.get_event_loop()</span><br><span class="line">    loop.run_until_complete(example())</span><br><span class="line">    loop.close()</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>python</tag>
        <tag>nats</tag>
      </tags>
  </entry>
  <entry>
    <title>查找算法</title>
    <url>/page/202006060927.html</url>
    <content><![CDATA[<p>  只要你说，只要我信</p>
<hr>
  <a id="more"></a>

<h1 id="查找算法"><a href="#查找算法" class="headerlink" title="查找算法"></a>查找算法</h1><p>  一般的查找算法分类</p>
<ul>
<li>静态查找与动态查找<ul>
<li>静态查找：数据静止不动</li>
<li>动态查找：数据在被查询的过程中会被增删改</li>
</ul>
</li>
<li>有序查找与无序查找<ul>
<li>有序查找：被查找的数据有序</li>
<li>无序查找：被查找的数据可以有序，可以无序</li>
</ul>
</li>
</ul>
<h1 id="顺序查找"><a href="#顺序查找" class="headerlink" title="顺序查找"></a>顺序查找</h1><ul>
<li>适用：属于静态无序查找</li>
<li>原理：从数据中一个一个比较，如果找完都没有找到，就是查找失败</li>
</ul>
<h1 id="插值查找算法"><a href="#插值查找算法" class="headerlink" title="插值查找算法"></a>插值查找算法</h1><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><ul>
<li>适用：属于静态有序查找</li>
<li>原理：递归与中间的结点进行比较，直到发现表中的结点</li>
</ul>
<h2 id="三点查找"><a href="#三点查找" class="headerlink" title="三点查找"></a>三点查找</h2><ul>
<li>适用：属于静态有序查找</li>
<li>原理：利用凹凸函数的特点，三点逼近</li>
</ul>
<h2 id="斐波那契查找"><a href="#斐波那契查找" class="headerlink" title="斐波那契查找"></a>斐波那契查找</h2><ul>
<li>适用：属于静态有序查找</li>
<li>原理：从黄金分割点开始查找，稍微比二分查找要快</li>
</ul>
<h1 id="树查找"><a href="#树查找" class="headerlink" title="树查找"></a>树查找</h1><h2 id="二叉树查找"><a href="#二叉树查找" class="headerlink" title="二叉树查找"></a>二叉树查找</h2><ul>
<li>适用：属于静态无序查找</li>
<li>原理：先把数据都插入到一颗完全二叉树中，然后根据二叉树的特性，进行查找</li>
</ul>
<h2 id="红黑树"><a href="#红黑树" class="headerlink" title="红黑树"></a>红黑树</h2><ul>
<li>自平衡的二叉树<ul>
<li>结点是红色或者黑色</li>
<li>根结点一定是黑色</li>
<li>所有叶子结点都是黑色的</li>
<li>每个红色的结点的两个子结点都是黑色的</li>
<li>从任一节点到其每个叶子都包含有相同的黑色结点</li>
</ul>
</li>
</ul>
<h2 id="B与B-树"><a href="#B与B-树" class="headerlink" title="B与B+树"></a>B与B+树</h2><ul>
<li>把数据分成块状存储</li>
<li>b树<ul>
<li>根结点至少有两个子结点</li>
<li>每个结点有m-1个key，生序排列(m是高度)</li>
<li>位于m-1和m key的子结点的值位于m-1和m key对应的value之间</li>
<li>其他的结点至少有m/2个子结点</li>
</ul>
</li>
<li>b+树<ul>
<li>b树的增强版</li>
<li>有k个子结点的结点必须有k个key</li>
<li>非叶子结点仅仅有索引的作用</li>
<li>树的所有叶结点构成一个有序的链表</li>
</ul>
</li>
</ul>
<h1 id="哈希查找"><a href="#哈希查找" class="headerlink" title="哈希查找"></a>哈希查找</h1><ul>
<li>适用：动态无序查找</li>
<li>原理：把关键字转成一个hash值，每个hash值对应一个数，查找的时候匹配到对应的hash值，就相当于匹配到了该值，利用空间换取时间</li>
</ul>
<h2 id="hashmap"><a href="#hashmap" class="headerlink" title="hashmap"></a>hashmap</h2><ul>
<li>基于哈希表(散列表)，实现Map接口的双列集合，key唯一，value可以重复，类型可以是结构体，map等</li>
<li>初始化为什么是16的容量(扩容都是以2的幂进行扩展)<ul>
<li>减少hash碰撞</li>
<li>提高map查询效率</li>
<li>分配过小防止频繁扩容</li>
<li>分配过大浪费资源</li>
</ul>
</li>
<li>为什么链表的长度为8是变成红黑树？为什么为6时又变成链表?<ul>
<li>树形占的空间是链表的两倍，在数据小的时候用链表来存储</li>
<li>hashcode计算出来的值会根据松柏分布，当长度小于8的时候，hash碰撞的几率很低，所以适用链表存储，反之</li>
</ul>
</li>
</ul>
<h1 id="字符串查找"><a href="#字符串查找" class="headerlink" title="字符串查找"></a>字符串查找</h1><ul>
<li>适用：专门用来查找子字符串的算法(kmp)</li>
<li>原理：根据子串生成一个next数组，遇到匹配的就往后比较，不匹配的就根据next数据的值进行跳转，加快比较的速度</li>
</ul>
<h1 id="布隆过滤器"><a href="#布隆过滤器" class="headerlink" title="布隆过滤器"></a>布隆过滤器</h1><ul>
<li>适用：动态无序查找，允许有小失误</li>
<li>原理：详情见<a href="https://t-connor.github.io/2020/05/17/202005172011/" target="_blank" rel="noopener">链接</a></li>
</ul>
]]></content>
      <categories>
        <category>算法为王</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>正则匹配</title>
    <url>/page/202007052017.html</url>
    <content><![CDATA[<p>  陌生人可以变成熟人，但熟人一旦变成陌生人，就再也回不去了。</p>
<hr>
  <a id="more"></a>

<h1 id="基本规则"><a href="#基本规则" class="headerlink" title="基本规则"></a>基本规则</h1><ul>
<li>特殊字符<ul>
<li>* :零个或多个</li>
<li>+ :一个或多个</li>
<li>? :任意值</li>
<li>():标记开始</li>
<li>\d:数字</li>
<li>\w:所有字符</li>
<li>\s:空格</li>
<li>^$:匹配的开始与结束</li>
</ul>
</li>
<li>限定字符<ul>
<li>{n}: 确定匹配n次</li>
<li>{n,}:至少匹配n次</li>
<li>{n,m}:匹配n到m次 s.t. [0-9]{1,2} 100以内的数</li>
</ul>
</li>
</ul>
<h2 id="一般常用的正则匹配式"><a href="#一般常用的正则匹配式" class="headerlink" title="一般常用的正则匹配式"></a>一般常用的正则匹配式</h2>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">邮箱:^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$</span><br><span class="line">手机号码:^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d&#123;8&#125;$</span><br><span class="line">身份证号:^\d&#123;15&#125;|\d&#123;18&#125;$</span><br><span class="line">ipv4地址:^(25[0-5]|2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d))&#123;3&#125;$</span><br><span class="line">ipv6地址:^([\da-fA-F]&#123;1,4&#125;:)&#123;6&#125;((25[0-5]|2[0-4]\d|[01]?\d\d?)\.)&#123;3&#125;(25[0-5]|2[0-4]\d|[01]?\d\d?)|^::([\da-fA-F]&#123;1,4&#125;:)&#123;0,4&#125;((25[0-5]|2[0-4]\d|[01]?\d\d?)\.)&#123;3&#125;(25[0-5]|2[0-4]\d|[01]?\d\d?)|^([\da-fA-F]&#123;1,4&#125;:):([\da-fA-F]&#123;1,4&#125;:)&#123;0,3&#125;((25[0-5]|2[0-4]\d|[01]?\d\d?)\.)&#123;3&#125;(25[0-5]|2[0-4]\d|[01]?\d\d?)|^([\da-fA-F]&#123;1,4&#125;:)&#123;2&#125;:([\da-fA-F]&#123;1,4&#125;:)&#123;0,2&#125;((25[0-5]|2[0-4]\d|[01]?\d\d?)\.)&#123;3&#125;(25[0-5]|2[0-4]\d|[01]?\d\d?)|^([\da-fA-F]&#123;1,4&#125;:)&#123;3&#125;:([\da-fA-F]&#123;1,4&#125;:)&#123;0,1&#125;((25[0-5]|2[0-4]\d|[01]?\d\d?)\.)&#123;3&#125;(25[0-5]|2[0-4]\d|[01]?\d\d?)|^([\da-fA-F]&#123;1,4&#125;:)&#123;4&#125;:((25[0-5]|2[0-4]\d|[01]?\d\d?)\.)&#123;3&#125;(25[0-5]|2[0-4]\d|[01]?\d\d?)|^([\da-fA-F]&#123;1,4&#125;:)&#123;7&#125;[\da-fA-F]&#123;1,4&#125;|^:((:[\da-fA-F]&#123;1,4&#125;)&#123;1,6&#125;|:)|^[\da-fA-F]&#123;1,4&#125;:((:[\da-fA-F]&#123;1,4&#125;)&#123;1,5&#125;|:)|^([\da-fA-F]&#123;1,4&#125;:)&#123;2&#125;((:[\da-fA-F]&#123;1,4&#125;)&#123;1,4&#125;|:)|^([\da-fA-F]&#123;1,4&#125;:)&#123;3&#125;((:[\da-fA-F]&#123;1,4&#125;)&#123;1,3&#125;|:)|^([\da-fA-F]&#123;1,4&#125;:)&#123;4&#125;((:[\da-fA-F]&#123;1,4&#125;)&#123;1,2&#125;|:)|^([\da-fA-F]&#123;1,4&#125;:)&#123;5&#125;:([\da-fA-F]&#123;1,4&#125;)?|^([\da-fA-F]&#123;1,4&#125;:)&#123;6&#125;:</span><br></pre></td></tr></table></figure>

<h1 id="golang下的正则匹配简单代码"><a href="#golang下的正则匹配简单代码" class="headerlink" title="golang下的正则匹配简单代码"></a>golang下的正则匹配简单代码</h1><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"regexp"</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	text := <span class="string">`Hello 世界！123 Go.`</span></span><br><span class="line"> </span><br><span class="line">	reg := regexp.MustCompile(<span class="string">`[a-z]+`</span>)</span><br><span class="line">	fmt.Printf(<span class="string">"%q\n"</span>, reg.FindAllString(text, <span class="number">-1</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="python下的正则匹配简单代码"><a href="#python下的正则匹配简单代码" class="headerlink" title="python下的正则匹配简单代码"></a>python下的正则匹配简单代码</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">text = <span class="string">"hahahahahahahahahahahahahaxixixixixixixxixixixixixixixixiixix"</span></span><br><span class="line">rex1 = <span class="string">r'&lt;a href="(.*?)" title=".*?".*?&gt;.*?&lt;/a&gt;'</span></span><br><span class="line">urltitle = re.findall(rex1, text)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>golang</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>线程与进程</title>
    <url>/page/202006060912.html</url>
    <content><![CDATA[<p>  不要随便跟别人坦露心声，你要知道，人与人之间的悲欢其实不相通，你的满腹倾言，在别人听来不过是一个故事罢了。</p>
<hr>
  <a id="more"></a>

<h1 id="线程是什么"><a href="#线程是什么" class="headerlink" title="线程是什么"></a>线程是什么</h1><p>  线程是CPU调度，程序执行的最小单位，提高系统的并发性，并突破一个进程只能干一样事的缺陷</p>
<h1 id="进程是什么"><a href="#进程是什么" class="headerlink" title="进程是什么"></a>进程是什么</h1><p>  进程是资源分配的最小单位，</p>
<h1 id="线程与进程关系"><a href="#线程与进程关系" class="headerlink" title="线程与进程关系"></a>线程与进程关系</h1><ul>
<li>一个进程可以拥有多个线程，而一个进程可以有多个线程，但至少有一个线程。</li>
<li>资源分配给进程，同一进程的所有线程共享该进程的所有资源。</li>
<li>CPU分给线程，即真正在CPU上运行的是线程。</li>
</ul>
<h1 id="并行与并发"><a href="#并行与并发" class="headerlink" title="并行与并发"></a>并行与并发</h1><ul>
<li>并行：计算机系统中能同时执行两个或更多个处理的一种计算方法</li>
<li>并发：一个时间段中有几个程序都处于已启动运行到运行完毕之间，且这几个程序都是在同一个处理机(CPU)上运行，但任一个时刻点上只有一个程序在处理机</li>
</ul>
<h1 id="同步与异步"><a href="#同步与异步" class="headerlink" title="同步与异步"></a>同步与异步</h1><ul>
<li>同步：同步就是指一个进程在执行某个请求的时候，若该请求需要一段时间才能返回信息，那么这个进程将会一直等待下去，直到收到返回信息才继续执行下去</li>
<li>异步：异步是指进程不需要一直等下去，而是继续执行下面的操作，不管其他进程的状态。当有消息返回时系统会通知进程进行处理，这样可以提高执行的效率。</li>
</ul>
<h1 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h1><ul>
<li>Q：什么是线程安全<ul>
<li>A：多线程并行时，保证各个线程时安全的正确的执行，没有数据污染，都是原子操作</li>
</ul>
</li>
<li>Q：怎样判断进程发生内存泄漏<ul>
<li>A：监控程序所占内存，程序运行时间与内存占用呈线性关系</li>
</ul>
</li>
<li>Q：什么是虚拟内存<ul>
<li>A：windows下，会以一部分的硬盘空间当做为虚拟内存<br>   linux下，/swap空间就是虚拟内存</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>system</tag>
      </tags>
  </entry>
  <entry>
    <title>自动更新程序设计文档</title>
    <url>/page/202008012330.html</url>
    <content><![CDATA[<p>  有一个夜晚，我烧毁了所有的记忆，从此我的梦就透明了，有一个早晨我扔掉了所有的昨天，从此我的脚步就轻盈了。</p>
<hr>
  <a id="more"></a>

<h1 id="需求-背景"><a href="#需求-背景" class="headerlink" title="需求/背景"></a>需求/背景</h1><p>  在给客户施工的时候,需要安装多个客户端到不同的机器上.导致每次软件升级都要手工替换新的程序,然后重新启动客户端连接.<br>  为了减少重复工作,增加升级效率.所以需要开发一个自动更新客户端的程序,又因为客户部署环境很多时候机器都在内网环境,无法连接互联网.所以需要一个更新服务端,进行最新程序的推送</p>
<ul>
<li>服务端功能如下:<ul>
<li>需要有版本管理,能进行简单的上传/更新/回退操作</li>
<li>能查询当前最新的版本号</li>
<li>带鉴权功能</li>
</ul>
</li>
<li>客户端功能如下:<ul>
<li>能从服务端拉取最新的软件程序</li>
<li>第一次启动时,检测指定目录是否安装了客户端,没有的话,先首次安装部署程序;发现已经有程序就检测版本号,版本号不对应则下载最新的客户端进行更新</li>
</ul>
</li>
</ul>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><h2 id="自动更新服务端"><a href="#自动更新服务端" class="headerlink" title="自动更新服务端"></a>自动更新服务端</h2><ul>
<li><p>服务端选取:svn服务端</p>
<ul>
<li>优点<ul>
<li>现成的客户端与服务端</li>
<li>版本管理控制,可以上传/回退</li>
</ul>
</li>
</ul>
</li>
<li><p>服务器目录必须做版本管理</p>
<ul>
<li>每个目录下存放自己的文件,命名格式需按照规范管理</li>
<li>release版本下,每个目录放该版本的程序<br>目录结构例如</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">svnlocalhost</span><br><span class="line">    |-------- sds</span><br><span class="line">    |           |----client</span><br><span class="line">    |           |       |----windows</span><br><span class="line">    |           |       |----linux</span><br><span class="line">    |           |       |----arm64</span><br><span class="line">    |           |----prometheus</span><br><span class="line">    |           |       |----windows</span><br><span class="line">    |           |       |----linux</span><br><span class="line">    |           |       |----arm64</span><br></pre></td></tr></table></figure>

<ul>
<li>由于在linux下svn没有现成的客户端,在每个客户端上安装一个svn服务,代价很大.所以预想在服务端加装一个代理服务器,提供以下功能<ul>
<li>记录当前svn上的最新的版本,并保存</li>
<li>提供一个查询接口给客户端,查询当前软件版本号</li>
<li>提供一个下载列表给客户端,用于下载当前最软件的列表</li>
<li>客户端进行下载文件的时候,进行七层的代理转发</li>
</ul>
</li>
</ul>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><ul>
<li><p>支持的系统</p>
<ul>
<li>linux 客户端安装svn</li>
<li>windows 客户端,tools下自带一个svn的客户端 </li>
<li>mac上可以跑,但是暂未做成服务<ul>
<li>调用命令设置default用户名和密码</li>
</ul>
</li>
</ul>
</li>
<li><p>安装或者更新程序</p>
<ul>
<li>如果安装目录为空 -&gt; 第一次安装程序,执行首次安装命令</li>
<li>安装目录不为空 -&gt; 停止程序 -&gt; 替换文件 -&gt; 重新启动程序</li>
</ul>
</li>
<li><p>配置文件(需求的变量全部从配置文件中获取)</p>
<ul>
<li>更新服务端的url地址</li>
<li>目标程序安装路径(指定目录,可以手动修改吧)</li>
<li>目标文件安装命令</li>
<li>目标文件运行命令</li>
<li>目标文件停止命令</li>
<li>目标文件运行时的名称(用于判断程序是否有执行)</li>
</ul>
</li>
<li><p>配置文件的修改</p>
<ul>
<li>由于每个客户,每台机器的情况不同,有时候可能需要更新配置文件的某一些参数</li>
<li>客户端需要提供一个功能,把指定目录下的配置文件的修改下发到所有管理的机器上面去,那就不需要手动的修改配置文件了</li>
<li>原文件按没有的,从新文件添加;源文件有的参数,更新成为新文件的值,其他值不变</li>
<li>需要支持主流的配置文件类型 config,ini,yml等</li>
</ul>
</li>
<li><p>更新方式</p>
<ul>
<li>全量更新<ul>
<li>暂时不支持</li>
</ul>
</li>
<li>增量更新<ul>
<li>从服务器上拉取最新的客户端,进行进行软件的更新</li>
</ul>
</li>
</ul>
</li>
<li><p>守护进程保活</p>
</li>
</ul>
<h1 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h1><ul>
<li>sds客户端(演示?)<ul>
<li>运行客户端</li>
<li>从svn服务器pull</li>
<li>安装或者更新</li>
<li>判断进程是否正常运行</li>
</ul>
</li>
</ul>
<h1 id="统筹"><a href="#统筹" class="headerlink" title="统筹"></a>统筹</h1><ul>
<li><p>时间点</p>
<ul>
<li>大概两周开发完成,一周测试,改bug,争取尽快完毕</li>
</ul>
</li>
<li><p>技术选型</p>
<ul>
<li>svn + golang</li>
</ul>
</li>
<li><p>相关人员</p>
<ul>
<li><p>施工部署人员</p>
<ul>
<li>部署流程是否方便<ul>
<li>svn服务端的部署(apache?)</li>
</ul>
</li>
<li>系统兼容性<ul>
<li>是否在所有系统都通用 </li>
</ul>
</li>
</ul>
</li>
<li><p>服务器版本管理人员/测试人员</p>
<ul>
<li>按路径对软件进行上传</li>
<li>上传新程序的接口</li>
</ul>
</li>
<li><p>使用者</p>
<ul>
<li>安装自动更新软件</li>
<li>修改配置文件</li>
<li>启动程序</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="后续改进的地方"><a href="#后续改进的地方" class="headerlink" title="后续改进的地方"></a>后续改进的地方</h1><ul>
<li><p>发现更新的时候询问</p>
<ul>
<li>用户可能在使用状态,不想立刻更新</li>
</ul>
</li>
<li><p>服务端发现更新,主动推送到客户端</p>
</li>
</ul>
<h1 id="问题点"><a href="#问题点" class="headerlink" title="问题点"></a>问题点</h1><ul>
<li>服务端部署困难</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>designed</tag>
      </tags>
  </entry>
  <entry>
    <title>网络基础知识点</title>
    <url>/page/202006142000.html</url>
    <content><![CDATA[<p>  好好生活 慢慢相遇</p>
<hr>
  <a id="more"></a>

<h1 id="http-https"><a href="#http-https" class="headerlink" title="http/https"></a>http/https</h1><ul>
<li>超文本传输协议，基于TCP/IP协议传输数据。<ul>
<li>无状态，无连接，明文无加密</li>
</ul>
</li>
<li>https 基于http上添加TLS/SSL增加访问的安全性<ul>
<li>基于HTTP协议，通过SSL或TLS验证身份，提供加密，数据可靠</li>
</ul>
</li>
</ul>
<h2 id="tls-证书验证过程"><a href="#tls-证书验证过程" class="headerlink" title="tls 证书验证过程"></a>tls 证书验证过程</h2><ul>
<li><p>CA：证书授权中心，专门给予颁发护照机构</p>
</li>
<li><p>单向认证：是只有一个对象校验对端的证书合法性。</p>
<ul>
<li>通常都是client来校验服务器的合法性。那么client需要一个ca.crt,服务器需要server.crt,server.key</li>
</ul>
</li>
<li><p>双向认证指的是相互校验，服务器需要校验每个client,client也需要校验服务器。</p>
<ul>
<li>server 需要 server.key 、server.crt 、ca.crt</li>
<li>client 需要 client.key 、client.crt 、ca.crt</li>
</ul>
</li>
<li><p>通讯过程</p>
<ul>
<li>客户端发起请求，以明文传送请求(版本信息，加密候选列表，压缩算法列表，随机数，扩展字段)</li>
<li>服务端返回选择的结果，选择什么加密算法，随机数，服务端配置对应的证书连接</li>
<li>客户端验证证书的可靠性</li>
<li>客户端产生随机数，协商密钥，用证书公钥加密，发给服务端</li>
<li>服务端用私钥解密加密的数据，对比客户端发送的数据和密钥</li>
<li>握手结束</li>
<li>通过协商密钥，加密通讯</li>
</ul>
</li>
<li><p>注意 ssl/tls只是极大程度上保证数据传输的安全，并不能保证绝对的安全，其中还有很多的拒绝服务攻击，中间人攻击可以破解其中的信息</p>
</li>
</ul>
<h1 id="tcp-udp"><a href="#tcp-udp" class="headerlink" title="tcp/udp"></a>tcp/udp</h1><ul>
<li>tcp:<ul>
<li>面向连接</li>
<li>单播，一对一连接通讯</li>
<li>包可以拆分，重组</li>
<li>准确性高，支持重连</li>
<li>适用文件传输</li>
<li>速度较慢</li>
</ul>
</li>
<li>udp:<ul>
<li>无连接</li>
<li>有单播，多播，广播的功能</li>
<li>不能再分包</li>
<li>不可靠</li>
<li>适用视频直播通话</li>
<li>速度快</li>
</ul>
</li>
</ul>
<h2 id="osi七层模型-五层协议"><a href="#osi七层模型-五层协议" class="headerlink" title="osi七层模型 ===== 五层协议"></a>osi七层模型 ===== 五层协议</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">应用层 &#x3D;&gt; 应用层:http&#x2F;https</span><br><span class="line">表示层</span><br><span class="line">会话层</span><br><span class="line">传输层 &#x3D;&gt; 传输层:tcp&#x2F;udp&#x2F;</span><br><span class="line">			socket</span><br><span class="line">网络层 &#x3D;&gt; 网络层:ip&#x2F;icmp</span><br><span class="line">数据链路层 &#x3D;&gt; 数据链路层:ip跟mac地址转换</span><br><span class="line">物理层 &#x3D;&gt; 物理层</span><br></pre></td></tr></table></figure>

<h2 id="tcp-三次握手"><a href="#tcp-三次握手" class="headerlink" title="tcp 三次握手"></a>tcp 三次握手</h2><ul>
<li><p>客户端：你好啊，在吗。SYN(x)</p>
</li>
<li><p>服务端：在的，你有嘛事情哦。SYN(ack=x+1，syn=y)</p>
</li>
<li><p>客户端：哦，我想跟你说个事情，吧啦巴拉巴拉 ACK(ack=y+1) 已经可以开始传消息了</p>
</li>
<li><p>为什么三次握手：只有两次，当网络出现延迟，请求包被滞留再发送到服务端，会创建了很多没有用的连接</p>
</li>
</ul>
<h2 id="tcp-四次挥手"><a href="#tcp-四次挥手" class="headerlink" title="tcp 四次挥手"></a>tcp 四次挥手</h2><ul>
<li><p>客户端：在吗，我们分手吧 FIN x+2 ACK(ack=y+1)</p>
</li>
<li><p>服务端：卧槽，什么情况，我还有很多东西没跟你说的啊，巴拉巴拉  x+3</p>
</li>
<li><p>服务端：你真的要分手吗，那就分吧 FIN y+1</p>
</li>
<li><p>客户端：是的，整天不理我，再也不见了。 ACK(ack=y+2)</p>
</li>
<li><p>为什么需要四次挥手：TCP是全双工的，两边都需要关闭自己的状态都时候才会断开连接</p>
</li>
</ul>
<h2 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h2><ul>
<li>使传输方不要发送数据太快，滑动窗口</li>
<li>发送一个滑动窗口大小的字节，对方来不及接受，慢慢缩小滑动窗口的大小</li>
</ul>
<h2 id="拥塞控制"><a href="#拥塞控制" class="headerlink" title="拥塞控制"></a>拥塞控制</h2><ul>
<li>防止过多的流量注入到网络当中，形成网络风暴</li>
<li>只要网络没有拥塞，就慢慢提高拥塞窗口的大小</li>
</ul>
<h1 id="dns"><a href="#dns" class="headerlink" title="dns"></a>dns</h1><ul>
<li>域名系统：域名解析成ip地址</li>
</ul>
<h2 id="bind系统"><a href="#bind系统" class="headerlink" title="bind系统"></a>bind系统</h2>]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>自己抓个台式机</title>
    <url>/page/202007052010.html</url>
    <content><![CDATA[<p>  都这么大年纪了，就不要再玩小时候暗恋那套了，喜欢就上啊。不过啊超级怂的一个渣渣~~</p>
<hr>
<p>  最近的我的手提好像快不行了,也用了好几年了,就想换台台式,先做下功课。备个案</p>
  <a id="more"></a>

<h1 id="主板"><a href="#主板" class="headerlink" title="主板"></a>主板</h1><ul>
<li>微星B360M Gaming Plus(530)</li>
<li>微星B360M MORTAR迫击炮 (679)<h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1></li>
<li>英特尔I5-8500散片(1330)</li>
<li>英特尔I5-9400F处理器 2.9GHz 6核6线程 (1179)<h1 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h1></li>
<li>迪兰Radeon RX 560(260)</li>
<li>蓝宝石(Sapphire)RX590 8G (1349)</li>
<li>蓝宝石RX560D</li>
<li>迪兰(Dataland)RX 590 8G (1329)</li>
<li>盈通 rx590</li>
<li>AMD显卡rx590 (1799)<h1 id="硬盘"><a href="#硬盘" class="headerlink" title="硬盘"></a>硬盘</h1></li>
<li>WD 500G M.2固态硬盘(570)</li>
<li>西部数据 500GB SSD固态硬盘 M.2接口(NVMe协议)(699)</li>
<li>西数蓝盘 1T (275) 760p固态硬盘256GB (373)</li>
<li>西数黑盘 <h1 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h1></li>
<li>海盗船 DDR4 2666 16GB 两条(510 × 2)</li>
<li>金士顿 DDR4 2666 16GB 两条(549 × 2)</li>
<li>威刚  DDR4 3000mHz 8GB 两条 (829)<h1 id="电源"><a href="#电源" class="headerlink" title="电源"></a>电源</h1></li>
<li>安钛克BP450(210)</li>
<li>爱国者电竞500 (259)<h1 id="风扇"><a href="#风扇" class="headerlink" title="风扇"></a>风扇</h1></li>
<li>玄冰400(80)</li>
<li>猫头鹰风扇NH-L9i<h1 id="机箱"><a href="#机箱" class="headerlink" title="机箱"></a>机箱</h1></li>
<li>酷冷至尊Q300L(260)</li>
<li>其他随意(250)<h1 id="无线网卡"><a href="#无线网卡" class="headerlink" title="无线网卡"></a>无线网卡</h1></li>
<li>BCM94360CD(150)</li>
<li>BCM94352Z<h1 id="显示器"><a href="#显示器" class="headerlink" title="显示器"></a>显示器</h1></li>
<li>优派 27英寸显示器 IPS显示屏 4K版 (VX2780-4K-HD)(1899)</li>
<li>飞利浦271e9 2k IPS (899-1200)<h1 id="音响"><a href="#音响" class="headerlink" title="音响"></a>音响</h1></li>
<li>漫步者 R1700BT 4英寸2.0电脑音响(529)<h1 id="键鼠"><a href="#键鼠" class="headerlink" title="键鼠"></a>键鼠</h1></li>
<li>..</li>
</ul>
]]></content>
      <categories>
        <category>其他东东</category>
      </categories>
  </entry>
  <entry>
    <title>让子弹飞</title>
    <url>/page/202108161114.html</url>
    <content><![CDATA[<p>  有的东西不过很久是不可能理解的，有的东西等到理解了又为时已晚。大多时候，我们不得不在尚未清楚认识自己的心的情况下选择行动，因而感到迷惘和困惑。</p>
<hr>
  <a id="more"></a>


<p>  让子弹先飞一会儿, 让程序先挂一会儿吧</p>
<p>  我两年前加班的时间的极限是从九点到次日凌晨三点,一个星期连续五天.现在已经退步到九点到凌晨一点,一周四天了.年纪大了,有点扛不住了,公司里面现在新来的都是00后的小伙子了,也不知道什么时候长江前浪被拍死在沙滩上面.</p>
<p>  哪有什么春心萌动和心如鹿撞.只不过是太久没有见过女孩子罢了</p>
<p>  请问,你对新来的程序媛小姐姐有什么看法.她呀虽然好像战斗力不强的样子,但是她长得好看啊.因为医生说每天看一下美女可以延长寿命,所以这就是你整天看着人家小姐姐的理由?她一天变几次发型,一天一个色号的口红,超级可爱的丸子头嗷,性感的口红色,爱了爱了.啊啊啊还有那厚厚的大眼镜,一天四五个形象.但是啊,我啊还没来得及找到一首歌去形容她,她就跑了.小姐姐跑了，我也有一半的责任吧，曾经不止一次想去帮她解答，但实在是太忙了，而且带她的那位表达能力也有点词不达意，我后悔当时没有去帮她，但如果我去帮她我就不在是我了，这是个悖论吗. 也罢，现在说什么都晚了，人都已经走了鸭[难受]. 但也有可能是最近太忙了，瞎吓跑了她的吧，同样被吓跑的还有另外一位，已经是两个孩子的父亲, 我好像看到了以后的我的样子. 我想以后当我有了孩子之后，我还能想现在这样拼吗, 我不能, 真的太难了</p>
<p>  在知乎上看到一个问题:什么样的男生最容易单身一辈子</p>
<p>  颜值家境不突出，但也过得去，却总有些自卑，与异性相处中不够自信<br>  过于执着，无法同时对多个异性有好感，执着于自己曾经喜欢或者暗恋的人，难以割舍<br>  不主动，即使遇到心动的人，却总会自己找理由退缩，不敢表白<br>  心思细腻，过分在意周围人的感受，常常忽略自己迁就别人<br>  过于正直，不愿轻易踏入恋情，无法强迫自己浪费他人情感、时间、精力<br>  内心过于丰富，常常把异性对自己的态度过分解读，患得患失<br>  过于友善，和所有人都有着距离感，有礼貌，客客气气，但仿佛与他人之间有一条线，越过后略微不适<br>  对世界有自己的见解，看透许多却不说透，时常与世俗看法格格不入，心态在出世入世间徘徊</p>
<p>  条件一般，有自己的想法和，看过一些书，情商也不低。看上去介于单调和闷之间，但内心怀有强烈的情感。一般不会显得浮躁，在熟人面前幽默感爆棚，在陌生人面前不会特意表现自己，但跟女生一说话，就有种难以掩饰的微尬和不自然。<br>  不会帅得在人群中引起骚动，也不会丑得让人扭头就走，看上去就不太像个有故事的人。可能穿得比较干净，但一定不潮，内心深处，想摆脱肤浅，容易自省，跟大家吐槽的俗low男不沾边，动不动容易觉得特别。<br>  不擅长KTV，篮球，喜欢跑步，看书，思想逻辑类的事物，但优点都不具备那种直观可展示性，常常沦为大型聚会的配角，但也不会夸张的卖弄自己。<br>  内心戏很丰富，对所追求的爱情，脑海中有一幅自己的想象蓝图。没事不会主动找女生，对有感觉的女生，在微信聊天中对用到的表情包，标点，波浪线都有思考，并且使之尽量看起来装作随性自然，不敢喋喋不休地打扰，很怕被嫌弃，越界，导致很少产生亲密关系。<br>  对感情上有洁癖，对爱情本身的向往超过爱一个具体的人，内心多年保持一种在精神层面对美好事物的追求，不想随便找一个女朋友破坏了自己内心多年来对爱情的想象。<br>  着青春气数已尽，在岁月狂奔的途中，有情人结成眷侣的背景下，会回过头来观察自己，发现自己一直是孤家寡人，而别人一不小心已经有了前前任了。会冷静或者极度失望地对自己挑刺，容易感到气馁无望，进一步增长对情感和未来的焦虑和渴求。<br>  工作和生活以及爱好，稳定得像一潭死水，生活中连公车时刻表都难得出错，更不会有意外的人事出现打破你的生活轨迹，难有一个可撬动的点来系统的改变些什么，感情空白或者一直处于空白状态是大几率事件。<br>  明明没什么情感经历，生活也平淡如水，但随着年龄渐长，不知不觉熬出了身心的沧桑感。<br>  在生活中一点一点被动妥协后，容易失去存在感，容易漫不经心，在皆随他去和求而不得中，平静如日，不出意外的话可以一举单身到70岁。</p>
<p>  直接报我的身份证号得了</p>
]]></content>
  </entry>
  <entry>
    <title>c/c++整理</title>
    <url>/page/202006070900.html</url>
    <content><![CDATA[<p>  如果他足够爱你，一定会来找你，没有意外。</p>
<hr>
  <a id="more"></a>


<h1 id="extern-C-的作用"><a href="#extern-C-的作用" class="headerlink" title="extern C{} 的作用"></a>extern C{} 的作用</h1><p>  实现C与C++的混合编程，被修饰的函数或变量按照C语言的方式编译与链接，因为C++的重载，C++与C的编译链接方式不一样</p>
<h1 id="内联函数-inline函数"><a href="#内联函数-inline函数" class="headerlink" title="内联函数(inline函数)"></a>内联函数(inline函数)</h1><p>  当函数少于10行才将其定义为内联函数,类似宏替换,使用函数体替换调用处的函数名</p>
<h1 id="头文件编译宏-ifdef-define-endif的作用"><a href="#头文件编译宏-ifdef-define-endif的作用" class="headerlink" title="头文件编译宏#ifdef,#define,#endif的作用"></a>头文件编译宏#ifdef,#define,#endif的作用</h1><p>  防止头文件被重复引用</p>
<h1 id="调用头文件"><a href="#调用头文件" class="headerlink" title="调用头文件"></a>调用头文件</h1><ul>
<li>头文件用&lt;&gt;包括的，只在公共头文件库中寻找头文件</li>
<li>头文件用“”包括的，现在当前目录下寻找，找不到再从公共头文件中寻找</li>
</ul>
<h1 id="C-中是没有数组这概念的，所以a-10-等价于10-a"><a href="#C-中是没有数组这概念的，所以a-10-等价于10-a" class="headerlink" title="C++中是没有数组这概念的，所以a[10]等价于10[a]"></a>C++中是没有数组这概念的，所以a[10]等价于10[a]</h1><h1 id="对于内存管理程序-可能犯的错误"><a href="#对于内存管理程序-可能犯的错误" class="headerlink" title="对于内存管理程序,可能犯的错误"></a>对于内存管理程序,可能犯的错误</h1><pre><code>- 分配一个内存块,但没有初始化
- 释放一个内存块,但继续引用
- 调用realloc进行扩展,但程序还是引用原来的位置
- 分配内存后，没有保存指向分配内存的指针
= 读写操作超过内存边界（最容易犯得错误）</code></pre><h1 id="无符号与有符号之间的运算"><a href="#无符号与有符号之间的运算" class="headerlink" title="无符号与有符号之间的运算"></a>无符号与有符号之间的运算</h1><p>  全部都会先转化成无符号的在运算，所以负数其实比正数要大</p>
<h1 id="位操作符只用于无符号整形操作数"><a href="#位操作符只用于无符号整形操作数" class="headerlink" title="位操作符只用于无符号整形操作数"></a>位操作符只用于无符号整形操作数</h1><h1 id="判断是否奇数-x-2-0-可判定x为负数的情况"><a href="#判断是否奇数-x-2-0-可判定x为负数的情况" class="headerlink" title="判断是否奇数 x % 2 != 0 (可判定x为负数的情况)"></a>判断是否奇数 x % 2 != 0 (可判定x为负数的情况)</h1><h1 id="const"><a href="#const" class="headerlink" title="const"></a>const</h1><ul>
<li>定义的时候必须初始化</li>
<li>定义为const的形参，在函数内部也不能被改变</li>
<li>类的成员函数可以被声明为常成员函数</li>
<li>类的成员函数可以返回常对象</li>
<li>类的成员变量时常成员变量时不能在声明时初始化，要在构造函数的列表进行初始化<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span>* <span class="keyword">const</span> p;<span class="comment">//常量指针，p的值不能被改变</span></span><br><span class="line"><span class="keyword">char</span> <span class="keyword">const</span> *p;<span class="comment">//指向常量的指针，指向的常量的值不能被改变</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *p;<span class="comment">//同char const *p;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> <span class="keyword">const</span> *p;<span class="comment">//指向常量的常指针，p与p所指向的值都不能被改变</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h1 id="static的几个作用-可修饰全局变量-局部变量-函数-类中成员函数"><a href="#static的几个作用-可修饰全局变量-局部变量-函数-类中成员函数" class="headerlink" title="static的几个作用(可修饰全局变量 局部变量 函数 类中成员函数)"></a>static的几个作用(可修饰全局变量 局部变量 函数 类中成员函数)</h1><ul>
<li>默认初始化为0</li>
<li>在函数体内，一个被声明的静态变量在这函数被调用的过程中保持不变</li>
<li>在模块内，一个被声明的静态变量是一个本地的全局变量</li>
<li>在模块内，一个被声明的静态函数只能被模块内的其他函数调用</li>
</ul>
<h1 id="两种循环方式"><a href="#两种循环方式" class="headerlink" title="两种循环方式"></a>两种循环方式</h1>  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"> <span class="comment">//1</span></span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> ( condition )</span><br><span class="line">		dosomething();</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		dootherthing();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//2</span></span><br><span class="line"> <span class="keyword">if</span> ( condition )</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i)</span><br><span class="line">     dosomething();</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i)</span><br><span class="line">     dootherthing();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<pre><code>两个for循环前者若每次都能重新检测condition的值，做出对应的操作，运行时间相对较慢
后者只对condition做一次判断，运行时效快，但是灵活性不高</code></pre><h1 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h1><ul>
<li>局部变量尽可能置于最小的作用域,并在声明的时候进行初始化</li>
<li>C++允许在函数的任何位置声明变量,声明的时候进行赋值</li>
<li>VC6.0与VS2010的局部变量局部变量初始化不一样<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//VC6.0支持C99标准            </span></span><br><span class="line"><span class="keyword">if</span>(condition) &#123;             </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; ...)         </span><br><span class="line">    &#123;&#125;                          </span><br><span class="line">&#125;<span class="comment">//到此处i定义结束          </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//VS2010支持C++11标准</span></span><br><span class="line"><span class="keyword">if</span>(condition) &#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; ...)&#123;</span><br><span class="line"></span><br><span class="line">  &#125;<span class="comment">//到此处i定义结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h1 id="字符串复制函数"><a href="#字符串复制函数" class="headerlink" title="字符串复制函数"></a>字符串复制函数</h1>  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">char</span>* <span class="title">strcpy</span><span class="params">(<span class="keyword">char</span>* strDest, <span class="keyword">const</span> <span class="keyword">char</span>* strSrc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	assert((strDest != <span class="literal">NULL</span>) &amp;&amp; (strDest != <span class="literal">NULL</span>));</span><br><span class="line">	<span class="keyword">char</span>* strTemp = strDest;</span><br><span class="line">	<span class="keyword">while</span>((*strTemp++ = *strSrc++) != <span class="string">'\0'</span>)</span><br><span class="line">		<span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> strTemp;</span><br><span class="line">&#125;	</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">size_t</span> <span class="title">strlen</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* strSrc)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">   assert(strSrc != <span class="literal">NULL</span>);</span><br><span class="line">   <span class="keyword">char</span>* sTemp = strSrc;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(sTemp = strSrc; *sTemp; ++sTemp)</span><br><span class="line">     ;</span><br><span class="line">   <span class="keyword">return</span> (sTemp - strSrc);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h1 id="面向对象的三个特征"><a href="#面向对象的三个特征" class="headerlink" title="面向对象的三个特征:"></a>面向对象的三个特征:</h1><ul>
<li>封装 把所有的事物都变成抽象类</li>
<li>继承 子类可继承父类的方法</li>
<li>多态 隐藏接口与接口的重用</li>
</ul>
<h1 id="‘重载’与’重写’的区别"><a href="#‘重载’与’重写’的区别" class="headerlink" title="‘重载’与’重写’的区别"></a>‘重载’与’重写’的区别</h1><ul>
<li>重载，同名函数，参数类型个数不一样</li>
<li>重写，子类重新定义父类的虚函数</li>
</ul>
<h1 id="多态的作用"><a href="#多态的作用" class="headerlink" title="多态的作用"></a>多态的作用</h1><ul>
<li>隐藏实现细节；接口重用</li>
</ul>
<h1 id="new-delete-与-malloc-free-的联系："><a href="#new-delete-与-malloc-free-的联系：" class="headerlink" title="new/delete 与 malloc/free 的联系："></a>new/delete 与 malloc/free 的联系：</h1><ul>
<li>malloc不能初始化对象，new会自动调用函数的构造函数，delete会调用对象的析构函数</li>
<li>new 返回的是数据类型，malloc 返回一个void指针</li>
<li>new 是操作符 只能在C++中用，malloc 是函数 在两个都能使用</li>
<li>ps: malloc 与 calloc 的区别</li>
</ul>
<h1 id="内存分配的方式："><a href="#内存分配的方式：" class="headerlink" title="内存分配的方式："></a>内存分配的方式：</h1><pre><code>- 静态储存区分配，在编译的时候已经分配好
- 在栈上创建：函数返回的时候自动释放空间
- 在堆上分配：动态分配内存，有程序员自动分配与释放</code></pre><h1 id="构造函数只进行最简单的初始化"><a href="#构造函数只进行最简单的初始化" class="headerlink" title="构造函数只进行最简单的初始化"></a>构造函数只进行最简单的初始化</h1>  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ABC</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    ABC(<span class="keyword">int</span> n = <span class="number">0</span>):a(n),b(<span class="number">0</span>)&#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="struct-与-class-的区别"><a href="#struct-与-class-的区别" class="headerlink" title="struct 与 class 的区别"></a>struct 与 class 的区别</h1><ul>
<li>struct的成员默认是公有的， class 的成员默认是私有的</li>
<li>当且仅当只有数据时候使用struct,其他一概使用class</li>
</ul>
<h1 id="基类的析构函数最好定义为虚函数"><a href="#基类的析构函数最好定义为虚函数" class="headerlink" title="基类的析构函数最好定义为虚函数"></a>基类的析构函数最好定义为虚函数</h1><ul>
<li>实现多态的时候,析构时防止只析构基类而不析构派生类</li>
</ul>
<h1 id="尽量使用sizeof-varname-代替sizeof-type"><a href="#尽量使用sizeof-varname-代替sizeof-type" class="headerlink" title="尽量使用sizeof(varname)代替sizeof(type)"></a>尽量使用sizeof(varname)代替sizeof(type)</h1><h1 id="拷贝函数"><a href="#拷贝函数" class="headerlink" title="拷贝函数"></a>拷贝函数</h1><ul>
<li>浅拷贝:增加一个指针指向制定的内存</li>
<li>深拷贝:增加一个指针并申请一块内存,新指针指向这块内存</li>
</ul>
<h1 id="printf函数返回的值是输出字符串的个数"><a href="#printf函数返回的值是输出字符串的个数" class="headerlink" title="printf函数返回的值是输出字符串的个数"></a>printf函数返回的值是输出字符串的个数</h1><h1 id="makefile"><a href="#makefile" class="headerlink" title="makefile"></a>makefile</h1><p>  =  最基本赋值              =与:=的区别<br> :=  覆盖之前的赋值          x=foo         x:=foo<br> ?=  若没有赋值则赋值        y=$(x) bar    y:=$(x) bar<br> +=  添加值(串联)            x=xyz         x:=xyz<br>                             y=xyz bar     y=foo bar</p>
<h1 id="全局变量不会被分配在寄存器-故不能再循环条件中加入全局变量的运算"><a href="#全局变量不会被分配在寄存器-故不能再循环条件中加入全局变量的运算" class="headerlink" title="全局变量不会被分配在寄存器,故不能再循环条件中加入全局变量的运算"></a>全局变量不会被分配在寄存器,故不能再循环条件中加入全局变量的运算</h1><h1 id="优化循环的终止条件，使用count-down-to-zero"><a href="#优化循环的终止条件，使用count-down-to-zero" class="headerlink" title="优化循环的终止条件，使用count_down_to_zero"></a>优化循环的终止条件，使用count_down_to_zero</h1><p>  编译器可以使用一条BNE命令代替CMP于BLE两条命令加快运行速度</p>
<h1 id="对于编译器来说-i和i-是一样的"><a href="#对于编译器来说-i和i-是一样的" class="headerlink" title="对于编译器来说++i和i++是一样的"></a>对于编译器来说++i和i++是一样的</h1>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mov eax, dword ptr[i]</span><br><span class="line">add eax, 1</span><br><span class="line">mov dword ptr[i], eax</span><br></pre></td></tr></table></figure>
<pre><code>前置与后置的区别在于C++的运算符重载
后置++需要一个临时对象才可以完成函数重载,s.t前置比后置更优</code></pre><h1 id="volatile的作用是"><a href="#volatile的作用是" class="headerlink" title="volatile的作用是"></a>volatile的作用是</h1><ul>
<li><p>作为指令关键字，确保本条指令不会因编译器的优化而省略，且要求每次直接读值</p>
</li>
<li><p>register的作用是:作为指令关键字，使用寄存器储存变量，使变量更快的进行写入与读取操作</p>
</li>
<li><p>ps:used in 多线程共享变量,状态寄存器,中断服务子程序,延迟</p>
</li>
<li><p>volatile的本质，因为访问寄存器要比访问内存的数据要快，编译器有时读取数据会进行优化，不在内存中读取，直接地区寄存器的数据，volatile确保了编译器不会优化这条指令，每次读取都避免优化，防止出错</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">square</span><span class="params">(<span class="keyword">volatile</span> <span class="keyword">int</span> *ptr)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (*ptr) * (*ptr);</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//错的</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">square</span><span class="params">(<span class="keyword">volatile</span> <span class="keyword">int</span> *ptr)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a = *ptr;</span><br><span class="line">  <span class="keyword">return</span> a * a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
</ul>
<h1 id="vector-与-string-优先于动态分配数组-遍历vector的时候先用size保存大小"><a href="#vector-与-string-优先于动态分配数组-遍历vector的时候先用size保存大小" class="headerlink" title="vector 与 string 优先于动态分配数组,遍历vector的时候先用size保存大小"></a>vector 与 string 优先于动态分配数组,遍历vector的时候先用size保存大小</h1><h1 id="文件结尾的判断"><a href="#文件结尾的判断" class="headerlink" title="文件结尾的判断"></a>文件结尾的判断</h1><p>  使用int型接受函数返回值,不能使用char<br>  若最后返回0xFF,转换成char型解析成EOF<br>  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> c；</span><br><span class="line">(((c = getchar()) != <span class="string">'\n'</span>) &amp;&amp; c != EOF)</span><br><span class="line">(c = fgetc(fp)) != EOF</span><br></pre></td></tr></table></figure></p>
<h1 id="snprintf函数"><a href="#snprintf函数" class="headerlink" title="snprintf函数"></a>snprintf函数</h1><p>  确保字符串有足够的空间,确保有’\0’结束符   </p>
<h1 id="一些面试题"><a href="#一些面试题" class="headerlink" title="一些面试题"></a>一些面试题</h1><h2 id="设置与清除一个数的第三位"><a href="#设置与清除一个数的第三位" class="headerlink" title="设置与清除一个数的第三位"></a>设置与清除一个数的第三位</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIT3(0x1&lt;&lt;3)</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> a;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_bit3</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    a |= BIT3;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear_bit3</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    a &amp;= ~BIT3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="一个String类的完整实现"><a href="#一个String类的完整实现" class="headerlink" title="一个String类的完整实现"></a>一个String类的完整实现</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">String</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">String</span>(<span class="keyword">const</span> <span class="keyword">char</span> *str = <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">String</span>(<span class="keyword">const</span> <span class="keyword">String</span> &amp;other);</span><br><span class="line">    <span class="keyword">String</span> &amp; <span class="keyword">operator</span>=(<span class="keyword">String</span> &amp;other);</span><br><span class="line">    ~<span class="keyword">String</span>(<span class="keyword">void</span>);</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">char</span> *m_str;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">String</span>::<span class="keyword">String</span>(<span class="keyword">const</span> <span class="keyword">char</span> *str)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        m_str = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1</span>];</span><br><span class="line">        m_str = <span class="string">'\0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        m_str = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="built_in">strlen</span>(str) + <span class="number">1</span>];</span><br><span class="line">        strcpy_s(m_str, str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">String</span>::<span class="keyword">String</span>(<span class="keyword">const</span> <span class="keyword">String</span> &amp;other)</span><br><span class="line">&#123;</span><br><span class="line">    m_str = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="built_in">strlen</span>(other.m_str) + <span class="number">1</span>];</span><br><span class="line">    strcpy_s(m_str, other.m_str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">String</span> &amp; <span class="keyword">String</span>::<span class="keyword">operator</span>=(<span class="keyword">String</span> &amp;other)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (&amp;other == <span class="keyword">this</span>)</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span> []m_str;</span><br><span class="line">    m_str = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="built_in">strlen</span>(other.m_str) + <span class="number">1</span>];</span><br><span class="line">    strcpy_s(m_str, other.m_str);</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">String</span>::~<span class="keyword">String</span>(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (m_str != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> []m_str;</span><br><span class="line">        m_str = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">String</span> &amp; <span class="keyword">String</span>::<span class="keyword">operator</span>=(<span class="keyword">String</span> &amp;other)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == &amp;other)</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">delete</span> [] m_str;</span><br><span class="line"></span><br><span class="line">    m_str = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="built_in">strlen</span>(other.m_str) + <span class="number">1</span>];</span><br><span class="line">    strcpy_s(m_str, other.m_str);</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="单链表的实现"><a href="#单链表的实现" class="headerlink" title="单链表的实现"></a>单链表的实现</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;node;</span><br><span class="line"></span><br><span class="line"><span class="function">node *<span class="title">creat</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    node *head, *p, *s;</span><br><span class="line">    <span class="keyword">int</span> x, cycle = <span class="number">1</span>;</span><br><span class="line">    head = (node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(node));</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">return</span> (head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">length</span><span class="params">(node *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    node *p;</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">while</span>(p != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(node *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    node *p;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    n = length(head);</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">""</span>);</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//单链表的排序</span></span><br><span class="line"><span class="function">node * <span class="title">sort</span><span class="params">(node* *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    node *p,*p2,*p3;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    n= length(head);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span> || head-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">    p = head;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        p = head;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - j; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;data &gt; p-&gt;next-&gt;data)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = p-&gt;data;</span><br><span class="line">                p-&gt;data = p-&gt;next-&gt;data;</span><br><span class="line">                p-&gt;next-&gt;data = temp;</span><br><span class="line">            &#125;</span><br><span class="line">            p = p-&gt;next</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="简答题1"><a href="#简答题1" class="headerlink" title="简答题1"></a>简答题1</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> void main( void ) </span></span><br><span class="line">&#123; </span><br><span class="line">  <span class="keyword">int</span> a[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;; </span><br><span class="line">  <span class="keyword">int</span> *ptr=(<span class="keyword">int</span> *)(&amp;a+<span class="number">1</span>); </span><br><span class="line">  <span class="built_in">printf</span>(“%d,%d”,*(a+<span class="number">1</span>),*(ptr<span class="number">-1</span>)); </span><br><span class="line">  <span class="keyword">return</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//2,5</span></span><br></pre></td></tr></table></figure>

<h2 id="简答题2"><a href="#简答题2" class="headerlink" title="简答题2"></a>简答题2</h2><p>设置地址为0x67a9的整型变量的值为0xaa66 </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> *ptr;</span><br><span class="line">ptr = (<span class="keyword">int</span>*)<span class="number">0x67a9</span></span><br><span class="line">*ptr = <span class="number">0xaa66</span></span><br></pre></td></tr></table></figure>


<h2 id="简答题3"><a href="#简答题3" class="headerlink" title="简答题3"></a>简答题3</h2><p>void (<em>f)()//函数指针<br>void *f()//函数返回指针<br>const int *a//const指针<br>int</em> const a//指向const的指针<br>const int* const a//指向const的const指针</p>
<p>int a//一个整形<br>int <em>a//一个指向整形数的指针<br>int *</em>a//一个指向指针的指针，它指向的指针是指向一个整形<br>int a[10]//一个有10个整形数的数组<br>int <em>a[10]//一个有10个指针的数组，该指针指向一个整形数<br>int (</em>a)[10]//一个指向有10个整形数数组的指针<br>int (<em>a)(int)//一个指向函数的指针，该函数有一个整形参数并返回一个整数<br>int ((</em>a)[10])(int)//一个有10个指针的数组，改指针只想一个函数，该函数有一个整形参数并返回一个整形</p>
<h2 id="声明与定义的区别"><a href="#声明与定义的区别" class="headerlink" title="声明与定义的区别"></a>声明与定义的区别</h2><p>定义分配内存空间，声明不分配内存空间；定义只能有一次，声明可有多次</p>
<h2 id="写出bool-、int、-float、指针变量与“零值”比较的if语句"><a href="#写出bool-、int、-float、指针变量与“零值”比较的if语句" class="headerlink" title="写出bool 、int、 float、指针变量与“零值”比较的if语句"></a>写出bool 、int、 float、指针变量与“零值”比较的if语句</h2><p>if (a)<br>if (a == 0)<br>if (a == NULL)<br>if (a &lt; 0.00000001 &amp;&amp; a &gt; -0.00000001)</p>
<h2 id="C语言的关键字-static-和-C-的关键字-static-有什么区别"><a href="#C语言的关键字-static-和-C-的关键字-static-有什么区别" class="headerlink" title="C语言的关键字 static 和 C++ 的关键字 static 有什么区别"></a>C语言的关键字 static 和 C++ 的关键字 static 有什么区别</h2><p>在C中static用来修饰局部静态变量和外部静态变量、函数。<br>而C++中除了上述功能外，还用来定义类的成员变量和函数。即静态成员和静态成员函数。</p>
<h2 id="C中的malloc和C＋＋中的new有什么区别"><a href="#C中的malloc和C＋＋中的new有什么区别" class="headerlink" title="C中的malloc和C＋＋中的new有什么区别"></a>C中的malloc和C＋＋中的new有什么区别</h2><p>new 是操作符 只能在C++中用<br>malloc 是函数 在两个都能使用<br>new 会调用对象的构造函数<br>malloc 仅仅是分配内存<br>new 返回的是数据类型<br>malloc 返回一个void指针</p>
<h2 id="一个指针可以是volatile吗"><a href="#一个指针可以是volatile吗" class="headerlink" title="一个指针可以是volatile吗"></a>一个指针可以是volatile吗</h2><p>可以，volatile作用是确保指令不会被编译器优化而省略，指针也是一个普通的变量</p>
<h2 id="简述C、C-程序编译的内存分配情况"><a href="#简述C、C-程序编译的内存分配情况" class="headerlink" title="简述C、C++程序编译的内存分配情况"></a>简述C、C++程序编译的内存分配情况</h2><ul>
<li>静态内存非配<ul>
<li>编译时已经分配好了，存取速度快</li>
</ul>
</li>
<li>栈区<ul>
<li>执行函数时，局部变量欧在栈区中运算，函数结束后自动释放</li>
</ul>
</li>
<li>堆区<ul>
<li>动态内存分配，由程序员手动分配空间与释放</li>
</ul>
</li>
</ul>
<h2 id="面向对象的三大特征"><a href="#面向对象的三大特征" class="headerlink" title="面向对象的三大特征"></a>面向对象的三大特征</h2><ul>
<li>封装 把事物都抽象成类，隐藏实现的细节</li>
<li>继承 子类可以继承父类的方法 <ul>
<li>多重继承 与怎样消除二义性 (增加了程序的复杂度，消除二义性用虚函数)</li>
</ul>
</li>
<li>多态 <ul>
<li>允许一个基类指针或引用指向一个派生类的对象</li>
<li>提高程序可扩展性，加你程序耦合度</li>
<li>隐藏接口的细节 实现接口重用</li>
<li>重写 子类重新定义父类的虚函数 参数列表一定相同 在两个类中</li>
<li>重载 函数名相同，参数列表不同</li>
</ul>
</li>
</ul>
<h2 id="简述多态实现的原理"><a href="#简述多态实现的原理" class="headerlink" title="简述多态实现的原理"></a>简述多态实现的原理</h2><p>编译器发现一个类中有虚函数，便会立即为此类生成虚函数表 vtable。<br>虚函数表的各表项为指向对应虚函数的指针。<br>编译器还会在此类中隐含插入一个指针vptr<br>（对vc编译器来说，它插在类的第一个位置上）指向虚函数表。<br>调用此类的构造函数时，在类的构造函数中，<br>编译器会隐含执行vptr与vtable的关联代码，将vptr指向对应的vtable，<br>将类与此类的vtable联系了起来。<br>另外在调用类的构造函数时，指向基础类的指针此时已经变成指向具体的类的this指针，<br>这样依靠此this指针即可得到正确的vtable，。<br>如此才能真正与函数体进行连接，这就是动态联编，实现多态的基本原理。</p>
<h2 id="用C-设计一个不能被继承的类"><a href="#用C-设计一个不能被继承的类" class="headerlink" title="用C++设计一个不能被继承的类"></a>用C++设计一个不能被继承的类</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line"><span class="keyword">friend</span> T; </span><br><span class="line"><span class="keyword">private</span>: A() &#123;&#125; </span><br><span class="line">    ~A() &#123;&#125; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> :</span> <span class="keyword">virtual</span> <span class="keyword">public</span> A </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line">    B() &#123;&#125; </span><br><span class="line">    ~B() &#123;&#125; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> :</span> <span class="keyword">virtual</span> <span class="keyword">public</span> B </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line">    C() &#123;&#125; </span><br><span class="line">    ~C() &#123;&#125; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">( <span class="keyword">void</span> )</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    B b; </span><br><span class="line">    <span class="comment">//C c; </span></span><br><span class="line">    <span class="keyword">return</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="写出以下程序的输出结果：-include-虚函数表啊"><a href="#写出以下程序的输出结果：-include-虚函数表啊" class="headerlink" title="写出以下程序的输出结果： #include    虚函数表啊"></a>写出以下程序的输出结果： #include    虚函数表啊</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span> </span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">g</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; “A::g” &lt;&lt; <span class="built_in">endl</span>; &#125; </span><br><span class="line"><span class="keyword">private</span>: </span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; “A::f” &lt;&lt; <span class="built_in">endl</span>; &#125;</span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> :</span> <span class="keyword">public</span> A </span><br><span class="line">&#123; </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">g</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; “B::g” &lt;&lt; <span class="built_in">endl</span>; &#125; </span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">h</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span> &lt;&lt; “B::h” &lt;&lt; <span class="built_in">endl</span>; &#125; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span><span class="params">( *Fun )</span><span class="params">( <span class="keyword">void</span> )</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    B b; </span><br><span class="line">    Fun pFun; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span>; i++) </span><br><span class="line">    &#123; </span><br><span class="line">        pFun = (Fun)*((<span class="keyword">int</span>*) * (<span class="keyword">int</span>*)(&amp;b) + i); </span><br><span class="line">        pFun(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出结果： B::g A::f B::h</span></span><br></pre></td></tr></table></figure>

<h2 id="谈谈你对编程规范的理解或认识"><a href="#谈谈你对编程规范的理解或认识" class="headerlink" title="谈谈你对编程规范的理解或认识"></a>谈谈你对编程规范的理解或认识</h2><ul>
<li>可行 最基本可以运行</li>
<li>可读 程序给别人写，看的</li>
<li>健壮性 可移植</li>
<li>可进行模块化测试</li>
</ul>
<h2 id="进程与线程的区别"><a href="#进程与线程的区别" class="headerlink" title="进程与线程的区别"></a>进程与线程的区别</h2><ul>
<li>一个线程只能属于一个进程，一个进程可以拥有很多个线程</li>
<li>线程是进程执行运算中最小的单位</li>
<li>进程是系统并发运行的基本单位</li>
</ul>
<h2 id="所处linux的同步机制、异步机制，什么是死锁，如何避免死锁"><a href="#所处linux的同步机制、异步机制，什么是死锁，如何避免死锁" class="headerlink" title="所处linux的同步机制、异步机制，什么是死锁，如何避免死锁"></a>所处linux的同步机制、异步机制，什么是死锁，如何避免死锁</h2><ul>
<li>资源不能共享，只能由一个进程使用</li>
<li>已经得到资源的进程可以再次申请新的资源</li>
<li>已经分配到资源的不能被剥削</li>
</ul>
<p>#ifdef __cplusplus<br>cout&lt;&lt;”C++”;<br>#else<br>cout&lt;&lt;”c”;<br>#endif</p>
<h2 id="哪些库函数属于高危函数，为什么？"><a href="#哪些库函数属于高危函数，为什么？" class="headerlink" title="哪些库函数属于高危函数，为什么？"></a>哪些库函数属于高危函数，为什么？</h2><p>strcpy等等<br>strcp 赋值到目标区间的时候可能会造成缓冲区溢出</p>
<h2 id="派生类与虚函数"><a href="#派生类与虚函数" class="headerlink" title="派生类与虚函数"></a>派生类与虚函数</h2><ul>
<li>派生类继承的函数不能定义成虚函数，如果派生类没有冲定义基类的虚函数，则使用基类中定义的版本</li>
<li>派生类中函数的声明必须与基类中定义的方式一样的</li>
<li>基类中声明为虚函数，派生类中也需要为虚函数</li>
</ul>
<h2 id="虚函数的实现"><a href="#虚函数的实现" class="headerlink" title="虚函数的实现"></a>虚函数的实现</h2><p>  使用虚函数表，如果是基类的实例，对应位置存在基类的函数指针</p>
<h2 id="虚函数与纯虚函数的区别"><a href="#虚函数与纯虚函数的区别" class="headerlink" title="虚函数与纯虚函数的区别"></a>虚函数与纯虚函数的区别</h2><ul>
<li>虚函数在子类中可以不重载，纯虚函数必须在子类中实现</li>
<li>带纯虚函数的类叫抽象类，不能直接生成对象，只能被继承</li>
</ul>
<h2 id="写一个纯虚函数"><a href="#写一个纯虚函数" class="headerlink" title="写一个纯虚函数"></a>写一个纯虚函数</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>=<span class="number">0</span></span><br></pre></td></tr></table></figure>

<h2 id="STL各个容器的实现原理"><a href="#STL各个容器的实现原理" class="headerlink" title="STL各个容器的实现原理"></a>STL各个容器的实现原理</h2><ul>
<li>vector 顺序容器，动态数组，支持插入、查找、删除，是内存中的一块连续的空间，当内存不足，分配的空间增加为原来的两倍，存取效率高，插入元素效率低</li>
<li>set 关联容器 每个元素只有一个关键字，查找效率高，红黑树的结构体实现，搞笑查找，插入，删除</li>
<li>map 关联容器 以键值形式进行存储，方便查找，关键词起索引的作用 红黑树结构实现</li>
<li>list 顺序容器 双向环状链表 不能随机查找，插入元素效率高</li>
<li>deque 动态数组，在前后增加数组，时间为常量</li>
<li>stack 基于deque的栈堆 先进后出</li>
<li>queue 基于deque的队列 先进先出</li>
</ul>
]]></content>
      <categories>
        <category>知识梳理</category>
      </categories>
      <tags>
        <tag>clang</tag>
      </tags>
  </entry>
  <entry>
    <title>树的实现</title>
    <url>/page/202012271645.html</url>
    <content><![CDATA[<p>  这辈子都没有过什么优越感，光不自卑就已经用尽了全力</p>
<hr>
<p>  自己写的一个树形结构，作用是保存(广东省)区下两级的地区码，以后应该可以用于其他树形的用途，稍作记录</p>
  <a id="more"></a>

<ul>
<li><p>x_tree.go </p>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> x_tree</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"com.x.base/util/x_file"</span></span><br><span class="line">	<span class="string">"com.x.base/util/x_log"</span></span><br><span class="line">	<span class="string">"com.x.base/x_apppath"</span></span><br><span class="line">	<span class="string">"encoding/json"</span></span><br><span class="line">	<span class="string">"sync"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span>(</span><br><span class="line">	fileNodeList = x_apppath.PATH_CFG + <span class="string">"zonelist.txt"</span></span><br><span class="line">	fileNodeTree = x_apppath.PATH_CFG + <span class="string">"zone.json"</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">生成一个树状结构体, 存储区下两级编码</span></span><br><span class="line"><span class="comment">需要根节点的    ParentId = 0</span></span><br><span class="line"><span class="comment">TODO</span></span><br><span class="line"><span class="comment">怎样处理那种游离节点?是否要删除</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> TreeNode <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id 		 	<span class="keyword">int</span>        	 	<span class="string">`json:"id"`</span></span><br><span class="line">    ParentId 	<span class="keyword">int</span>          	<span class="string">`json:"pid"`</span></span><br><span class="line">    Name 		<span class="keyword">string</span>       	<span class="string">`json:"name"`</span></span><br><span class="line">    Child 		[]*TreeNode  	<span class="string">`json:"child"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> DataTree <span class="keyword">struct</span> &#123;</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	用于存储 当前所有的 节点信息</span></span><br><span class="line"><span class="comment">	用map是为了方便以后的增删改</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	DataList 	<span class="keyword">map</span>[<span class="keyword">int</span>]*TreeNode</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	最终生成树的结构体</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	DTree		<span class="keyword">map</span>[<span class="keyword">int</span>]*TreeNode</span><br><span class="line">	</span><br><span class="line">	lock 		sync.Mutex</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">初始化数据结构</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewDataTree</span><span class="params">()</span> *<span class="title">DataTree</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	dd := &amp;DataTree&#123;</span><br><span class="line">		DataList: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]*TreeNode, <span class="number">0</span>),</span><br><span class="line">		DTree: 	  <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]*TreeNode, <span class="number">0</span>),</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//先从文件中查找, 没有的话才建立一个空的结构体</span></span><br><span class="line">	<span class="keyword">if</span> x_file.ExistsFile(fileNodeList, <span class="literal">false</span>) &#123;</span><br><span class="line"></span><br><span class="line">		buffer := x_file.FileRead1(fileNodeList)</span><br><span class="line">		</span><br><span class="line">		tDataList := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]*TreeNode, <span class="number">0</span>)</span><br><span class="line">		err := json.Unmarshal(*buffer, &amp;tDataList)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			x_log.Err(<span class="string">"error:"</span>, err)</span><br><span class="line">			<span class="keyword">return</span> dd</span><br><span class="line">		&#125;</span><br><span class="line">		dd.DataList = tDataList</span><br><span class="line">		dd.createTree()</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> dd</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">添加一个节点到树上面去</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DataTree)</span><span class="title">AddNode</span><span class="params">(t *TreeNode)</span></span> &#123;</span><br><span class="line">	d.lock.Lock()</span><br><span class="line">	<span class="keyword">defer</span> d.lock.Unlock()</span><br><span class="line"></span><br><span class="line">	a := TreeNode&#123;</span><br><span class="line">        Id :		t.Id,</span><br><span class="line">        ParentId : 	t.ParentId,</span><br><span class="line">        Name :		t.Name,</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    d.DataList[a.Id] = &amp;a</span><br><span class="line">    d.createTree()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">删除一个节点还有,这个节点以下的所有节点</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DataTree)</span><span class="title">DeleteNode</span><span class="params">(t *TreeNode)</span></span> &#123;</span><br><span class="line">	d.lock.Lock()</span><br><span class="line">	<span class="keyword">defer</span> d.lock.Unlock()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> _, ok := d.DataList[t.Id]; ok &#123;</span><br><span class="line">		<span class="built_in">delete</span>(d.DataList, t.Id)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	d.createTree()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">更新一个节点</span></span><br><span class="line"><span class="comment">先删除, 后添加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DataTree)</span> <span class="title">UpdateNode</span><span class="params">(old *TreeNode, <span class="built_in">new</span> *TreeNode)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	d.DeleteNode(old)</span><br><span class="line">	d.AddNode(<span class="built_in">new</span>)</span><br><span class="line">	d.createTree()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DataTree)</span><span class="title">writeToFile</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//存储所有的list</span></span><br><span class="line">	jsonList, err := json.Marshal(d.DataList)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		x_log.Err(<span class="string">"error"</span>, err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	x_file.FileWrite1(fileNodeList, jsonList, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">//存储tree 给测试看的, 其实不用写</span></span><br><span class="line">	tt :=<span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]*TreeNode, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> _, value := <span class="keyword">range</span> d.DTree &#123;</span><br><span class="line">		<span class="comment">//只生成根目录下的树</span></span><br><span class="line">		<span class="keyword">if</span> value.ParentId == <span class="number">0</span>  &#123;</span><br><span class="line">			tt[value.Id] = value</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	jsonStr, err := json.Marshal(tt)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		x_log.Err(<span class="string">"error"</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	x_file.FileWrite1(fileNodeTree, jsonStr, <span class="literal">false</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//建立树</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DataTree)</span> <span class="title">buildTree</span><span class="params">(nodes []TreeNode)</span></span> &#123;</span><br><span class="line">	d.DTree = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]*TreeNode, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> _, value := <span class="keyword">range</span> nodes &#123;</span><br><span class="line">		id := value.Id</span><br><span class="line"></span><br><span class="line">		value.Child = <span class="built_in">make</span>([]*TreeNode, <span class="number">0</span>)</span><br><span class="line">		tt := TreeNode&#123;</span><br><span class="line">			Id:       value.Id,</span><br><span class="line">			ParentId: value.ParentId,</span><br><span class="line">			Name:     value.Name,</span><br><span class="line">		&#125;</span><br><span class="line">		d.DTree[id] = &amp;tt</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> _, vv := <span class="keyword">range</span> d.DTree &#123;</span><br><span class="line">		pid := vv.ParentId</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> _, ok := d.DTree[pid]; ok &#123;</span><br><span class="line">			d.DTree[pid].Child = <span class="built_in">append</span>(d.DTree[pid].Child, vv)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//标准格式 树生成 需要转成标准格式字段</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DataTree)</span><span class="title">createTree</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> nodes []TreeNode</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> _, vv := <span class="keyword">range</span> d.DataList &#123;</span><br><span class="line">		nodes = <span class="built_in">append</span>(nodes, *vv)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//构建树</span></span><br><span class="line">	d.buildTree(nodes)</span><br><span class="line">	d.writeToFile()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">递归获取所有子节点</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DataTree)</span><span class="title">getAllNodeId</span><span class="params">(node *TreeNode)</span> <span class="params">(nodes []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(node.Child) == <span class="number">0</span> &#123;</span><br><span class="line">		nodes = <span class="built_in">append</span>(nodes, node.Id)</span><br><span class="line">		<span class="keyword">return</span> nodes</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	nodes = <span class="built_in">append</span>(nodes, node.Id)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> _, t := <span class="keyword">range</span> node.Child &#123;</span><br><span class="line">		<span class="keyword">for</span> _, n := <span class="keyword">range</span> d.getAllNodeId(t) &#123;</span><br><span class="line">			nodes = <span class="built_in">append</span>(nodes, n)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> nodes</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">根据一个区域编码， 查找该编码下 所有去下两级的区域信息</span></span><br><span class="line"><span class="comment">查找一个节点的所有子节点, 返回他们的ID</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *DataTree)</span><span class="title">FindChildIdByAreaId</span><span class="params">(areaId <span class="keyword">int</span>)</span> <span class="params">(result []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	_, ok := d.DataList[areaId]</span><br><span class="line">	<span class="keyword">if</span> !ok &#123;</span><br><span class="line">		result = []<span class="keyword">int</span>&#123;areaId&#125;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> _, value := <span class="keyword">range</span> d.DTree &#123;</span><br><span class="line">		<span class="keyword">if</span> value.Id == areaId &#123;</span><br><span class="line">			<span class="keyword">return</span> d.getAllNodeId(value)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	result = []<span class="keyword">int</span>&#123;areaId&#125;</span><br><span class="line">	<span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>tree_test.go</p>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> x_tree</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"testing"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestTree</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	zone := NewDataTree()</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	z_00 := TreeNode&#123;Id :440000, ParentId : 0, Name : "广东",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_00)</span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment">    z_1 := TreeNode&#123;Id : 440100 , ParentId :  440000 , Name : "广州",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_1 )</span></span><br><span class="line"><span class="comment">    z_2 := TreeNode&#123;Id : 440200 , ParentId :  440000 , Name : "韶关",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_2 )</span></span><br><span class="line"><span class="comment">    z_3 := TreeNode&#123;Id : 440300 , ParentId :  440000 , Name : "深圳",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_3 )</span></span><br><span class="line"><span class="comment">    z_4 := TreeNode&#123;Id : 440400 , ParentId :  440000 , Name : "珠海",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_4 )</span></span><br><span class="line"><span class="comment">    z_5 := TreeNode&#123;Id : 440500 , ParentId :  440000 , Name : "汕头",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_5 )</span></span><br><span class="line"><span class="comment">    z_6 := TreeNode&#123;Id : 440600 , ParentId :  440000 , Name : "佛山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_6 )</span></span><br><span class="line"><span class="comment">    z_7 := TreeNode&#123;Id : 440700 , ParentId :  440000 , Name : "江门",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_7 )</span></span><br><span class="line"><span class="comment">    z_8 := TreeNode&#123;Id : 440800 , ParentId :  440000 , Name : "湛江",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_8 )</span></span><br><span class="line"><span class="comment">    z_9 := TreeNode&#123;Id : 440900 , ParentId :  440000 , Name : "茂名",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_9 )</span></span><br><span class="line"><span class="comment">    z_10 := TreeNode&#123;Id : 441200 , ParentId :  440000 , Name : "肇庆",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_10 )</span></span><br><span class="line"><span class="comment">    z_11 := TreeNode&#123;Id : 441300 , ParentId :  440000 , Name : "惠州",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_11 )</span></span><br><span class="line"><span class="comment">    z_12 := TreeNode&#123;Id : 441400 , ParentId :  440000 , Name : "梅州",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_12 )</span></span><br><span class="line"><span class="comment">    z_13 := TreeNode&#123;Id : 441500 , ParentId :  440000 , Name : "汕尾",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_13 )</span></span><br><span class="line"><span class="comment">    z_14 := TreeNode&#123;Id : 441600 , ParentId :  440000 , Name : "河源",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_14 )</span></span><br><span class="line"><span class="comment">    z_15 := TreeNode&#123;Id : 441700 , ParentId :  440000 , Name : "阳江",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_15 )</span></span><br><span class="line"><span class="comment">    z_16 := TreeNode&#123;Id : 441800 , ParentId :  440000 , Name : "清远",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_16 )</span></span><br><span class="line"><span class="comment">    z_17 := TreeNode&#123;Id : 441900 , ParentId :  440000 , Name : "东莞",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_17 )</span></span><br><span class="line"><span class="comment">    z_18 := TreeNode&#123;Id : 442000 , ParentId :  440000 , Name : "中山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_18 )</span></span><br><span class="line"><span class="comment">    z_19 := TreeNode&#123;Id : 445100 , ParentId :  440000 , Name : "潮州",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_19 )</span></span><br><span class="line"><span class="comment">    z_20 := TreeNode&#123;Id : 445200 , ParentId :  440000 , Name : "揭阳",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_20 )</span></span><br><span class="line"><span class="comment">    z_21 := TreeNode&#123;Id : 445300 , ParentId :  440000 , Name : "云浮",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_21 )</span></span><br><span class="line"><span class="comment">    z_22 := TreeNode&#123;Id : 445301 , ParentId :  445300 , Name : "罗定",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_22 )</span></span><br><span class="line"><span class="comment">    z_23 := TreeNode&#123;Id : 440701 , ParentId :  440700 , Name : "开平",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_23 )</span></span><br><span class="line"><span class="comment">    z_24 := TreeNode&#123;Id : 442001 , ParentId :  442000 , Name : "城区",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_24 )</span></span><br><span class="line"><span class="comment">    z_25 := TreeNode&#123;Id : 441801 , ParentId :  441800 , Name : "连州",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_25 )</span></span><br><span class="line"><span class="comment">    z_26 := TreeNode&#123;Id : 440201 , ParentId :  440200 , Name : "翁源",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_26 )</span></span><br><span class="line"><span class="comment">    z_27 := TreeNode&#123;Id : 440101 , ParentId :  440100 , Name : "从化",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_27 )</span></span><br><span class="line"><span class="comment">    z_28 := TreeNode&#123;Id : 440801 , ParentId :  440800 , Name : "赤坎",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_28 )</span></span><br><span class="line"><span class="comment">    z_29 := TreeNode&#123;Id : 441901 , ParentId :  441900 , Name : "莞城",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_29 )</span></span><br><span class="line"><span class="comment">    z_30 := TreeNode&#123;Id : 445302 , ParentId :  445300 , Name : "云安",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_30 )</span></span><br><span class="line"><span class="comment">    z_31 := TreeNode&#123;Id : 445201 , ParentId :  445200 , Name : "城区",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_31 )</span></span><br><span class="line"><span class="comment">    z_32 := TreeNode&#123;Id : 441902 , ParentId :  441900 , Name : "道滘",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_32 )</span></span><br><span class="line"><span class="comment">    z_33 := TreeNode&#123;Id : 441401 , ParentId :  441400 , Name : "丰顺",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_33 )</span></span><br><span class="line"><span class="comment">    z_34 := TreeNode&#123;Id : 440401 , ParentId :  440400 , Name : "前山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_34 )</span></span><br><span class="line"><span class="comment">    z_35 := TreeNode&#123;Id : 441903 , ParentId :  441900 , Name : "长安",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_35 )</span></span><br><span class="line"><span class="comment">    z_36 := TreeNode&#123;Id : 445202 , ParentId :  445200 , Name : "揭西",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_36 )</span></span><br><span class="line"><span class="comment">    z_37 := TreeNode&#123;Id : 441904 , ParentId :  441900 , Name : "樟木头",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_37 )</span></span><br><span class="line"><span class="comment">    z_38 := TreeNode&#123;Id : 440402 , ParentId :  440400 , Name : "香洲",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_38 )</span></span><br><span class="line"><span class="comment">    z_39 := TreeNode&#123;Id : 440702 , ParentId :  440700 , Name : "新会",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_39 )</span></span><br><span class="line"><span class="comment">    z_40 := TreeNode&#123;Id : 441402 , ParentId :  441400 , Name : "五华",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_40 )</span></span><br><span class="line"><span class="comment">    z_41 := TreeNode&#123;Id : 445101 , ParentId :  445100 , Name : "城区",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_41 )</span></span><br><span class="line"><span class="comment">    z_42 := TreeNode&#123;Id : 440802 , ParentId :  440800 , Name : "徐闻",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_42 )</span></span><br><span class="line"><span class="comment">    z_43 := TreeNode&#123;Id : 440301 , ParentId :  440300 , Name : "宝安",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_43 )</span></span><br><span class="line"><span class="comment">    z_44 := TreeNode&#123;Id : 440102 , ParentId :  440100 , Name : "南沙",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_44 )</span></span><br><span class="line"><span class="comment">    z_45 := TreeNode&#123;Id : 440901 , ParentId :  440900 , Name : "化州",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_45 )</span></span><br><span class="line"><span class="comment">    z_46 := TreeNode&#123;Id : 441802 , ParentId :  441800 , Name : "英德",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_46 )</span></span><br><span class="line"><span class="comment">    z_47 := TreeNode&#123;Id : 441905 , ParentId :  441900 , Name : "石龙",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_47 )</span></span><br><span class="line"><span class="comment">    z_48 := TreeNode&#123;Id : 441906 , ParentId :  441900 , Name : "石碣",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_48 )</span></span><br><span class="line"><span class="comment">    z_49 := TreeNode&#123;Id : 441907 , ParentId :  441900 , Name : "企石",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_49 )</span></span><br><span class="line"><span class="comment">    z_50 := TreeNode&#123;Id : 440703 , ParentId :  440700 , Name : "鹤山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_50 )</span></span><br><span class="line"><span class="comment">    z_51 := TreeNode&#123;Id : 440704 , ParentId :  440700 , Name : "台山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_51 )</span></span><br><span class="line"><span class="comment">    z_52 := TreeNode&#123;Id : 440202 , ParentId :  440200 , Name : "乐昌",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_52 )</span></span><br><span class="line"><span class="comment">    z_53 := TreeNode&#123;Id : 440302 , ParentId :  440300 , Name : "福田",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_53 )</span></span><br><span class="line"><span class="comment">    z_54 := TreeNode&#123;Id : 441908 , ParentId :  441900 , Name : "高埗",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_54 )</span></span><br><span class="line"><span class="comment">    z_55 := TreeNode&#123;Id : 441909 , ParentId :  441900 , Name : "厚街",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_55 )</span></span><br><span class="line"><span class="comment">    z_56 := TreeNode&#123;Id : 441910 , ParentId :  441900 , Name : "石排",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_56 )</span></span><br><span class="line"><span class="comment">    z_57 := TreeNode&#123;Id : 440902 , ParentId :  440900 , Name : "茂南",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_57 )</span></span><br><span class="line"><span class="comment">    z_58 := TreeNode&#123;Id : 441911 , ParentId :  441900 , Name : "茶山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_58 )</span></span><br><span class="line"><span class="comment">    z_59 := TreeNode&#123;Id : 441912 , ParentId :  441900 , Name : "麻涌",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_59 )</span></span><br><span class="line"><span class="comment">    z_60 := TreeNode&#123;Id : 441403 , ParentId :  441400 , Name : "蕉岭",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_60 )</span></span><br><span class="line"><span class="comment">    z_61 := TreeNode&#123;Id : 440203 , ParentId :  440200 , Name : "曲江",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_61 )</span></span><br><span class="line"><span class="comment">    z_62 := TreeNode&#123;Id : 441201 , ParentId :  441200 , Name : "怀集",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_62 )</span></span><br><span class="line"><span class="comment">    z_63 := TreeNode&#123;Id : 441202 , ParentId :  441200 , Name : "端州",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_63 )</span></span><br><span class="line"><span class="comment">    z_64 := TreeNode&#123;Id : 441913 , ParentId :  441900 , Name : "凤岗",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_64 )</span></span><br><span class="line"><span class="comment">    z_65 := TreeNode&#123;Id : 442002 , ParentId :  442000 , Name : "南部",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_65 )</span></span><br><span class="line"><span class="comment">    z_66 := TreeNode&#123;Id : 441914 , ParentId :  441900 , Name : "东城",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_66 )</span></span><br><span class="line"><span class="comment">    z_67 := TreeNode&#123;Id : 440601 , ParentId :  440600 , Name : "三水",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_67 )</span></span><br><span class="line"><span class="comment">    z_68 := TreeNode&#123;Id : 440303 , ParentId :  440300 , Name : "盐田",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_68 )</span></span><br><span class="line"><span class="comment">    z_69 := TreeNode&#123;Id : 441701 , ParentId :  441700 , Name : "高新",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_69 )</span></span><br><span class="line"><span class="comment">    z_70 := TreeNode&#123;Id : 440803 , ParentId :  440800 , Name : "吴川",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_70 )</span></span><br><span class="line"><span class="comment">    z_71 := TreeNode&#123;Id : 440705 , ParentId :  440700 , Name : "恩平",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_71 )</span></span><br><span class="line"><span class="comment">    z_72 := TreeNode&#123;Id : 441404 , ParentId :  441400 , Name : "梅江",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_72 )</span></span><br><span class="line"><span class="comment">    z_73 := TreeNode&#123;Id : 441915 , ParentId :  441900 , Name : "黄江",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_73 )</span></span><br><span class="line"><span class="comment">    z_74 := TreeNode&#123;Id : 440103 , ParentId :  440100 , Name : "白云",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_74 )</span></span><br><span class="line"><span class="comment">    z_75 := TreeNode&#123;Id : 441301 , ParentId :  441300 , Name : "惠阳",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_75 )</span></span><br><span class="line"><span class="comment">    z_76 := TreeNode&#123;Id : 445102 , ParentId :  445100 , Name : "潮安",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_76 )</span></span><br><span class="line"><span class="comment">    z_77 := TreeNode&#123;Id : 445203 , ParentId :  445200 , Name : "揭东",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_77 )</span></span><br><span class="line"><span class="comment">    z_78 := TreeNode&#123;Id : 441501 , ParentId :  441500 , Name : "城区",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_78 )</span></span><br><span class="line"><span class="comment">    z_79 := TreeNode&#123;Id : 445303 , ParentId :  445300 , Name : "新兴",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_79 )</span></span><br><span class="line"><span class="comment">    z_80 := TreeNode&#123;Id : 441916 , ParentId :  441900 , Name : "清溪",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_80 )</span></span><br><span class="line"><span class="comment">    z_81 := TreeNode&#123;Id : 442003 , ParentId :  442000 , Name : "东部",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_81 )</span></span><br><span class="line"><span class="comment">    z_82 := TreeNode&#123;Id : 441702 , ParentId :  441700 , Name : "阳西",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_82 )</span></span><br><span class="line"><span class="comment">    z_83 := TreeNode&#123;Id : 441502 , ParentId :  441500 , Name : "陆河",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_83 )</span></span><br><span class="line"><span class="comment">    z_84 := TreeNode&#123;Id : 440104 , ParentId :  440100 , Name : "增城",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_84 )</span></span><br><span class="line"><span class="comment">    z_85 := TreeNode&#123;Id : 440602 , ParentId :  440600 , Name : "顺德",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_85 )</span></span><br><span class="line"><span class="comment">    z_86 := TreeNode&#123;Id : 442004 , ParentId :  442000 , Name : "西部",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_86 )</span></span><br><span class="line"><span class="comment">    z_87 := TreeNode&#123;Id : 441917 , ParentId :  441900 , Name : "塘厦",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_87 )</span></span><br><span class="line"><span class="comment">    z_88 := TreeNode&#123;Id : 442005 , ParentId :  442000 , Name : "小榄",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_88 )</span></span><br><span class="line"><span class="comment">    z_89 := TreeNode&#123;Id : 440204 , ParentId :  440200 , Name : "新丰",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_89 )</span></span><br><span class="line"><span class="comment">    z_90 := TreeNode&#123;Id : 441803 , ParentId :  441800 , Name : "佛冈",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_90 )</span></span><br><span class="line"><span class="comment">    z_91 := TreeNode&#123;Id : 445204 , ParentId :  445200 , Name : "普宁",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_91 )</span></span><br><span class="line"><span class="comment">    z_92 := TreeNode&#123;Id : 441804 , ParentId :  441800 , Name : "阳山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_92 )</span></span><br><span class="line"><span class="comment">    z_93 := TreeNode&#123;Id : 441203 , ParentId :  441200 , Name : "高要",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_93 )</span></span><br><span class="line"><span class="comment">    z_94 := TreeNode&#123;Id : 440804 , ParentId :  440800 , Name : "霞山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_94 )</span></span><br><span class="line"><span class="comment">    z_95 := TreeNode&#123;Id : 441204 , ParentId :  441200 , Name : "德庆",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_95 )</span></span><br><span class="line"><span class="comment">    z_96 := TreeNode&#123;Id : 441918 , ParentId :  441900 , Name : "大岭山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_96 )</span></span><br><span class="line"><span class="comment">    z_97 := TreeNode&#123;Id : 441919 , ParentId :  441900 , Name : "万江",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_97 )</span></span><br><span class="line"><span class="comment">    z_98 := TreeNode&#123;Id : 441920 , ParentId :  441900 , Name : "常平",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_98 )</span></span><br><span class="line"><span class="comment">    z_99 := TreeNode&#123;Id : 445304 , ParentId :  445300 , Name : "郁南",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_99 )</span></span><br><span class="line"><span class="comment">    z_100 := TreeNode&#123;Id : 441405 , ParentId :  441400 , Name : "大埔",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_100 )</span></span><br><span class="line"><span class="comment">    z_101 := TreeNode&#123;Id : 441406 , ParentId :  441400 , Name : "兴宁",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_101 )</span></span><br><span class="line"><span class="comment">    z_102 := TreeNode&#123;Id : 440205 , ParentId :  440200 , Name : "乳源",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_102 )</span></span><br><span class="line"><span class="comment">    z_103 := TreeNode&#123;Id : 441921 , ParentId :  441900 , Name : "寮步",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_103 )</span></span><br><span class="line"><span class="comment">    z_104 := TreeNode&#123;Id : 440105 , ParentId :  440100 , Name : "东山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_104 )</span></span><br><span class="line"><span class="comment">    z_105 := TreeNode&#123;Id : 440106 , ParentId :  440100 , Name : "黄萝",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_105 )</span></span><br><span class="line"><span class="comment">    z_106 := TreeNode&#123;Id : 440501 , ParentId :  440500 , Name : "南澳",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_106 )</span></span><br><span class="line"><span class="comment">    z_107 := TreeNode&#123;Id : 441302 , ParentId :  441300 , Name : "龙门",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_107 )</span></span><br><span class="line"><span class="comment">    z_108 := TreeNode&#123;Id : 440403 , ParentId :  440400 , Name : "金湾",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_108 )</span></span><br><span class="line"><span class="comment">    z_109 := TreeNode&#123;Id : 440206 , ParentId :  440200 , Name : "仁化",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_109 )</span></span><br><span class="line"><span class="comment">    z_110 := TreeNode&#123;Id : 441205 , ParentId :  441200 , Name : "四会",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_110 )</span></span><br><span class="line"><span class="comment">    z_111 := TreeNode&#123;Id : 441601 , ParentId :  441600 , Name : "紫金",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_111 )</span></span><br><span class="line"><span class="comment">    z_112 := TreeNode&#123;Id : 440706 , ParentId :  440700 , Name : "江海",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_112 )</span></span><br><span class="line"><span class="comment">    z_113 := TreeNode&#123;Id : 445103 , ParentId :  445100 , Name : "饶平",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_113 )</span></span><br><span class="line"><span class="comment">    z_114 := TreeNode&#123;Id : 440502 , ParentId :  440500 , Name : "潮南",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_114 )</span></span><br><span class="line"><span class="comment">    z_115 := TreeNode&#123;Id : 440107 , ParentId :  440100 , Name : "番禺",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_115 )</span></span><br><span class="line"><span class="comment">    z_116 := TreeNode&#123;Id : 441407 , ParentId :  441400 , Name : "平远",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_116 )</span></span><br><span class="line"><span class="comment">    z_117 := TreeNode&#123;Id : 440707 , ParentId :  440700 , Name : "蓬江",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_117 )</span></span><br><span class="line"><span class="comment">    z_118 := TreeNode&#123;Id : 441206 , ParentId :  441200 , Name : "鼎湖",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_118 )</span></span><br><span class="line"><span class="comment">    z_119 := TreeNode&#123;Id : 442006 , ParentId :  442000 , Name : "北部",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_119 )</span></span><br><span class="line"><span class="comment">    z_120 := TreeNode&#123;Id : 440404 , ParentId :  440400 , Name : "拱北",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_120 )</span></span><br><span class="line"><span class="comment">    z_121 := TreeNode&#123;Id : 441922 , ParentId :  441900 , Name : "桥头",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_121 )</span></span><br><span class="line"><span class="comment">    z_122 := TreeNode&#123;Id : 441923 , ParentId :  441900 , Name : "南城",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_122 )</span></span><br><span class="line"><span class="comment">    z_123 := TreeNode&#123;Id : 441805 , ParentId :  441800 , Name : "城区",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_123 )</span></span><br><span class="line"><span class="comment">    z_124 := TreeNode&#123;Id : 441303 , ParentId :  441300 , Name : "大亚湾",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_124 )</span></span><br><span class="line"><span class="comment">    z_125 := TreeNode&#123;Id : 440405 , ParentId :  440400 , Name : "斗门",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_125 )</span></span><br><span class="line"><span class="comment">    z_126 := TreeNode&#123;Id : 440304 , ParentId :  440300 , Name : "龙岗",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_126 )</span></span><br><span class="line"><span class="comment">    z_127 := TreeNode&#123;Id : 441602 , ParentId :  441600 , Name : "东源",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_127 )</span></span><br><span class="line"><span class="comment">    z_128 := TreeNode&#123;Id : 440108 , ParentId :  440100 , Name : "越秀",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_128 )</span></span><br><span class="line"><span class="comment">    z_129 := TreeNode&#123;Id : 441806 , ParentId :  441800 , Name : "连南",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_129 )</span></span><br><span class="line"><span class="comment">    z_130 := TreeNode&#123;Id : 441924 , ParentId :  441900 , Name : "望牛墩",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_130 )</span></span><br><span class="line"><span class="comment">    z_131 := TreeNode&#123;Id : 441925 , ParentId :  441900 , Name : "虎门",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_131 )</span></span><br><span class="line"><span class="comment">    z_132 := TreeNode&#123;Id : 441926 , ParentId :  441900 , Name : "松山湖",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_132 )</span></span><br><span class="line"><span class="comment">    z_133 := TreeNode&#123;Id : 440503 , ParentId :  440500 , Name : "潮阳",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_133 )</span></span><br><span class="line"><span class="comment">    z_134 := TreeNode&#123;Id : 440805 , ParentId :  440800 , Name : "雷州",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_134 )</span></span><br><span class="line"><span class="comment">    z_135 := TreeNode&#123;Id : 441207 , ParentId :  441200 , Name : "广宁",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_135 )</span></span><br><span class="line"><span class="comment">    z_136 := TreeNode&#123;Id : 440109 , ParentId :  440100 , Name : "荔湾",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_136 )</span></span><br><span class="line"><span class="comment">    z_137 := TreeNode&#123;Id : 440903 , ParentId :  440900 , Name : "高州",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_137 )</span></span><br><span class="line"><span class="comment">    z_138 := TreeNode&#123;Id : 440207 , ParentId :  440200 , Name : "南雄",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_138 )</span></span><br><span class="line"><span class="comment">    z_139 := TreeNode&#123;Id : 440110 , ParentId :  440100 , Name : "天河",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_139 )</span></span><br><span class="line"><span class="comment">    z_140 := TreeNode&#123;Id : 441603 , ParentId :  441600 , Name : "城区",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_140 )</span></span><br><span class="line"><span class="comment">    z_141 := TreeNode&#123;Id : 440603 , ParentId :  440600 , Name : "高明",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_141 )</span></span><br><span class="line"><span class="comment">    z_142 := TreeNode&#123;Id : 440305 , ParentId :  440300 , Name : "南山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_142 )</span></span><br><span class="line"><span class="comment">    z_143 := TreeNode&#123;Id : 440504 , ParentId :  440500 , Name : "澄海",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_143 )</span></span><br><span class="line"><span class="comment">    z_144 := TreeNode&#123;Id : 441807 , ParentId :  441800 , Name : "清新",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_144 )</span></span><br><span class="line"><span class="comment">    z_145 := TreeNode&#123;Id : 441927 , ParentId :  441900 , Name : "中堂",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_145 )</span></span><br><span class="line"><span class="comment">    z_146 := TreeNode&#123;Id : 441304 , ParentId :  441300 , Name : "惠东",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_146 )</span></span><br><span class="line"><span class="comment">    z_147 := TreeNode&#123;Id : 441305 , ParentId :  441300 , Name : "博罗",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_147 )</span></span><br><span class="line"><span class="comment">    z_148 := TreeNode&#123;Id : 441408 , ParentId :  441400 , Name : "梅县",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_148 )</span></span><br><span class="line"><span class="comment">    z_149 := TreeNode&#123;Id : 445205 , ParentId :  445200 , Name : "惠来",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_149 )</span></span><br><span class="line"><span class="comment">    z_150 := TreeNode&#123;Id : 441208 , ParentId :  441200 , Name : "高新",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_150 )</span></span><br><span class="line"><span class="comment">    z_151 := TreeNode&#123;Id : 440306 , ParentId :  440300 , Name : "蛇口",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_151 )</span></span><br><span class="line"><span class="comment">    z_152 := TreeNode&#123;Id : 440307 , ParentId :  440300 , Name : "坪山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_152 )</span></span><br><span class="line"><span class="comment">    z_153 := TreeNode&#123;Id : 440505 , ParentId :  440500 , Name : "濠江",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_153 )</span></span><br><span class="line"><span class="comment">    z_154 := TreeNode&#123;Id : 441808 , ParentId :  441800 , Name : "连山",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_154 )</span></span><br><span class="line"><span class="comment">    z_155 := TreeNode&#123;Id : 440806 , ParentId :  440800 , Name : "遂溪",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_155 )</span></span><br><span class="line"><span class="comment">    z_156 := TreeNode&#123;Id : 441306 , ParentId :  441300 , Name : "惠城",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_156 )</span></span><br><span class="line"><span class="comment">    z_157 := TreeNode&#123;Id : 445305 , ParentId :  445300 , Name : "云城",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_157 )</span></span><br><span class="line"><span class="comment">    z_158 := TreeNode&#123;Id : 441703 , ParentId :  441700 , Name : "阳东",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_158 )</span></span><br><span class="line"><span class="comment">    z_159 := TreeNode&#123;Id : 441307 , ParentId :  441300 , Name : "仲恺新区",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_159 )</span></span><br><span class="line"><span class="comment">    z_160 := TreeNode&#123;Id : 440308 , ParentId :  440300 , Name : "光明",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_160 )</span></span><br><span class="line"><span class="comment">    z_161 := TreeNode&#123;Id : 440208 , ParentId :  440200 , Name : "城区",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_161 )</span></span><br><span class="line"><span class="comment">    z_162 := TreeNode&#123;Id : 441503 , ParentId :  441500 , Name : "海丰",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_162 )</span></span><br><span class="line"><span class="comment">    z_163 := TreeNode&#123;Id : 440904 , ParentId :  440900 , Name : "电白",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_163 )</span></span><br><span class="line"><span class="comment">    z_164 := TreeNode&#123;Id : 440111 , ParentId :  440100 , Name : "海珠",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_164 )</span></span><br><span class="line"><span class="comment">    z_165 := TreeNode&#123;Id : 441928 , ParentId :  441900 , Name : "洪梅",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_165 )</span></span><br><span class="line"><span class="comment">    z_166 := TreeNode&#123;Id : 440309 , ParentId :  440300 , Name : "罗湖",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_166 )</span></span><br><span class="line"><span class="comment">    z_167 := TreeNode&#123;Id : 440506 , ParentId :  440500 , Name : "龙湖",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_167 )</span></span><br><span class="line"><span class="comment">    z_168 := TreeNode&#123;Id : 440807 , ParentId :  440800 , Name : "廉江",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_168 )</span></span><br><span class="line"><span class="comment">    z_169 := TreeNode&#123;Id : 441704 , ParentId :  441700 , Name : "江城",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_169 )</span></span><br><span class="line"><span class="comment">    z_170 := TreeNode&#123;Id : 441705 , ParentId :  441700 , Name : "阳春",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_170 )</span></span><br><span class="line"><span class="comment">    z_171 := TreeNode&#123;Id : 440310 , ParentId :  440300 , Name : "龙华",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_171 )</span></span><br><span class="line"><span class="comment">    z_172 := TreeNode&#123;Id : 440209 , ParentId :  440200 , Name : "始兴",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_172 )</span></span><br><span class="line"><span class="comment">    z_173 := TreeNode&#123;Id : 440112 , ParentId :  440100 , Name : "花都",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_173 )</span></span><br><span class="line"><span class="comment">    z_174 := TreeNode&#123;Id : 440905 , ParentId :  440900 , Name : "雷州",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_174 )</span></span><br><span class="line"><span class="comment">    z_175 := TreeNode&#123;Id : 440604 , ParentId :  440600 , Name : "南海",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_175 )</span></span><br><span class="line"><span class="comment">    z_176 := TreeNode&#123;Id : 441604 , ParentId :  441600 , Name : "和平",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_176 )</span></span><br><span class="line"><span class="comment">    z_177 := TreeNode&#123;Id : 440507 , ParentId :  440500 , Name : "金平",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_177 )</span></span><br><span class="line"><span class="comment">    z_178 := TreeNode&#123;Id : 441929 , ParentId :  441900 , Name : "大朗",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_178 )</span></span><br><span class="line"><span class="comment">    z_179 := TreeNode&#123;Id : 441605 , ParentId :  441600 , Name : "龙川",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_179 )</span></span><br><span class="line"><span class="comment">    z_180 := TreeNode&#123;Id : 441930 , ParentId :  441900 , Name : "横沥",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_180 )</span></span><br><span class="line"><span class="comment">    z_181 := TreeNode&#123;Id : 441931 , ParentId :  441900 , Name : "东坑",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_181 )</span></span><br><span class="line"><span class="comment">    z_182 := TreeNode&#123;Id : 440406 , ParentId :  440400 , Name : "横琴",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_182 )</span></span><br><span class="line"><span class="comment">    z_183 := TreeNode&#123;Id : 441932 , ParentId :  441900 , Name : "沙田",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_183 )</span></span><br><span class="line"><span class="comment">    z_184 := TreeNode&#123;Id : 441504 , ParentId :  441500 , Name : "陆丰",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_184 )</span></span><br><span class="line"><span class="comment">    z_185 := TreeNode&#123;Id : 440605 , ParentId :  440600 , Name : "禅城",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_185 )</span></span><br><span class="line"><span class="comment">    z_186 := TreeNode&#123;Id : 441933 , ParentId :  441900 , Name : "谢岗",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_186 )</span></span><br><span class="line"><span class="comment">    z_187 := TreeNode&#123;Id : 441606 , ParentId :  441600 , Name : "连平",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_187 )</span></span><br><span class="line"><span class="comment">    z_188 := TreeNode&#123;Id : 440906 , ParentId :  440900 , Name : "信宜",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_188 )</span></span><br><span class="line"><span class="comment">    z_189 := TreeNode&#123;Id : 441209 , ParentId :  441200 , Name : "封开",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_189 )</span></span><br><span class="line"><span class="comment">    z_190 := TreeNode&#123;Id : 50000 , ParentId :  440603 , Name : "难难难",&#125;</span></span><br><span class="line"><span class="comment">    zone.AddNode(&amp;z_190 )</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    zone.CreateTree()</span></span><br><span class="line"><span class="comment">   	zone.WriteToFile()</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line"></span><br><span class="line">	z_190 := TreeNode&#123;Id : <span class="number">50000</span> , ParentId :  <span class="number">440603</span> , Name : <span class="string">"难难难"</span>,&#125;</span><br><span class="line">    zone.AddNode(&amp;z_190 )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//z_191 := TreeNode&#123;Id : 50001 , ParentId :  440603 , Name : "难难难",&#125;</span></span><br><span class="line">    <span class="comment">//zone.AddNode(&amp;z_191 )</span></span><br><span class="line">	<span class="comment">//zone.UpdateNode(&amp;z_190, &amp;z_191)</span></span><br><span class="line">	<span class="comment">//zone.CreateTree()</span></span><br><span class="line">	<span class="comment">//zone.WriteToFile()</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">//zone.CreateTree()</span></span><br><span class="line">	<span class="comment">//zone.WriteToFile()</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">//fmt.Println("更新1", zone.FindChildIdByAreaId(440600))</span></span><br><span class="line"></span><br><span class="line">	z_192 := TreeNode&#123;Id : <span class="number">50000</span> , ParentId :  <span class="number">441900</span> , Name : <span class="string">"难难难"</span>,&#125;</span><br><span class="line">    zone.UpdateNode(&amp;z_190, &amp;z_192)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">"更新2"</span>, zone.FindChildIdByAreaId(<span class="number">440600</span>))</span><br><span class="line">	fmt.Println(<span class="string">"更新3"</span>, zone.FindChildIdByAreaId(<span class="number">441900</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
        <tag>golang</tag>
      </tags>
  </entry>
</search>
